The Project Gutenberg EBook of The Silicon Jungle, by David H. Rothman

This eBook is for the use of anyone anywhere in the United States and most
other parts of the world at no cost and with almost no restrictions
whatsoever.  You may copy it, give it away or re-use it under the terms of
the Project Gutenberg License included with this eBook or online at
www.gutenberg.org.  If you are not located in the United States, you'll have
to check the laws of the country where you are located before using this ebook.

** This is a COPYRIGHTED Project Gutenberg eBook, Details Below **
**     Please follow the copyright guidelines in this file.     **


Title: The Silicon Jungle

Author: David H. Rothman

Release Date: March 16, 2017 [EBook #54360]

Language: English

Character set encoding: UTF-8

*** START OF THIS PROJECT GUTENBERG EBOOK THE SILICON JUNGLE ***




Produced by KD Weeks, Juliet Sutherland and the Online
Distributed Proofreading Team at http://www.pgdp.net






------------------------------------------------------------------------

                          Transcriber’s Note:

This version of the text cannot represent certain typographical effects.
Italics are delimited with the ‘_’ character as _italic_. The text
utilized a variety of fonts, effects which cannot be represented here.

Footnotes have been resequenced to be unique within the text. They have
been moved to follow the paragraphs in which they are referenced.

Minor errors, attributable to the printer, have been corrected. Please
see the transcriber’s note at the end of this text for details regarding
the handling of any textual issues encountered during its preparation.


“David Rothman’s SILICON JUNGLE is an aphrodisiac for anyone interested
in the computer revolution. There is a real sense of self-liberation for
the reader, in whose mind the dawn lights up the incredible, awful,
wonderful reach of the little computer chip.”

                                                 William F. Buckley, Jr.

“Everything you’ve always wanted to know about computers but were afraid
to ask for fear of not getting a straight answer in plain English. David
Rothman is Indiana Jones, guiding us through the hype, hardware,
software, and confusing jargon of THE SILICON JUNGLE.”

                                                  Bettina Gregory
                                                  ABC News Correspondent
                                                  and IBM PCXT owner

“David Rothman’s SILICON JUNGLE is an inspired, fast-paced, often
maniacal view of today’s microcomputer scene. While laced with hard
facts, Rothman’s anecdotal style makes the book fun reading. The perfect
book for the newcomer to the scene and the old-timer lost in the
jungle.”

                                            John C. Dvorak
                                            Technology columnist,
                                            _The San Francisco Examiner_
                                            and _InfoWorld_

“THE SILICON JUNGLE has proved helpful in both my business and personal
use of computers. It is down-to-earth, easy to understand, and has made
me and my computers better friends.”

                                           Ellen R. Gordon, President
                                           Tootsie Roll Industries, Inc.

“THE SILICON JUNGLE is an insightful book that provides a foundation for
dealing with the complicated world of personal computers.”

                                                      Chris Christiansen
                                                      Senior Analyst
                                                      The Yankee Group

“Of all the books about computers, THE SILICON JUNGLE is the best I’ve
seen.... Fun to read and Instructional as well. David Rothman not only
blazes a sure path through the jungle, but he has told us almost
everything there is to tell about the computer world at this point—and
told it very well.”

                                                    Jerald F. Terhorst
                                                    Ford Motor Executive




                            DAVID H. ROTHMAN

                                 _The_
                                SILICON
                                 JUNGLE








                      BALLANTINE BOOKS · NEW YORK








Copyright © 1985 David H. Rothman

All rights reserved under International and Pan-American Copyright
Conventions. Published in the United States by Ballantine Books, a
division of Random House, Inc., New York, and simultaneously in Canada
by Random House of Canada Limited, Toronto.

Library of Congress Catalog Card Number: 85-90645

ISBN 0-345-32063-8

Manufactured in the United States of America

First Edition: July 1985




                               WITH LOVE
                                   TO
                       HARRY AND HORTENSE ROTHMAN


            Special thanks to Michael Canyes, Mack Truslow,
      David Fay Smith, Don Carrol, Robert B. Wyatt, Richard McCoy,
      Frank Lavena, Pat Ehresmann, Ruth Aley and Berenice Hoffman


                                Contents

         1   •   The Silicon Jungle                                 1

         2   •   The Kaypro Phenomenon: How Solana Beach Took
                 on Silicon Valley                                 14

         3   •   After the War                                     36

         4   •   WordStar: The Creators                            45

         5   •   The Select Word Processor: Martin Dean versus
                 the Command-Driven Restaurants                    65

         6   •   Three Software Stories: Motorcycles, Homes,
                 and the $200,000-a-Year Disk                      73

         7   •   Graphics (or How a Mouse Helped Joe Shelton’s
                 Friends Stop Feeling Like Rats)                   93

         8   •   People: The Who-How Solution                     100

         9   •   The Hal Syndrome                                 128

        10   •   Jewels that Blip                                 163

        11   •   Wired to Work                                    200

        12   •   How I Found “God” on MCI (and a Few Other Odds
                 and Ends About Electronic Mail)                  228

        13   •   Net Gain$                                        234

        14   •   As the Jungle Thickens (AKA the Great
                 Modeming)                                        249

       Afterword                                                  271

        BACKUP • More Tips and Tales from the Jungle              279

      BACKUP I • Twenty-Six Questions to Ask at (and About) the
                 Computer Store                                   281

     BACKUP II • A Few Grouchy Words on Printers                  294

    BACKUP III • The Lucky 13: What to Look for in Choosing
                 Software                                         302

     BACKUP IV • On the Evolution of Software (and a “Perfecter
                 and Perfecter” Program)                          310

      BACKUP V • “3-D” versus Mail-Order Software—and How to
                 Shop                                             319

     BACKUP VI • “Easy” Data Bases: Another View (Mensa Member
                 Versus InfoStar)                                 323

    BACKUP VII • Graphics Tips                                    331

   BACKUP VIII • Consultant Contracts: Some Who-How Questions     339

     BACKUP IX • Window Shopping                                  343

      BACKUP X • Of Mice and Men—and Touch Pads, Touch Screens,
                 Etc.                                             346

     BACKUP XI • The Micro Connection: Some Critical
                 Explanations                                     349

    BACKUP XII • MODEM7: An Almost-Free and Fairly Easy Way to
                 Talk to Other Computers                          354

   BACKUP XIII • Why Not an Electronic Peace Corps?               366

     INDEX   •                                                    375

                                 _The_
                                SILICON
                                 JUNGLE




                         1 ❑ The Silicon Jungle


Americans are fighting each other not just in the marketplace but also
in the Silicon Jungle.

The jungle isn’t greenery. It isn’t land. It’s nothing more than the
mineral in tiny computer chips that switch electronic impulses.

But a jungle it is:

● Airline X accused Airline Y of electronically sabotaging X’s
  reservations operation and contributing to a $733-million bankruptcy.
  The charges may have been false. But their very existence dramatized
  the increasing link between computer security and corporate survival.

● Car thieves have computerized to keep better track of hot auto parts.
  That’s bad news not only for police but also for rival thieves with
  antiquated record keeping. Meanwhile, a hooker ring, too, has
  automated. And a gambling operation analyzed its profits daily through
  a big computer hooked up to smaller ones in forty-three cities.[1]

● An editor confesses he snooped on the competition by figuring out the
  computer password of Brand X newspaper (“it’s like playing Scrabble—a
  matter of time and an interested mind”).

● Millions of more scrupulous Americans are increasingly relying on
  micros to outwit their rivals.

Footnote 1:

  _Computerworld_, July 23, 1984, is the source of the reports on
  criminals’ use of computers.

Consider two deadline-ridden lawyers locked in combat over the same
case. Lawyer A might ferret out legal precedents through eye-straining
research at libraries, while B could cover the same territory in minutes
through the right taps on a new IBM personal computer.

Siliconized war is “in” between and among giants and gnats.

“One hundred years ago in Colorado, the Colt .44 was a great equalizer,”
a westerner once said; now he said his suitcase-sized micro was.

Today better machines sell for around $1,000. With trimmings they can:

● Electronically zip messages to other computers and people across the
  country.

● Be word processors, doubling some writers’ production.

● Prepare spreadsheets, which help businesses quickly calculate the
  future costs of providing products or services.

● Keep records electronically.

● Help you whip up jazzy charts to whet your boss’s interest in your
  work—in a nice way.

This book will tell you how to make the best use of portables and other
business computers wherever you are—large company, small, or on your
own. Big bureaucracy is here, also, complete with the Case of the
Missing Cafeteria (explained in Chapter 7).

Instead of hearing just about computers in the abstract, you’ll learn
about them in life. Arthur C. Clarke, the world-famous science-fiction
novelist who wrote _2001_ and _2010_, will tell how WordStar software
made him “a born-again writer.” And the FBI, top consultants, and a
felon named Captain Zap will warn against electronic crooks.

There’ll be computer tips, too, from obscure but savvy business people,
such as a New York real estate executive whose micro skills lead to his
six-figure income.

You’ll also hear from some stars of the industry, including WordStar’s
creators, and you’ll learn how their lives and philosophies tie in with
the products on sale at your local computer store.

We begin with the Ten (Micro) Commandments:

                    DON’T FALL FOR THE SOFT SELL—OR
                               HARD SELL.
                   THE COMPUTER BUSINESS IS A JUNGLE.

“This machine here is a Mercedes,” a Radio Shack man once told me.
“Apple’s the Ford. You want to buy a Mercedes or a Ford?”

How do you cut through the hype to buy a machine that is better than
your competitor’s?

You’ve got your own jungle to survive, and, by learning how computer
firms make and market their offerings, you’ll be a better shopper.

Especially beware of the computer hawker who says he’s a “technician”
with your interest in mind.

                      BUT REMEMBER THAT GOOD GUYS
                           CAN FINISH FIRST.

The New York executive saved his blue-chip company a fortune and won his
$100,000-plus salary without firing anyone, groveling before his boss,
or cheapening a product or service.

By picking the right computer or program, you just might get a head
start on the office toady.

                   AVOID THE SNACK-FOOD PROGRAMS—THE
                           ONES EASY TO LEARN
                      BUT LESS SATISFYING TO USE.

With press agents and flashy boxes for disks, the software market is
going Hollywood.

It’s also, however, becoming more like the cupcake industry—geared not
to nourish but to please instantly.

Some marketeers are trying to displace good, solid business programs
with Twinkie-like products that _sell_ well but don’t _work_ well.

                         LEARN ABOUT COMPUTERS
                      AS THEY RELATE TO YOUR JOB.

Normally, you and your employees needn’t become true computer experts.

In most cases you’ll lack the time or talent to write the programs you
need to be fully competitive. Very likely you can use off-the-shelf
software instead.

Also, you can find the right computer consultant and carefully oversee
his work; this book will help you avoid gobblers.

                         BE HUMANE—PROFITABLY.

Micros can be efficient and humane at the same time. Don’t confuse _The
Silicon Jungle_ with _Winning through Intimidation_. Often, for
instance, some humanity can improve your efficiency by lowering the
number of errors your people may make. This book tells how to choose
equipment that’s easiest on your people’s eyes and backbones.

                     BONE UP ON COMPUTER CRIME—BUT
               DON’T NEGLECT ROUTINE WAYS OF MAKING YOUR
                        ELECTRONIC RECORDS SAFE.

You should worry about computer crime, while not neglecting
garden-variety problems of “data security,” like coffee spilled on
floppy disks.

Pity a poor wedding-cake maker. The other day on the radio I heard that
he couldn’t fill his orders because a forgetful computer had wiped them
from its memory.

                       “WIRE IN” TO TELECOMMUTING
                         IF IT’S RIGHT FOR YOUR
                        COMPANY—AND PERHAPS SAVE
                       THOUSANDS IN OFFICE RENTS.

Working at home on a computer isn’t for everyone. Some jobs will always
require face-to-face contact.

Telecommuting, however, is a nifty new way to gain an edge on the
competition while ending some workers’ rush-hour woes. Say, you now
spend $4,000 annually on rented space for each employee. Allowing home
work may save you more than $8,000 per telecommuter, totaled up over
five years, if your tax rate is 35 percent.

                          REJOICE! MOST LIKELY
                          YOU’LL JUSTIFY YOUR
                                TRAVAIL.

Computerization is harder than your friendly computer store might lead
you to believe, but most likely you’ll justify your travail.

Someone once said he never knew of an author who gave up his computer
and returned to a pen. I’ll buy that.

                            THROUGH IT ALL,
                    KNOW WHAT THE OTHER GUY’S UP TO.

You’re better off if you know what the other guy—or woman—is up to.

This book is, frankly, for top executives and mid-level people, small
businessmen, and professionals. And if your employees read it? Well, so
much the better.

“You” here is many people.

Some of my most enterprising readers, by the way, won’t just be
interested in computers for themselves or their companies. They’ll also
see them as marketing opportunities involving the rest of the world.

Take Mike Bell, a Xerox executive. We talked about munytels—neighbor
centers offering child care and other services for people “commuting” to
the office via computer. And Mike had an idea. Why not _franchise_ the
munytels like McDonald’s hamburger stands? Maybe Xerox will start a
Munytel Division.

The “other guy” principle also applies to small businessmen selling to
the Xeroxes of this world. If you know how the data-processing people
think in a large corporation, you may be more understanding if you’re
having problems hooking up to a large customer’s computer.

Likewise, the “other guy” idea can help businessmen keep up with
competitors and appreciate their own employees’ computer-related fears.

In short, this book is for people who want to survive—and make money—by
_listening_.

Ranging over many topics, it may come across as a series of essays
rather than a normal guide. So be it. I’m not going to cheat you of
helpful facts that _most_ readers won’t care about or that are far
removed from the main thrusts of the chapters. You may be desperate for
this very material. And items at the ends of the chapters will refer you
to “Backup: More Tales and Tips from the Jungle.” “Backup” follows my
main book.

                 =BREAK OUT OF THE USERS-GUIDE GHETTO.=

You already have. _The Silicon Jungle_ is for owners and prospective
owners of Radio Shacks, Apples, IBMs—all kinds of machines.

_Do_ buy a guide for your model of computer or your pet software
program; this book isn’t a replacement.

It offers, however, more detachment than a guide touting the virtues of
a single machine. I’ll write about the computer I own—yes, I have my
biases—but it’ll be as an example, not as the final answer. Frankly,
_for graphics work alone_, my Kaypro II would not suffice. The screen
isn’t good enough. The Kaypro’s electronic brain just is not very
visually inclined, and all in all, I’d be far better off doing charts
with an Apple Macintosh.

Many good paths wind through the Silicon Jungle.

                            ■      ■      ■

There’s no doubt—the computer business _is_ a jungle. While I was
writing this book, Osborne Computers filed for bankruptcy under Chapter
XI. “I’m just devastated,” said Adam Osborne. The previous year, his
firm had sold 110,000 portable computers listing at $1,795.

I, too, was sorry he’d failed. Osborne’s was the first company to
produce a bargain-priced business computer with good, free software
thrown in. If his company hadn’t revived itself under new management,
the industry would have offered buyers that much less choice.

Part of Osborne’s problem were his marketing blunders. Also, however, an
arch rival, Kaypro, had come out with a better machine. I bought one.

Chapters 2 and 3 tell how Kaypro has fought Osborne and other foes—wars
of interest to you, since you’ll win a better deal if you know about
micro-makers and the origins of their computers. While this chapter and
the next one focus on Kaypros, much in them would apply to other
machines.

Most microcomputers don’t emerge from tile-floored laboratories;
instead, they come from companies that refine existing technology and
carve out niches in the marketplace. But what’s “refine”? High tech is
enough of a gamble for the more solid computer makers. Shakier ones can
be reckless, and often at customers’ expense. A newspaper perceptively
observed, “Computers are hyped before they’re ready, announced before
they’re shipped and sometimes outdated and outpriced before they reach
retailers’ shelves.”

I’ll try to _help_ you find the machine that’s best for you—not
necessarily the one that computer hustlers envision on your desk.
Beware:

● In Maryland, a sail maker ended up with a micro useless as anything
  but an anchor.

● A midwestern company sued a major micro maker for $456,000 because an
  $8,000 computer allegedly didn’t perform as advertised.

● A construction executive invested over $9,000 in a name-brand computer
  but could do next to nothing with it, while a colleague was making out
  fine with a little Zenith micro selling for around half the price.

“I’ve seen too many company presidents march through there hoping to
make a final decision in less than an hour,” said a sales manager at a
Michigan computer store. “In almost every case he’s ended up paying
either too much for the right equipment or too little for the wrong
equipment.”[2]

Footnote 2:

  The Michigan quote comes from a magazine article by Washington writer
  Joel Makower.

Just as important as the hardware—the computers and other machines—are
the programs on those plastic disks. In fact, you should even think
“software” before you do hardware, because your machine will be useless
if it doesn’t do the tasks you want it to. And the programs supply these
necessary instructions. More than thirty thousand programs for micros
are on the market; so _The Silicon Jungle_ can’t say which one is
exactly right for you, but it can help you find out for yourself by
showing how a software classic comes into existence.[3]

Footnote 3:

  Chris Christiansen, with the Yankee Group, a Boston-based marketing
  research firm, offered the estimate on the number of programs.

I talked to Seymour Rubinstein and Rob Barnaby—the subjects of Chapter
4, “WordStar: The Creators”—and learned that Barnaby and I had some
common work habits. Maybe that’s why I like WordStar so much. I feel as
if the people behind it used ESP to discover how I liked to move words
around on my spooky green screen.

Some complain that WordStar is too complex. I disagree. New versions of
WordStar and other programs, however, will become simpler to learn as
the machines themselves grow more powerful. The new WordStar 2000 is an
example.

Smart production-minded buyers meanwhile should avoid the
“user-friendly” software that’s easy to learn but hard to use. One
example is the Select, a clunky word processor discussed in Chapter 5
after WordStar. I expressed my loathing with my wallet. Although Select
came free with my Kaypro, I junked it. Had I not spent my $250 on
WordStar, I would have taken much, much longer to write this book.[4]

Footnote 4:

  Kaypro, too, junked Select. Select Information Systems claims that’s
  because Kaypro wanted a cheaper word processor. Kaypro says it was
  unhappy with Select because it didn’t work right with some printers.

In Chapter 6, “Three Software Stories,” businessmen tell how they
coexisted—or didn’t—with their software. One of them is the New York
real estate executive mentioned earlier. He saved his new employer
$200,000 a year by boning up on software and using micros rather than
expensive time and an outside company’s mainframe. A Maryland
construction executive did well, too. He thinks his software knowledge
helped him snare a new job as a company president with one-third
interest in the firm. Like the New Yorker, he successfully concentrated
on micros as they related to his job. Another man, an accountant good at
his work but uneasy around computers, offers some observations on the
failings of existing software and his difficulties finding the right
program.

Graphics will be one of the hotter software topics over the next few
years, now that cheap computers can do more visual tricks. And in
Chapter 7 and Backup VII, you’ll learn (1) the basics, (2) when charts
are worth the trouble, and (3) how to select the best programs in that
category. Most existing computer guides are overly technical about
graphics, or they just about shun the subject. That’s too bad. Graphics
can actually save your company money; computerized charts can help you
set priorities and keep your projects on schedule. At times, too, there
are other advantages. A little Macintosh won’t replace your art
department, but it might enable you to whip up flashy graphs to impress
your customers.

Even with the supposedly simple Mac-style machines, however, you may
still need a good consultant—one of the topics of Chapter 8, “People.”

He or she can help you select the right software, for instance, or teach
you how to use it. But you can’t always trust credentials, and here
you’ll read of a young company that wasted $40,000 on the wrong
consultants and their bungles. One man was so learned in computers that
he had helped design the systems on an aircraft carrier, yet he lacked
the exact technical expertise to help the company get _its_ work done.

My old newspaper in the Midwest made another people-type mistake,
letting a computer expert befuddle staffers with technical jargon. A
white-haired editor suffered especially. Although he knew his town
better than did just about any other newsman and had been a fixture in
the scruffy city rooms since World War II, the paper exiled him from the
copy desk after the training program failed him. His health gave out
amid the strain, and he ended up on extended sick leave, done in partly
by the course’s scary talk of bits and bytes. You use a calculator
without being—as one man put it—“calculator literate.” Why must you be
“computer literate”? Be so if you’re an aspiring programmer or if you
enjoy computers as a hobby. If, however, you don’t, well, forget it.
Instead, simply concentrate on (1) finding the right experts for the
grubby technical chores and (2) helping yourself and your employees
learn _the programs of use on the job_.

You can also treat people well by guarding against “The Hal Syndrome.”
I’ve named Chapter 9 after the uppity computer in _2001_ and _2010_.

The best weapons against Hal are good, common-sense ones, like viewable
screens and easy-to-use keyboards, which can cut down on headaches and
backaches. Forget about the white tiles and bright fluorescents you see
in traditional computer rooms. They can torture your eyes. As for
keyboards, you’ll learn the wisdom of using the detachable kind, which
makes it easier for you to be the right distance from both the keyboard
and the screen. Why not buy equipment that can adjust to both your eyes
and your back? Foreigners caught on to this issue much more quickly than
we did; some European firms even sawed the keyboards off American-made
terminals. And now U.S. workers are demanding action. “They affected my
stomach quite a bit,” a former insurance company worker says of the
machines that caused her to quit her job. “Most days I worked I would
throw up in the ladies room.” Whether you use micros or big computers,
you’ll get more work out of people—and be able to hire better ones—if
the equipment is comfortable to use. Still another precaution against
Hal is good job design. See if you can rotate your employees’ computer
work with other duties to reduce the stress of being at the keyboard all
day.

In the Hal Syndrome chapter, you won’t simply read academic wisdom.
Instead, you’ll hear about the true health and safety concerns of people
working the computer keyboards—eminently valid worries in many cases.

And you’ll read in an accompanying backup about another hot topic in
this era of contact between man and machine. It’s the =mouse=, the
palm-sized gadget that you push along your desktop to guide the =cursor=
(the little blinking line or other marker that shows where you’re typing
on the computer screen).

Some manufacturers love the mouse as a marketing gimmick. And it’s
indeed nice for graphics. If you’re a writer or secretary, however, and
if you lack three hands, you may be better off mouseless. Why? See
Backup X, “Of Mice and Men.”

I’ll also try some candor on another touchy topic—computer crime.

In Chapter 10, “Jewels that Blip,” you’ll learn how to protect your
company secrets inside your computer and how to prevent the machines
from suffering amnesia and destroying electronic records. Although
electronic Willie Suttons exist, your real worries are often mundane.
This book won’t keep you from spilling coffee on a floppy disk, but it
will tell how, using good software and good habits, you can help ward
off both crooks and accidents.

Much of Chapter 10 is about larger computers, and quite logically so.
Increasingly, your micros will be talking to mainframes, as the big
machines are called, and your facts are only as safe as the electronic
repositories where you store them.

Computer security will particularly matter in the era of telecommuting,
a subject covered in Chapter 11, “Wired to Work,” which will show you
how “electronic cottages” often can be both productive and humane.

A California professor says by 1990 as many as 10 million U.S. workers
could be tapping away on keyboards at home. In Chapter 11, you’ll learn
how you may be able to “telecommute” within weeks or months if (1) your
boss and company are sympathetic and (2) your office politics permit you
to do so without harming your career. Why wait for official
telecommuting programs from corporate headquarters? Chapter 11 advocates
nothing less than a grass-roots telecommuting movement by corporate
writers, programmers, salespeople, and working mothers. Toting up the
savings that telecommuting can yield, more and more corporations will
encourage experiments. Many people—though not all—thrive on it.

“It seems foolish for me to get in a car to go to an office,” said a
Washington-area telecommuter, “if I can go to that office by phone.”
Without the wear and tear of rush-hour driving he became more
productive.

You needn’t telecommute every day. The chapter, in fact, starts with the
example of the rush-hour hater who made it a point to keep up with the
office crowd in person on occasion.

Chapter 12, “How I Found ‘God’ on MCI (and a Few Other Odds and Ends
about Electronic Mail),” tells more about sending computer messages over
the phone lines. Some E-mail nets even link up with the old Telex
networks. During the writing of this book I corresponded via computer
with people ranging from William F. Buckley, Jr., to Captain Zap and the
MCI mail-Telex connection transmitted last-minute changes to my
publisher.

In Chapter 13, “Net Gain$,” you’ll learn how different computers in your
own office can share the same programs and exchange information without
people constantly having to carry floppy disks from one desk to another.
A Michigan company may be enjoying as much as DLR $1,000 a year more in
effective work time from each staffer as a result of its internal
computer net.

Of course, with today’s imperfect technology, such hookups can be a real
struggle. But so often they’re worth it.

You could say the same, indeed, of micros in general—today and in the
future.

It seemed especially true when, for my last chapter, I tried to reach
Arthur Clarke’s micro in Sri Lanka. I wanted him to answer questions
about microcomputers in 2001—the year in which his Hal was killing
humans. Did our phone-computer connection succeed? Read Chapter 14, “As
the Jungle Thickens.”

Struggles notwithstanding, computers often _do_ pay for harried
professionals and business people. “This $5,000 machine has saved me
from hiring a $20,000-a-year assistant,” said a New York investment
adviser using an IBM PC to write reports and make financial calculations
at home. A young trader forsook the bedlam at the New York Cotton
Exchange for an electronic office in his apartment. Now he can go to
work in his bathrobe and delay his shower until lunchtime. “It’s more
challenging this way,” he said. “More contemplation, less raw
instinct.”[5]

Footnote 5:

  The examples of the investment adviser and cotton trader come from
  _New York_ magazine.

Another self-employed man, Jimmy Carter, composed his memoirs on a word
processor—perhaps inspired by the example of a former Carter speech
writer who wrote a well-reviewed book on national defense.

Then there’s Isaac Asimov, the legendary science-fiction novelist, who,
even with an ancient manual, could write faster than the old Teletype
machines could clatter along. But he didn’t always produce the neatest
copy. “How different now!” he exulted in an article. “Staring at a page
of type on a television screen, I eagerly look for typos so I can have
the fun of changing them.” You needn’t be a professional author,
however, to benefit from computerized writing. In Maryland, an
architect-consultant, once typewriter shy, is now churning out reports
several hundred pages long on his IBM PC.

“A boon to the small businessman” is how Hugh Hunt, a son of the late
oilman H. L. Hunt, described micros. “Now he can compete with the larger
corporations as far as obtaining data and processing it quickly.”

Hunt himself was using portable computers in his land-development
business. But he also noted their helpfulness in law:

“Computers are one of the ways that small attorneys can compete with
large corporations. By joining a computer bank, they can research briefs
and do word processing, just as the large companies can.”

Many Americans apparently shared his views. In 1985, they might buy six
million computers for business use, and within two more years, that
number might almost double.[6] While I was writing this book, the United
States was emerging from the worst economic ordeals since the Great
Depression; a few college graduates had been reduced to shopping-bag
ladies, but the microcomputer business was still growing, even if at a
reduced rate. You might wait three months or more for your Macintosh or
IBM. Some companies died, but others took their places; and even in
times of inflation most prices on micros were dropping; years would pass
before scientists could no longer keep dramatically increasing the
silicon chips’ powers. Forget about the physical smallness of the chips.
It was as if the entrepreneurs in Silicon Valley—in exploiting the
scientists’ advances—were opening up a vast electronic territory. “The
only thing you worry about with computers,” Hunt said, pleased, “is
‘Should I wait until something better comes along?’”

Footnote 6:

  The estimates of the number of business computer buyers come from the
  Yankee Group’s Chris Christiansen.

“I’m sort of a computer groupie,” said Art Buchwald, the syndicated
humor columnist. He was caught up in the new pornography of the era:
those luscious, ad-packed micro magazines crammed with the vital
statistics of IBMs and Apples. “It used to be that when _Playboy_
arrived at the house, my wife would say, ‘Your _Playboy_’s here,’”
Buchwald told an advertising magazine. “Now she says, ‘Your
_InfoWorld_’s here.’ I’m not sure which she prefers. I have a feeling
that _Playboy_, at least, she could discuss with me.”

It was like radio during the 1920s, this micro craze.

_Time_ had proclaimed the computer “Machine of the Year” in 1982, and I
recalled a song that a friend of my parents, an old woman, had written
years ago. “Marconi, Marconi,” the lyrics went, “the world is at your
feet.” How long until the novelty of microcomputers seems just as quaint
as that of radio? The parallels could be there. Two San Francisco-area
authors, Andrew Fluegelman and Jeremy Joan Hewes, in _Writing in the
Computer Age_, urged readers to “become full-fledged computer
citizens—as writers, poets, artists, musicians, programmers,
number-crunchers, networkers....” The Fluegelman-Hewes book was useful
and well done. But “computer citizens”? The phrase grated. I was a user
at the keyboard, a “citizen” in the voting booth.

Still, I could understand why Fluegelman and Hewes called themselves
“computer evangelists.” I felt the same way. After having brought us
Muzak and junk food, technology for once was making life better.

I say this with reservations. Educators correctly warned of the computer
literacy gap between Harlem and Scarsdale—of the dearth of machines in
the slums and the bounty in some suburbs. Rich and poor clashed at
school-board meetings. In my own county, Fairfax County, Virginia, a
well-off PTA reportedly saved up for micros, then withheld purchases
until it learned whether the school board would spend tax money helping
other schools catch up. And what about unemployment as automation cost
more jobs? Or U.S. firms using computer-satellite hookups to pipe in the
work of $3-an-hour clerks? The People’s Republic of China was even
preparing to sell programming skills to the rest of the world. A billion
_programmers_, maybe? So much for high tech as a refuge for the American
jobless.

How could you make computerization a joy to all? That was one answer
you’d never find in a computer store.

You could, however, set up the right retraining program for valued
employees to see them through automation. You could fight the Hal
Syndrome. You could work to end boring tasks. In short, you could do
your best to make your computers benefit both your employees and your
company’s earnings.




                       2 ❑ The Kaypro Phenomenon:
                        How Solana Beach Took on
                             Silicon Valley


As _The Silicon Jungle_ was lighting up my Kaypro screen one September
day in 1983, several similar machines were whirring and clicking in the
Washington offices of Walter Mondale’s presidential campaign.

Kaypros kept track of donations and the $18-million budget. They helped
churn out news releases, speeches, and letters to voters in important
primary states. Just eighty people worked at headquarters seven months
into the campaign; Kaypros and other affordable micros were a major
reason why Mondale wouldn’t need legions of back-room staffers in
Washington later on. I didn’t know if Mondale would win or lose the
primary, but whatever happened, it wouldn’t be for want of computing
power.

Forty-five miles away, near Baltimore, Kaypros at a Westinghouse plant
were receiving computer messages from defense installations abroad.
Other Kaypros sat on the desks of William F. Buckley, Jr., ex-Governor
Jerry Brown’s research director, and the president of Tootsie Rolls; and
still another, some months earlier, had helped study Barney Clark, the
first man with an artificial heart. A Kaypro in the Midwest was tracking
something else, the milk and manure output of cows.

All of us, Mondale’s people, the others, and I, had benefited from the
struggle between Adam Osborne and Andy Kay.

Osborne, a brash ex-columnist for computer magazines, had marketed the
first mass-produced portable computer. Andy Kay had soon followed with
the Kaypro.

Adam Osborne was a dark-haired, mustached man in his forties who enjoyed
toting his product within sight of photographers. His father, a British
missionary of unconventional stripe, had tried to convert Christians to
Hinduism. Nor did the younger Osborne himself blend into the crowd; he
founded his computer company in 1981 and was soon comparing himself to
Henry Ford and the Osborne 1 to the Model T. “I give you,” he said,
“ninety percent of what most people need.”

His rival, Kay, was shorter, about five feet seven inches, but also
slim; like Osborne, he had studied chemical engineering and was a
maverick and newcomer in the personal-computer business. There, however,
the resemblances ended. Kay was soft-spoken, graying, an old electronics
hand; his friends depicted him as a quality-obsessed engineer and
Osborne as a flashy marketing man. They said Osborne had seemed
technically incapable of making a good portable with a nine-inch screen.
Adam Osborne, in turn, spoke of Kay’s computer as if he were a
four-hundred-pound wrestler forecasting an instant demise for a foe:
“The Kaypro’s gonna die.”[7]

Footnote 7:

  “Gonna die” is from _Popular Computing_. The Osborne statements come
  from oft-repeated statements to newspapers or from magazines. “Mr.
  Osborne,” an aide said when I revealed that this chapter was on Brand
  X, “does not want to discuss the Kaypro.”

  Andy Kay himself did not speak to me in a normal interview. His
  literary agent-friend, William Gladstone, feared that it might
  conflict with a project of their own, and Gladstone sought to deny me
  ownership of quoted material. Normally I would have told him to stuff
  it, but I needed the right quotes to tell the full story of _my_
  computer. So Gladstone and I worked out a compromise. After I sent
  thousands of words of questions via my Kaypro over the phone lines, he
  obtained Kay’s replies on tape. I submitted follow-up queries when
  Kay’s answers did not satisfy me. Gladstone insisted on reading this
  chapter for accuracy but never tried to censor me; in fact, he was
  helpful and pleasant to deal with. He even brought this manuscript to
  the attention of a publisher he knew (although I placed it through my
  agents). Gladstone’s help, incidentally, didn’t influence my
  perception of the Kaypro II as better than the archrival Osborne. I
  bought a Kaypro at a time when “William Gladstone” was nothing more to
  me than the name of a nineteenth-century English statesman; I
  _already_ loved the company’s product. Just the same, determined not
  to write an extended press release, I’ve consulted with the
  corporation’s critics, and I have run this chapter past a _San Diego
  Union_ reporter named Dan Berger, who exposed some of Kaypro’s less
  admirable management practices. I’m as grateful to Dan as to Bill.

The computer magazines had portrayed Osborne as a lone maverick taking
on the Silicon Valley establishment with the portable that the rest of
the industry said couldn’t be built. But Kay claimed a similar idea had
hit him at the same time.

Andy Kay had seen his son-in-law struggling to carry an Apple and its
trimmings between home and office and decided that a market might exist
for a small machine for engineers, architects, and other professionals.
_Then_, Kay said, he had heard of the Osborne. Modifying their original
plans somewhat, his people at Non-Linear Systems had homed in on their
rival’s weaknesses, giving their own computer a better screen and a
better keyboard and the ability to store more data. Adam Osborne had
struck back with a jazzed-up version of his first machine. By 1983, many
other companies were in the fray, including Seequa Computer Corporation,
a Maryland manufacturer whose computer sold for less than $2,000 and ran
most IBM-style programs.

In mid-1983 an industry expert was saying Kay and Osborne might together
enjoy $200 million a year in micro sales at the retail level. That was
just a fraction of the $5-billion-a-year market for business micros, but
the two firms then seemed the largest makers of portables in the
$1,000-$2,000 range.[8] Their fight was pivotal. Lines were fuzzing
between economy business computers and the home machines; the winner of
the portable battle might go on to fight Apple and IBM, provided it
survived the onslaught of $1,000 computers that Japan was expected to
unleash. By the end of the decade, powerful portables with a quarter the
bulk of the Kaypro II might jam the shelves of the discount stores.

Footnote 8:

  The $200-million and $5-billion estimates came to me from Chris
  Christiansen of the Yankee Group, who said the latter figure might be
  very conservative. _InfoWorld_ quoted another research firm, InfoCorp,
  as saying that 527,000 portable computers were sold in 1982—and that
  5.1 million would be sold by 1987.

Kay waged his marketing war from several hillside buildings in Solana
Beach, a small town near San Diego, hundreds of miles south of Osborne
and the rest of Silicon Valley. His was a family business. Kay’s
personal housekeeper served salads and fruit juice in the corporate
lunch room, and his eighty-six-year-old father, known around the plant
as “Grandpa,” repaired electronic equipment and ran a forklift. Andy
Kay’s wife was secretary of the company. One son, David, was the
vice-president for marketing and had helped develop the Kaypro; a second
son worked in personnel, and a third ran the print shop; and Andy Kay’s
daughter and her husband had designed the buildings—which were now the
same light blue as the “KAYPRO II” lettering on the computer.
Altogether, some 450 people worked for Kay’s company by mid-1983. That
was more than twice the number a year earlier when the Kaypro II was
just hitting the market and Kay was counting on a mere $10 million in
sales.

Bulldozers were growling away amid the expansion, and the company
newspaper said equipment-cluttered grounds resembled a scene from a bad
disaster movie.

No longer was Kay a semiobscure maker of voltmeters and oscilloscopes
and other test equipment. Sales, once $4 or $5 million annually, were
barreling along toward $100 million. Even his company name soon
changed—from Non-Linear Systems to Kaypro—in recognition of the success
of the division making his hot new computer.

Wall Street and Andy Kay were getting to know each other. That summer
four million shares of common stock hit the market at $10 each; and the
prospectus said Arthur B. Laffer, the “Laffer Curve” economist, would
serve on the board of directors. Kay still owned most of the company
personally. And now, with the new money, he could give IBM and Apple a
better fight. “After 30 years in business,” _San Diego Magazine_ had
said, “he’s suddenly the new kid on the block, clutching under his arms
a couple of excellent bags of marbles.”[9]

Footnote 9:

  The _San Diego Magazine_ article appeared in May 1983.

Before the Kaypro, Kay hadn’t exactly been on the verge of starvation—he
owned an art-filled home overlooking the Pacific and gave to the local
symphony and other cultural causes—but now he’d reached the point where
his admirers were depicting him as a silicon-age Horatio Alger
character.

That’s a little exaggerated. Kay, though poor in his New Jersey days,
was never an orphaned newsboy toughing it alone.

“Grandpa” prodded Andy. Frank Kopischiansky—an Eastern European
immigrant and an ex-coal miner—worked in silk mills and wool factories
and as a chauffeur. Frank had come to the United States from what is now
Poland. Andy Kopischiansky would later become Andy Kay after his
original name baffled some colleagues at work and they kept calling him
“Kay” for short.

The Kopischiansky home lacked a bathtub. “But,” Andy recalled, “we
always had food, and I always had a nickel in my pocket.” Frank enjoyed
fixing broken-down cars and tinkering with electrical equipment, and
Andy himself built a shortwave radio when he was only twelve years old.
Math was another love. Andy even considered a career as an actuary after
Prudential Life told him he could eventually make $15,000 a year. “I
flipped out,” Andy said, “because it was a lot of money in 1935.” Frank
shrugged off the $15,000, however. “That’s not very much,” he said. The
words, incredibly, came from a man who seldom made more than $1,000 a
year during Andy’s youth and who sometimes earned just $15 a week.

Andy, growing up in Clifton, New Jersey, took it for granted he could
never afford college, but then the letters M.I.T. came up in a drafting
class.

“What’s that?” Andy asked. “I’ve never heard of the place.”

Frank had lost most of his savings in a bank crash, but his wife somehow
scraped up enough money to help Andy reach M.I.T. on a partial
scholarship. Andy graduated in 1940 with a bachelors degree in chemical
engineering, mathematics, and premedicine and worked for the Bendix
Corporation and several other companies before founding Non-Linear
Systems in 1953. Kay reached California through a job, although for
years he’d been hoping to enjoy the warm climate there. He started his
company in Solana Beach rather than Silicon Valley because he was
already working in the area. Osborne himself would found his own firm
while living in Berkeley—he’d locate it in Hayward, a medium-sized city
within twenty miles of the Valley proper, the Palo Alto-San Jose area
southeast of San Francisco.

For Non-Linear Systems Kay developed the world’s first commercially
successful digital voltmeter. It was the result of some memories from
World War II, when unskilled workers were constantly damaging
voltmeters and having trouble reading them accurately. Kay’s new
machine easily survived the careless. The instrument displayed numbers
and didn’t require workers to make a reading off the thin needle of a
conventional meter adjusted for the right voltage. “I don’t look at
myself particularly as an inventor,” Kay said. “I’m a solver of
problems. There are inventors who have many, many more ideas than I
get.” Instead, he tried to refine ideas in “ways that make sense from
an industrial-engineering standpoint and a customer standpoint.”

Kay’s digital voltmeter was perfect for the military and for the
National Aeronautics and Space Administration (NASA) and their
contractors; unskilled people could help test thousands of voltages on
American missiles. “The silos are full of our instruments,” he said. But
the NASA cutbacks of the Nixon era hit Non-Linear Systems hard.

“The seven vice-presidents went,” recalled a trade publication, “as did
their white Cadillacs.” Frank Kopischiansky was willing to help see
Non-Linear Systems through bad times, loaning thousands of dollars of
painfully saved money. But that was hardly enough to sustain a
corporation. What about the future? How to avoid the boom-and-bust cycle
of government spending?

Kay decided to carve out a niche as a maker of rugged portable test gear
for private industry. He wanted to offer many of the same wrinkles found
in costly, bench-bound equipment, and one of those features was a
microprocessor in a voltmeter: a miniature electronic brain that would
make it easier to use. The idea came from an old friend, Bill McDonald,
whom Kay had met decades earlier at M.I.T. Their gym lockers were next
to each other’s there; both men had loved handball and hated team
sports. McDonald, a husky man of basketball-player height, had worked
for Non-Linear Systems in the early 1950s, then had returned East, where
he had acquired a computer background. Then, in the late 1970s, he’d
rejoined Non-Linear Systems, where his friend Kay hoped he would help
develop a computer. Correctly or not, Kay believed that “ninety percent
of the electronics business was computer and ten percent was test
equipment, hi-fi, stereo, and stuff like that.” Non-Linear Systems had
offered other companies’ minicomputers in systems it packaged for
military contractors, but still wasn’t making machines of its own. Maybe
a small business machine would be one way to enter computerdom.

“Two months after Bill came to work for me,” Kay recalled, “he showed
me some microprocessor-based computers for doing accounts
payable-receivable at the local computer dealer’s place.

“They were very reasonable, so I bought some and was very intrigued with
them. And I wondered: ‘Why not make this stuff? I could make a better
disk drive. And look at this: this connector doesn’t work too well.’ And
Bill said, ‘We could make them, all right, but I don’t know where you’d
sell them.’ This was in late 1979. I said okay and dropped the idea.”

Two years later, however, Kay watched his architect son-in-law, Michael
Batter, struggling with an Apple and knew the time was ripe for an
easier-to-tote portable.

Kay tried VisiCalc, the electronic spreadsheet, on the Apple and came
away thinking the machine was too complicated, beyond being a hassle to
move from home to office. So Kay told Bill McDonald, “Listen, we’re
selling instruments to engineers. Let’s make a computer that we can walk
in to an engineer and set on his desk and say, ‘Hey, look at this. You
can use it.’”

Still, Kay worried about the new technology. “It’s a fairly stylized
dance,” McDonald reassured him in spring 1981. “You buy the chips, and
there is black magic in getting them to work—but not in how they work.”

“Okay,” came the reply, “that’s it. We’ll get rid of the disadvantages
of the Apple and cram our computer into one box without cables all over
the place.” In ads the Apple looked incredibly compact. Actually,
though, serious computer users needed disk drives to store large amounts
of information for quick retrieval. They also needed a TV-like monitor
to see the letters and numbers they typed out on the computer. And Kay
wisely wanted everything squeezed into one box. If you bought his
machine, you’d get the whole works except perhaps for the printer, which
spewed out your calculations or typed up your letter. Also, it would
cost you less than a full Apple system. Kay could bring down the cost of
a complete machine if he planned on every computer being one.

All this was the logical culmination of Kay’s skill in shrinking gear
for the military and aerospace industry. For years he had been making
printed circuit boards and filling them with components. And he could
order the disk drives, keyboards, and other special computer-type parts
from outside suppliers.

The way Kay tells it, he had no idea—at first—that he was about to take
on Adam Osborne. “It was six months,” he said, “before we ever saw
Osborne’s literature. He introduced his computer in March 1981, but I
didn’t know anything about it.” Some would question that statement, of
course, given the novelty of the Osborne 1 and its creator’s flair for
publicity.

Whatever happened—with Osborne in mind or not—Kay selected the same
basic technology and essentially similar parts.

                       A Z80-Style Microprocessor

A =microprocessor= is simply the main brains that tie together the
memory devices, the keyboard, and other parts of the computer. You can
also call it a =central processing unit= (=CPU=).

Okay, but why a Z80 in the Kaypro?

That’s simply a style of chip from a company called Zilog. “You could
buy those all over the place,” Kay said. “We wanted something proven and
reliable.” The Z80 was the only kind of CPU that could run =CP/M=
(=Control Program for Microcomputers=)-style programs, then an industry
standard.

The Z80, though, can’t handle programs as complicated as the newer 8088
chip that ended up in IBM PCs and countless clones. Here’s why.

A =bit= is a “1” or a “0.” Patterns of bits form =bytes=. And what’s a
byte? Nothing more than a letter or number. So how does this tie in with
the early Kaypro’s Z80 versus the IBM’s 8088?

Well, the Z80 processes information in =words= of only 8 bits at a time.
The 8088 in the IBM, however, gulps it down in 16-bit chunks and works
with larger memories—so that the IBM can run more complicated programs,
like the more elaborate electronic spreadsheets for forecasting profit
and loss. There’s another benefit, too. A 16-bitter doesn’t need to call
up programming information as often from the spinning floppy disks,
which are slower than the purely electronic memories.

The Kaypro II, however, won’t _immediately_ become a has-bit—er,
has-been. “Converting the Kaypro to a 16-bit machine is no big deal,”
Kay observed. In fact, several months after he said it, his company
announced a computer called the Kaypro II Plus 88 with both the 8-bit
Z80 and the 16-bit 8088. It couldn’t run all IBM programs, especially
those boasting =graphics= or pictures as well as words and numbers.
Here, as in many cases, the term “IBM compatible” is grossly misleading.
There are degrees of compatibility, and even if a computer supposedly
uses the same style of floppy disks, you must test it with the program
_you_ want to run. (Many computer aficionados test for general IBM
compatibility by running a game called Flight Simulator, or Lotus 1-2-3,
a program combining a spreadsheet with graphics and several other
capabilities.)

Some existing programs, by the way, are configured so that it doesn’t
matter much whether you’re running the 8- or 16-bit version.

That will change as special programs come out for the 16-bit machines
and as old ones, like WordStar, begin to take full advantage of 16-bit
capabilities. Already Apple and other companies are writing new software
for computers like the Macintosh, which, if not universally regarded as
a true 32-bit machine, contains chips faster than the IBM’s 8088.

For many small businesses, however, 8 bits may be powerful enough even
for number crunching as long as the right programs are available.

The wisdom in the micro business is that no machine is ever
obsolete—just so it does the job for you.

                     64K Random-Access Memory (RAM)

RAM, once the power goes off, will throw out everything you’ve typed.

This temporary computer memory, this electronic scratchpad, is like a
bright student cramming for a quiz in a useless subject: he’s a quick
learner—and a quick forgetter. Don’t confuse RAM with =ROM=, or
=read-only memory=. ROMs keep remembering even after the power goes off.
But you can’t “write” new material on them; commonly, ROMs store
programs used over and over again.

What about the RAM, though? How to get around the forgetting? You just
transfer the information to floppy disks, which are slower but as stable
as a music cassette.

Different computers hold different amounts of information in their RAMs.
The Kaypro II holds 64K; =K= is normally a scientific abbreviation for
1,000. So 64K stands for a memory capacity of about 64,000 letters or
numbers. No, I won’t mess with the technical explanation of why it isn’t
exactly 64,000.

Okay, but why _64_K?

It’s a magic number to the computer. Sixty-four K bytes is the largest
memory with which the Z80 and other 8-bit microprocessors can easily
communicate without too much technical trickery.

Also, you need at least 64K to make good use of some popular software
like the WordStar word-processing program.

Moreover, the RAM must be roomy enough to handle electronic
spreadsheets. Most small businesses will find that the 64K Kaypro can
juggle around enough columns and rows on the sheets. But in some cases
you _may_ still want a micro with 500K or even 1,000K or more of RAM. To
sum things up, that’s because:

1. Bigger RAMs can work with more and larger numbers—a handy capability
  for a company with extremely complicated spreadsheets.

2. More RAM can accommodate programs more complicated for the computer.
  Note the words “for the computer.” Some of the programs most
  complicated for the computer may be the easiest for you to use.

    Or they may be the most versatile. Lotus 1-2-3, a combination of a
  spreadsheet, a graphics program, and several others, is far too
  complex for an 8-bit machine with 64K RAM. Many 16-bit programs
  require 192K or more just to load the program before you even put in
  your reports or spreadsheets.

3. You may want the most sophisticated software to thwart computer
  crooks. That could be particularly true in a large company where many
  people can poke through a computer’s memory either in person or via
  other machines connected by phone or other wires.

Never buy a computer without seeing for yourself that it _and_ the
software will together serve your needs. Don’t take the sales rep’s
word. Instead, make him or his software specialist put the machine
through its paces. Do so even if you’re not buying software at the
store. Of course, the sales rep may not have access to the software, in
which case you may want to visit another store for a demo. And if no one
can assure you, no ifs or buts, that the computer-software combo works
fine? Then you may want to hire a consultant.

                          Use of CP/M Software

=CP/M= is a kind of =operating system=. It tells a computer how to do
garden-variety jobs, like moving data from a memory unit to one that
does the machine’s electronic reasoning. CP/M isn’t the only operating
system that business microcomputers use. When I was writing this
chapter, however, it was one of the more common, with variation present
on more than half a million computers. A company called Digital Research
marketed CP/M, selling to manufacturers, which, in turn, didn’t have to
create their own operating systems. In the early 1980s, the big software
hits almost always came in CP/M formats.

“We wanted to use CP/M because 10,000 programs were available,” Kay
said. They were for computers with 8 bits, not 16—another reason he made
the original Kaypro an 8-bitter.

“If we’d used 16 bits,” Kay said with uncharacteristic profanity,
“people would have said, ‘Where the hell’s the programs?’ IBM could sell
their computers without programs, which is what they did essentially and
let the programs come later.”

In contracting software design to outsiders, “Big Blue,” as IBM is
called, was defying its own tradition. It hired Microsoft—a Washington
State software company headed by a brilliant young Harvard dropout—to
create a whole new operating system. Called MS-DOS, the system would
become an industry standard by 1984. And from the start, independent
software houses hustled to market MS-DOS-style programs usable on the
hot new machine for applications like word processing and spreadsheets.

The existing CP/M =applications programs= wouldn’t work on an unmodified
IBM Personal Computer unless the programmers converted them to MS-DOS or
another compatible operating system.

‘Two-Disk

They’re the gizmos into which you insert the floppy disks through slots
in the computer.

From the outside a disk looks square. It’s inside a container that helps
protect it from fingerprints and other threats to the plastic disk’s
magnetic coating.

You can’t cover the delicate disk completely, though. Some of it must
touch the =head= of a disk drive. A head “writes” magnetic patterns on
the oxide coating of a disk; in other words, it stores information that
you’ve typed into your computer or the results of your calculations.

And to fetch the information? Then you simply type out commands
instructing the head to “read” from the disk to the RAM.

It’s much like a tape recorder storing your voice magnetically. But a
disk drive can read or write information much more rapidly than a
tape-recorder-style arrangement could. That’s because the disk spins so
rapidly—hundreds of revolutions per minute.

Why twin disk drives, however?

There are two reasons:

1. You can quickly make safety copies of valuable disks—something that’s
  more of a hassle with single-drive computers like the bare-boned
  Macintosh.

2. You can more easily work with long electronic documents.

With one drive I’m storing WordStar and a number of other goodies that
take up almost all the space on the floppy; there’d be hardly any room
for the information I’m typing out. All this is happening on my “A”
drive.

The “B” drive is my =data disk=, devoted entirely to storage of my
writing. I can easily squeeze the equivalent of about fifty pages of
double-spaced typing with WordStar, which is one reason I bought a
Kaypro instead of an Osborne. Brand O’s earlier versions could store
only half that amount of material. Before buying a computer, you should
always analyze your paper records in terms of “K.” Each K stands for
1,024 characters; and that includes letters, numbers, punctuation marks,
and spaces in between. A double-spaced page of typing might be 66 (the
number of columns across each line) × 28 (the number of lines), or 1,848
characters. Bingo! That’s 1.8K, plus a little slack for safety. Since
Andy Kay allowed 191K of working space on each floppy, I’d have enough
room for a document some hundred pages long, except that WordStar makes
an electronic carbon copy for additional security. So my actual working
space is around 50 pages. That’s easily enough for this chapter to fit
on one of the Kaypro II’s floppies. And newer floppy disk drives can
accommodate more than 2.5 million bytes.

Although the Osborne and Kaypro both used twin drives, there were also
major differences between the two—beyond the =double-density= feature
that allowed Kay to squeeze twice as much material on each floppy.

Osborne’s first computer, for example, came with only a five-inch
monitor. “Adequacy is sufficient,” he once said. “All else is
irrelevant.” It was a neat excuse for his early machine’s limited disk
space and for the five-inch, black-and-white screen, which could display
only 52 columns and which wasn’t as kind to the eyes as green.

The production-model Kaypro, on the other hand, boasted a nine-inch,
80-column green screen from the start.

And the Kaypro keyboard made the Osborne board seem flimsy. “I like
something I can feel when I’m pressing a letter down,” said Kim
DeFilippis, a dealer relations woman who was one of the touch-typists
chosen to try out different keyboards for the new machine. “The board
doesn’t feel like one on a computer. It feels like a typewriter.” And
the keys, unlike the Osborne’s, were in all the right places for people
weaned on Selectrics. Kay had used the same Tiffany-quality keyboard
found on computer terminals costing thousands of dollars more than his
economy machine.

Kay, moreover, had given his Kaypro a metal case unlike the plastic one
of the Osborne. Metal dispersed heat better, and that meant that the
parts might last longer than those in the early Osbornes. Brand O tended
to overheat floppy disks. Recalling that Non-Linear Systems made test
instruments, however, one reviewer gibed that the metal case betrayed
the Kaypro’s heritage. I didn’t care. The Kaypro reminded me of old
Heathkits, of smoky soldering irons, of crisp, cold evenings in my youth
when I’d listened through the static for the whistling dots and dashes
from my fellow hams. But many people shrugged off the Kaypro’s
appearance as unprofessional, and so I asked about the case. Kay said
its contents dictated the shape. “Unless we created air space and made
it larger,” he said, “we couldn’t have made the shape much different.” A
hood shaded the Kaypro’s =cathode ray tube= (CRT; the TV-like screen).
And as it turned out, that matched the comfortable slope of the keyboard
that attached to the front of the machine for carrying. I noticed only a
few adornments added for buyers’ eyes. One was the blue “KAYPRO II”
lettering on the case and the stripes on it and the keyboard; another
was the blue color of the keys on the calculatorlike numbers pad. No,
you couldn’t mistake the Kaypro for a Gucci creation. And yet, as good,
functional design, the Kaypro succeeded: at least one other portable
appeared in a sharp-edged metal box.

The location of my Kaypro’s two disk drives, to the right of the CRT,
was especially logical. Kay and his engineers wanted them well separated
from a high-voltage transformer on the left—an electrical component that
was part of the video circuitry and whose magnetic radiation could
interfere with the operation of the drives. Bill McDonald noted the
Osborne disks were on either side of the tube. Circuitry for a nine-inch
tube produced more electronic noise than that given off by a
five-incher. And McDonald speculated that this was one reason Osborne
had to make do with the smaller size.

Inside the Kaypro, atop the printed circuit boards, you saw integrated
circuits with leglike leads of the kind that one writer compared to
caterpillars. You found somewhat similar looking parts inside the
Osborne. But there was a difference. “Oh, my God,” said Michael Pond,
owner of a Washington-area Kaypro dealership, the Computer Shoppe, “once
you take the cover off the Osborne, everything sort of falls apart in
your hand. It’s held together by the wiring harness. It’s like a
jellyfish.” That may have been a bit off target. Chris Christiansen,
however, a computer analyst with the Yankee Group, a high-tech marketing
research firm, compared the Osborne to a Chinese puzzle and said an
Osborne user “in the next office gets very nervous when I come around
with a screwdriver.” By contrast the Kaypro looked eminently repairable.
“When you take one part of the machine off,” Pond said, “the rest of the
machine doesn’t fall apart.” Andy Kay’s people had divided up the
circuitry into several modules that repairmen could remove _easily_. His
computer had far fewer chips than the old Apple II. And with fewer
chips, repair people more often could locate glitches by replacing
various parts until the machine was working again. Fondly, Pond said the
Kaypro II was “over-engineered,” like an early-model Volvo.

“Well,” you’re wondering, “what about the Kaypro I?”

It never existed except as a prototype. Of course, the II didn’t hurt
Kay’s efforts to convince buyers that he had one up on Osborne.

The prototype’s screen was between the disk drives, interfering with
them, and another flaw became clear: the shortness of the cable between
the keyboard and the main unit. Bill McDonald was worried. Suppose a
customer crushed a finger while wrestling with the little cable? Why not
hinge the keyboard to the twenty-pound console? And that’s how
Non-Linear Systems indeed built the prototype. But McDonald still
fretted that someone might undo the latches; and so, driven by fear of a
lawsuit from a klutzy Kaypro owner, the engineers redesigned the
computer to accommodate a coiled cord several feet long.

Altogether, Andy Kay’s people spent only a year and less than half a
million dollars developing the Kaypro II.

“After we’d been at it eight or nine months,” he said, “someone brought
in some literature from Osborne, who had just announced his portable
computer. I said, ‘Oh, oh, somebody beat me to the punch.’ But I saw he
had a different idea in mind—a smaller screen, plastic case, different
market.”[10] The words “different market” are more than a little off
mark. Andy Kay, like it or not, was in direct competition with Osborne.
Kay might sell his computers at independent stores rather than at the
ComputerLands and Sears stores where many of Osborne’s machines ended
up. But at meetings of Kaypro owners and “Ozzies,” I found the same
hodgepodge of small-business people and professionals.

Footnote 10:

  _San Diego_ is the source of the “After we’d been at it eight or nine
  months” quote.

Hearing of Osborne, Kay actually was grateful in a sense. “When he
started telling the world about how many orders he’s got, I said, ‘Well,
if he’s getting all these orders, I’ll start making more of them.’”

Kay used an electronic spreadsheet on his newly developed computer to
forecast its sales. The Kaypro II had better succeed, since the half
million in expenses didn’t include marketing costs and miscellaneous
ones such as manuals—another million altogether. Kay, however, said the
high-interest loans for the project “never really bothered me that much.
I felt confident of getting it done. In one sense I place very little
value on money. My wife, Mary, is quite different. She said, ‘You’ll
lose your money.’ She was secretary of the company. She had to sign
mortgages on our home that we had paid for, property we owned, the plant
site. It was a heavy burden for her. If you’re in an airplane or car,
going up a winding road on a mountain, the fellow who’s driving isn’t as
nervous as if someone else is driving. I was involved in getting it
done. She was on the sidelines worrying about it.”

The Kaycomp—that was the original name before the Kays changed it
because it resembled another computer firm’s—first went public at a San
Francisco computer fair in March 1982. Just a routine item appeared in
_Byte_, the phone-book-sized microcomputer magazine. I wondered why.
Maybe it was because Andy Kay’s technology wasn’t new, merely good
repackaging, and he wasn’t selling himself as God or Henry Ford. But
dealers at computer shows were raving. The Kaypro’s suggested retail
price was $1,795, the same as the Osborne’s, and Kay, too, threw in
software: a word processor, an electronic spreadsheet, and other
programs that could have cost more than $1,000 if purchased
individually. Kay was smart. Osborne had pioneered by including business
software for “free” with an economy-priced machine, and now Kay must
follow with its own “bundled” programs.

“Has _Catch 22_’s Milo Minderbinder, World War II’s greatest
wheeler-dealer, hired on as a software buyer at NLS?” _San Diego_
marveled.

“You don’t think that took a lot of time to put together?” Kay said. “We
purchased some software outright and pay royalties for some.”[11]

Footnote 11:

  _San Diego_ contains the quote on software purchases and royalties.

By mid-1982, customers and dealers had placed several thousand advanced
orders. Kay’s production lines cranked up, though the pace was slow at
first as his people searched for bugs. They did not always stamp them
out. A disk drive on my Serial #3083, lasted only a year; my warranty
was for the industry’s usual ninety days. Moreover, despite visits to
several dealers, my computer still streaked lightly across the screen
when I typed, and finally I had to have the monitor replaced. But the
view easily beat the Osborne’s. And later, modifying the circuitry and
positioning the disk drives horizontally instead of vertically, Kay
ended the streaks on new units. “In an emergency I get all the senior
engineers on the job,” he said. “We don’t let problems go on like old
man river.”

Andy Kay rewarded his top problem solvers with benefits like stock
options, and the stock offering prospectus from Prudential-Bache
Securities anticipated that in 1983 Kay himself would earn $187,000 in
salary, bonuses, and other remuneration.

Not everyone fared so well; Kay said his labor costs were half those of
competitors. “The wages on the line are so low,” quipped a disgruntled
ex-employee, “I’d call them south of the border.” Kaypro was typical of
many high-tech companies; the production workers were mainly women, many
of them foreign born, some of them incapable of speaking English, all of
them nonunion. Adam Osborne, too, tried to cut labor costs to the bone.
And Atari had laid off scores of Americans and farmed out jobs to
cheaper labor abroad, reddening the faces of the politicians known as
“Atari Democrats” who believed that high tech could fight unemployment.

Regardless of the low wages, Kay’s own company at least appeared to be
the antithesis of a sweatshop. His hillside buildings didn’t look like
normal factories; they were long and narrow, well windowed, split into
small rooms without the racket of mechanized production lines. Kay
described his workers as “always moving, interacting constantly. If one
piece is missing, they work around that. If one person is slow because
he happens to be new, they work around him and help him out. It’s
exactly the same approach we used for stuffing printed circuit boards on
the voltmeters. It uses the least amount of capital equipment, and it’s
the easiest on the assemblers, because they aren’t just sitting or
standing in one spot.”

Lacking a conventional assembly line, Kay said he needed few mid-level
managers; and even after Kay went public, he still hated to bring in
MBAs. Managers built empires. They feuded. They got in producers’ way.
That was how Kay felt, apparently—a legacy of the 1960s when Non-Linear
Systems had splurged thousands on those seven vice-presidents and their
white Cadillacs. But some practices from the go-go years lingered. One,
said Kay, was participative management, the philosophy that had led to
the formation of those small, friendly assembly teams. The atmosphere
around the plant was informal. “We have very few written policies on
anything,” he said. No dress code existed, save for an informal ban on
attire like short shorts—a policy bent to accommodate workers who
labored in the hot Southern California sun.

Also, Andy Kay’s company at times hired people with unusual backgrounds.
Clifford Odendhal, a musician-dancer-songwriter in his thirties, had
come by way of COJO Wind, David Kay’s alternative energy firm. David
asked Odendhal to help Non-Linear Systems catch up on back
correspondence, leading to a customer-service job there. Eventually,
Odendhal was helping with public relations. “This is the first job
outside of entertainment that I have ever cared about beyond my
paycheck,” he said.

Andy said of David, “He’s less cautious about hiring people than I am.
If they don’t work out, he just lets them go.”

David, a six-foot-three-inch surfer with a degree in math and a hobby of
collecting dictionaries, had himself started with the company several
years before the birth of the Kaypro. Now he was vice-president for
marketing, and when an investment banker asked Andy if David was a
vice-president because he was Andy’s son or because he was the best man
for the job, Andy replied: “Both.” He believed that David’s role in the
development and marketing of the Kaypro “was extremely important. In
thirty years I’ve never seen a man in marketing who measures up to
one-tenth the dedication and performance he’s shown.”

Andy’s son used what the _Wall Street Journal_ described as
“idiosyncratic” marketing techniques. Dealers couldn’t sell Kaypros by
mail. They didn’t enjoy extended credit. The Kaypro Division, in fact,
did not even spend much at first on national advertising.

Examined closely, however, each policy seemed logical. Most customers
couldn’t just walk out the door of their computer dealer and wave an
eternal good-bye. Chances are that they’d be back for advice or repairs.
So Kaypro wanted local dealers not to face competition from cutthroat
mail-order houses that left the customer on his own.

Without a strong network of local stores, Kaypro might perish. Andy Kay
appreciated this. “If a fellow does mail order and the contract says he
can’t,” Kay said, “David cuts him off without a qualm. Maybe the dealer
says we need him or he won’t be able to support his family and kids.
Well, forget it. This is a business, but it’s also our livelihood, too.”
Of course, not all mail-order establishments in the computer trade were
unethical: I knew of some good ones. But from a manufacturer’s viewpoint
the policy made sense. The Kays at the time wanted to befriend the
independent dealers, who were less likely to flood the market with
heavily discounted computers than the chains were.

However sympathetic to the independents, Kaypro didn’t follow the lead
of some expansion-minded computer companies and grant extended credit—a
sensible policy in this volatile business. A California chain folded,
owing hundreds of thousands to Apple as well as customers. As to how he
originally picked up many dealers, Andy Kay said, “The orders just
started rolling in. Now we’re sort of clearing out dealers which are
operating out of backs of cars or whatever.”

Kay was also benefiting by selling through his own network rather than
being at the mercy of distributors—and supporting their profit margins.

By the summer of 1983, Kaypros were selling at some thousand
dealerships. Christiansen observed that Kaypro gave dealers “30 or 40
percent margins. So does Osborne. That’s how they get the dealers to
carry the damned things. You know, when you have fifty guys a week
knocking on your door, you pick the one who’s going to put the most
money in your pocket, and Osborne and Kaypro both know how to play this
game as well as or better than anyone else. How do you think Kaypro went
from nothing in 1982 to 100,000 units in 1983?” Kay disputed this. He
said that the Kaypro’s quality sold the computers, that he hadn’t
offered more than 25 percent dealer discounts, and never would; and his
claim seemed creditable enough when some stores dropped the Kaypro
because the markup wasn’t big enough. Whatever the facts, Kaypro in 1983
boasted sales offices in some fifteen U.S. cities and one in the
Netherlands. One-third of the computer-store ads in the _Washington
Post_ business supplement of August 8, 1983, mentioned the Kaypro.

The limited _national_ advertising was equally wise. Why not depend at
first on local ads telling where people could buy the product? And what
was the use of creating a demand for more computers than Kaypro could
make? Andy Kay had learned from Osborne’s example. Adam Osborne’s
splashy ads had helped create the market that the Kaypro was now
enjoying.

Besides, Kay was benefiting from something better than advertising: the
articles of friendly writers. And why not? Writing was just another form
of word processing—a category for which most Kaypro owners had bought
their machines. Certainly the Selectric-style keyboard and 80-column
screen had impressed _me_. Peter McWilliams, the very same writer who
had led the cheering in the micro magazines for the Osborne, was a
Kaypro convert. “Put simply, as a personal computer, the Kaypro II is
superior to the Osborne 1 in almost every detail,” he wrote—“yet it
retails for the same $1,795. As David Letterman might say,
‘Unbelievable!’” James Fallows, the Washington editor of the _Atlantic
Monthly_, free-lancing for _TV Guide_, called the Kaypro “the best
value” for “complicated accounting” or “heavy-duty word processing.” I
was used to seeing hype in and out of computer magazines for inferior
products. The Kaypro, however, deserved the paeans. Granted, I didn’t
like Perfect Writer, a word processor included between 1982 and early
1984; and the sharpness of the monitor was no match for some more
expensive machines. The Kaypro wasn’t the best computer, period. But at
the time Fallows praised the Kaypro to the millions of _TV Guide_
readers, it may well have been the best dollar-for-dollar value. Fallows
himself didn’t own a Kaypro. He honestly reached his conclusion
unassisted by a special offer from Kaypro: 40 percent discounts for
writers; the company said—convincingly or not—that it didn’t attach any
strings.

As production increased, Kaypro finally did trot out national
advertisements. One, in _Esquire_, showed a young Kaypro user in an
office swept by a fierce wind, blowing coworkers’ papers away and
tousling his hair, while he was typing happily away with his chair and
desk raised a foot off the floor, “KAYPRO RISES TO THE OCCASION,” said
the advertisement. I didn’t really see the point. The technical specs
were buried in small print at the bottom of the page; why couldn’t the
ad tell me in large print and simple language what the Kaypro could
_do_? A Kaypro staffer said the ad was to build name recognition. Then
the company might unleash a campaign portraying its steel ugly duckling
as the Volkswagen of small computers. It seemed a sensible-enough idea.
Then, again, it was another indication that the computer business was
becoming more like Detroit—selling not only economy but the _image_ of
economy.

Finally, the new ads came out. In simple, helpful language they told
novices what to look for in a small business computer. And yet you could
hardly confuse the ads’ goals with _Consumer Reports_'. The ads for
beginners recommended consulting with an expert before choosing a
machine; at the same time ads in sophisticated magazines like _Byte_
asked computer pros to suggest the Kaypro to beginners. (“Once you tell
people about the complete business computer for $1,595,” said an ad
appearing after the Kays lowered the price $200, “they’ll probably stop
bugging you with a lot of questions.”)

The public relations campaign was just as slick. No one lied. But Hill &
Knowlton, the fast-track public relations agency, laced its Kaypro
releases with quotes skillfully reflecting the computer makers’
self-interest. In one, David Kay said, “If it isn’t portable, it doesn’t
pay to buy it.” That was hyperbole, pure and simple.

The nine-inch screen, for instance, was a major improvement over the
Osborne, and it was entirely right for an economy portable from which
many buyers would eventually trade up, anyway; but writers and other
heavy-duty users might prefer a twelve-incher from the very start. For
not much more than the Kaypro at the time of the release, you could buy
a desktop computer called the Morrow Micro Decision with good software
and a twelve-inch screen. Milton Viorst, a Washington journalist,
couldn’t stomach the Kaypro monitor. He considered the Kaypro the kind
of machine you might tote back and forth between home and the beach but
not the best for heavy-duty viewing. He bought the Morrow, or two,
actually: one for himself and one for his wife, Judith, a well-known
poet and magazine writer. However pro-Kaypro, I could see why. The
Kaypro, strictly speaking, wasn’t even portable; instead, it was
_transportable_. Unless you were a 300-pound tackle playing for the
Pittsburgh Steelers, you weren’t about to tote a sharp-edged, 26-pound
computer and battery pack as casually as you would an attaché case.

Other “feature information” from Hill & Knowlton in spring 1983 offered
more tips for computer shoppers in a way cunningly designed to steer
them to the Kaypro without the customers’ quite knowing what was going
on.

“KAYPRO Division of Non-Linear Systems” appeared on the first page in
big blue letters above the text. But the seven-page “feature
information”—the part intended for publication—mentioned the computer by
name just once and in an inconspicuous location. It laid out the specs
for a good portable. Then, several hundred words after the Kaypro
mention, it triumphantly concluded, “For as little as $1,795, you can
already buy the only fully portable personal computer with a full-sized
screen, one that offers large enough memory capacity to handle business,
entertainment and educational programming and a service network that’s
available anytime or anyplace—just like the optimal portable personal
computer itself.” I recalled the canned releases from food companies
that women’s pages ran verbatim. How many newspapers and magazines would
do the same with “feature information” from Kaypro? David and his father
had made a good machine. And yet I wondered how many manufacturers of
bad computers might start using similar tactics. Joel Strasser, at the
time the Hill & Knowlton man handling Kaypro, later protested that he
was engaging in standard public relations practice, but his remarks
simply dramatized how the welfare of shoppers might clash with that of
the manufacturers. Disguised puffery was hardly in keeping with David
Kay’s portrayal of himself as a consumer advocate.

Around the time the Kays were calling in high-powered public relations
people, Adam Osborne himself went a step further. In January 1983 he
hired a professional manager to be Osborne Computer’s president, Robert
Jaunich II, formerly president of Consolidated Foods. Osborne would
later blame Jaunich for many of the computer firm’s problems, telling a
reporter that Jaunich wasn’t fleet-footed enough for a young company in
an industry with a fast-changing market.

Jaunich’s recollections would differ. Recalling the discoveries he made
during the audit before the never-to-take-place public offering of
Osborne stock, he told the _Wall Street Journal_, “Every day you came
in, the numbers got worse. Every number you touched went soft.” He
blamed the corporate chaos on Adam Osborne. “The real message,” said
Jaunich, who resigned as Osborne president in December 1983, “is the
professional people got here too late to help.”

Osborne was also critical of another executive; he accused him of
cutting a deal with a supplier—while still working at Osborne
Computer—to make a rival machine. Whatever happened, the internal
squabbles at Osborne may have wasted time and energy that he and
colleagues could better have devoted to their battle against the Kaypro.

He himself would later admit in his book _Hypergrowth_ that “new product
development moved slowly” until the second half of 1982. A smaller,
cheaper Osborne 1, the Vixen, never reached the market while he was
running the company. His $2,495 Executive computer—with a seven- rather
than five-inch screen—did make it out the door. “Wayne” didn’t.
Introduced early enough, Wayne could have given the Kays fits. This
$1,995 model was to offer a nine-inch screen and include a built-in
printer and a pile of free programs for word processing, communications
with other computers, and other tasks. But technical problems bedeviled
Osborne. When Osborne finally caught on that IBM had established a new
industry standard, he sought to make his Executive compatible, but he
was aware of his own company’s “dismal record in engineering
development.”

Osborne entrusted the task to a San Diego firm. By May 1983, however,
Osborne realized that the firm’s IBM-compatible prototypes were
“expensive, late, and included wholly unacceptable features such as
circles that would be displayed as ovals when an Executive user switched
from CP/M to IBM compatibility.”

Adam Osborne was clearly losing his sales war with Andy Kay. He had
talked to reporters about the Executive in early 1983, and in July
newspapers said this had discouraged some dealers from ordering too many
Osborne 1s. The story was that Osborne’s cash reserves had fallen as
orders for the older machines dropped from 10,000 a month to almost
nothing. Apparently he’d forgotten one of the precepts of any business
with changing products: you're always competing against yourself. If you
make too many old models or brag too soon about the new ones, then you
may imperil your cash flow and see surplus product inventory pile up.
Your customers will keep their wallets shut as they await your coming
attraction. It was a most plausible explanation for Osborne Computer’s
cash-flow problems but perhaps not the main one. In _Hypergrowth_
Osborne revealed that his sales levels for his Osborne 1 had been
dwindling even without all the puffery about the forthcoming Executive
model; he confessed that he had lied to the press to throw it “off the
scent of the real story.” His bankers were threatening to call in loans;
he was laying off workers, yet he still hoped to woo private investors.

As the end neared, Osborne dealers were fighting Kaypro ones with price
reductions. An Osborne 1, discounted, sold for as low as $1,000 by late
August 1983. Stores also were dropping the Executive’s price, and with
good reason: why so expensive a machine without IBM compatibility right
off the bat?

The first prototypes of the new IBM-compatible Executive weren’t being
built until September 1983, or as Osborne later observed, “precisely at
the time the company was filing for bankruptcy.”

The bankruptcy papers showed next to no income and $45 million owed
creditors. _Newsweek_ ran a photograph of Osborne leaving his office
without a portable computer in sight. Instead, a briefcase was shielding
his face, and the caption read: “Founder Osborne exits: IBM was too
big.”

That was somewhat wrong. The IBM-compatibility issue notwithstanding,
_Kaypro_ had been Osborne’s main competition.

“I’ve always had a great deal of respect for Kaypro,” he would later
confess to _Popular Computing_. “You’ve got to make those statements
[knocking the Kaypro]. It makes good copy, damn it.”

It didn’t make for the best-informed computer buyers, however. Bowled
over by Osborne’s marketing campaign and well-publicized disparagement
of the competition, some consumers had ignored the information that
mattered in the end: the numbers. The screen measurements, disk-drive
capacity, almost everything, said the Kaypro was a better computer for
common applications. Osborne had faced a moral dilemma. Should he
badmouth the competition and help his company survive? Or should he tell
the truth—that Brand X was better than his own product? Not
surprisingly, Osborne, like any other computer manufacturer, had made
the former choice.

In fighting Osborne, Kay had dropped his suggested retail price $200 in
May 1983 to $1,595, an indication that small business computers were
becoming no more impervious to price wars than the home ones were. He
also offered a souped-up version of his II and beefed up his software.
His Kaypro IV—the jump from II to IV reflected the substitution of two
400K floppy disk drives for the II’s 200K ones—sold for $1,995.

Yet another weapon against Osborne was the Kaypro 10, a deluxe model
with a 10-megabyte =hard disk=. It sold for $2,795, an amazing deal at
the time. A hard disk is an aluminum platter coated with magnetic film,
and 10 megabytes is the equivalent of 5,000 double-spaced typewritten
pages; yet Kay was selling the computer and software for less than the
prices of many hard-disk add-ons.

“Adam Osborne,” said Kay, “has said he couldn’t make a portable hard
disk because the hard disks are so sensitive to shock. Well, engineering
advances are such that hard disks now are capable of being moved. Our
very first one was shipped to a show in Germany.”

An _InfoWorld_ headline was less sanguine: “Hard disk, portable
‘newlyweds’ face some problems.”

Could Kay succeed with his hard disk? Another company made the disk
itself, and Kaypro had to replace some drives on the early Kaypro 10s.
But _some_ glitches were hardly a surprise in any new micro, hard-disk
style or floppy. Meanwhile, no less than Control Data, the computer
giant, was planning to offer a 5-megabyte hard disk for portables.
Already some smaller companies had put out portables with hard disks.
And yet Kay, turning out thousands of the machines, was gambling more
heavily on their reliability than the others. It could pay, however. New
technology might or might not succeed; but in his fast-moving industry,
old technology sooner or later would surely fail. To stay alive, he must
be among the leaders. More than 150 companies were clawing their way
through the micro business in late 1983, and some analysts believed that
fewer than 20 could survive five more years. Many of the 150 had only
what one expert called “press release products.” But others were real
threats; and without the resources of an IBM or Apple, Kay ideally would
fight back through innovation as well as good marketing. He needn’t
invent any new micro technology. Yet as a survival-minded “solver of
problems,” he had better be prepared to make prompt use of the
breakthroughs of others.

So major risks were ahead—inevitable—as Kay girded for his next fights
with the valley.

Backups:

◼ I, Twenty-Six Questions to Ask at (and About) the Computer Store, page
281.

◼ II, A Few Grouchy Words on Printers, page 294.




                           3 ❑ After the War


The Silicon Valley gossips in late 1983 said Adam Osborne was trying
science-fiction writing. Then, the next spring, stories suddenly
blossomed about his new software company; he bragged that it would be
the paperback publisher of the micro world, a mass-market operation that
would undercut rivals just as his computer firm had. The name of the new
company, in Berkeley, California, was Paperback Software International.
And his quotes against competitors were just as colorful as in the old
days.

“There’s a helluva lot of software out there,” Osborne told _USA Today_,
“and a lot of it’s overpriced garbage.”

He planned to sell his programs at book chains and book racks at less
than one-fourth the prices of the Brand Xs. The idea seemed apple-pie
admirable, but most people would rather not buy more software than they
had time to learn and use; how many hardcore buffs were out there
itching to spend hours mastering cheap new programs? Circumstances might
change as software becomes easier to use. But could you imagine a
Word-Processor-of-the-Month Club or a spreadsheet rack to the right of
the gothic romances? No, except for games programs and very cheap
enhancements of existing business programs like Lotus 1-2-3, the
paperback concept seemed dicey. Even Osborne wasn’t infallible as a seer
and market analyst. Once he’d predicted that IBM would fail in the micro
market, and hadn’t he been too slow to grasp the importance of IBM
compatibility for his own products? Still, although Osborne Computer
Corp. itself had floundered, it had not been for want of the right
vision at the company’s inception. His new software enterprise might
indeed survive in the proper niche. First, however, he would need
capital. In fall 1984 _InfoWorld_ reported that Osborne had paid for a
booth at a software show but had not set it up because, for want of
funding, his first products weren’t ready. Investors may have shied away
due to Osborne’s earlier failure to overcome the classic entrepreneur’s
challenge: not just to start a company but keep it prospering.

In shrunken form, with Osborne having resigned as president in September
1983, his old company lingered on in early 1984, selling old machines
and still promising a new IBM-compatible portable. Andy Kay at the time
had no need to fear this corporate husk. For a while, in fact, Kaypro
may even have been the fourth largest maker of personal computers
_shipped to stores specializing in them_. And his hard-disk gamble was
paying off for the moment—the same risk that Osborne himself had avoided
as too perilous for a portable manufacturer.

Orders had kept piling up for Kaypro 10s. Then again, so had the
problems with Tandon, Kaypro’s major hard-disk supplier.

David Kay even claimed that Kaypro was receiving Tandon drives “with
‘IBM’ stamped on them that also have ‘reject’ stamped on them.” Delivery
delays allegedly had cost perhaps $30 million in sales of the Kaypro 10s
over eight months. Tandon, while conceding that some rejected drives may
have accidentally reached Kaypro, claimed that such problems were
rare.[12]

Footnote 12:

  _Business Week_ is the source of the facts on Kaypro’s disk-drive
  problems.

The Kays’ 1984 sales would exceed $100 million. But some rivals were
growing faster, and IBM, Panasonic, and other household names were now
muscling in on the portable market. “Kaypro’s immediate prospects are
good,” said one analyst of the industry. “I don’t know about the
long-term ones.” He told of a big white tent that the Kays had put up on
a hillside to store badly overstocked computer parts. The Kays might
argue that they wanted to keep expenses down. To the analyst, however,
the white tent symbolized amateurish management. In September, Kaypro
acknowledged that millions of dollars in computer parts might be missing
from the tent and some large trucks; and whatever the cause, theft or
bad accounting, the crisis hardly endeared Kaypro to investors. They now
could recover only $4 per share—a fraction of the $10 offering price.
Around the same time, some angry investors filed lawsuits charging
Kaypro with falsely reporting its finances. Kaypro denied this. I hadn’t
any idea of the validity of the suits. An official with Osborne
Computers, however, discussing the tent and the general management
problems it symbolized, appropriately observed: “It was déjà vu to hear
about Kaypro’s inventory situation.”

Six regional sales managers had left earlier that year for a competitor.
Former Kaypro executives griped that the Kays paid too much attention to
trivia. Andy Kay even interviewed prospective security guards. Some
employees relished this personal touch, but Blair G. Newman, ex-director
of marketing and strategic planning, complained to _Business Week_,
“There are too many Kays and not enough pros.” Unconvincingly, a Kaypro
spokeswoman shrugged off the resignations, saying a small clique of
friends had left and plenty of people had lined up to replace them.

Andy Kay’s antipathy toward professional managers was coming back to
spook him. All along his attitude hadn’t been so different from that of
Adam Osborne, who, stubbornly, told a reporter after the Chapter XI
filing, “The major lesson I learned from this thing is that I’m as good
a manager as any of those guys.” An ex-Kaypro employee complained to me:
“The Kays are worried that professional managers will take away their
power. Andy Kay wants to run the company himself. It’s a feudal society
there. A lot of employees call it the Kay fiefdom. It’s like a training
ground for young knights. You can learn a lot, but it locks you into a
rigid structure. There are no changes from the bottom up. That’s the big
problem. I don’t know how they get away with calling it ‘participative
management.’ Ordinary employees never have any meetings with Kays to
discuss major decisions. There’s no checks and balances. If the guy at
the top makes a mistake, there’s no way to correct it. No one can call
the king’s bluff and stay.”

The Kays fired someone close to the outspoken Newman. It was Clifford
Odendhal, the bearded musician who a year earlier had told me, “This is
the first job outside of entertainment that I ever cared about beyond my
paycheck.”

“Part of it had to do with salary,” he said: his request for a raise.

“They’d been paying me no more than what an assistant manager makes in a
K-mart. And I’d handled user groups, done publicity, and edited their
in-house newspaper.”

The users groups were mostly local organizations of Kaypro owners who
traded technical tips and gossip and bargained with stores for discounts
on equipment; they kept Kaypro in touch with the best-informed
customers, the trendsetters. They also relieved the strain on Kaypro’s
own technicians and stores. But Kaypro had cut back the money budgeted
for sending people out of town to meet with the users groups;
skeptically, Odendhal said the company had hoped to do this work almost
entirely via a computer network.

Then there was the question of whether Kaypro had a true marketing
department.

“They don’t,” Odendhal said. He and others around Newman had hoped that
the Kays would sound out the need for products scientifically before
turning the engineers loose. Odendhal may or may not have been right. If
marketing men at the large computer companies were so smart, how come
Kaypro and Osborne had been the first firms to make portables usable in
business? And what about all the IBM clones? Couldn’t the marketing
men’s me-too-ism have stifled innovation? Then again, another company
dominated by engineers—Texas Instruments—had flopped in the
home-computer market because it didn’t pay _enough_ heed to marketing.

The Kaypro Corporation, at least, still boasted a dealer network of more
than a thousand stores in mid-1984. But some stores in my area had
dropped or downplayed the Kaypro line in the earlier part of the year.
One reason was that just about all the Kaypro machines were still 8-bit
and didn’t run the new IBM-style software. Also, ComputerLand and other
big-name chains, a growing part of the business, complained that margins
on Kaypros were ten percentage points under competitors and that the
machines' software hurt sales of off-the-shelf programs. So ComputerLand
shunned Kaypro.

It was a clear case of the interests of the consumers being at odds with
those of the computer dealers. For the Kaypro II at the time was a
remarkable bargain; Andy Kay had lowered his _retail_ price in March to
$1,295.

What a contrast to the overpriced PC_jr_ from IBM. Just rumors of the
machine—nicknamed the Peanut—had kept the entire industry on edge. It
bore the three magic initials. And as the pros said, IBM was compatible
with IBM. Only it didn’t work out that way. The PC_jr_, at least the
first version, couldn’t run some electronic spreadsheet software and
other important programs written for the IBM. The introduction in
November 1983 had been anti-climactic in other ways. _Jr's_ little keys
were like chiclets, horrors for the touch-typist, and by the time you
bought your software and added a second disk drive, you’d be paying
hundreds of dollars more. Even after IBM upgraded the PC_jr's_ keyboard
in summer 1984 and lowered the price to $999 with one drive, the Kaypro
II was still superior for word processing. So were other machines. With
two disk drives and WordStar, the Sanyo MBC550—a somewhat IBM-compatible
desktop from Japan—listed for just $1,400. Not that the Sanyo lacked
limitations of its own. Its keyboard, too, was no match for the
Kaypro’s.

In 1984 the Kays introduced the New Kaypro II, which offered only one
disk drive but sold for just $995 and allowed for another to be added
for a few hundred dollars more. Anyone using the New Kaypro II for
business would be foolhardy to depend on just one drive. Not
surprisingly, the $995 machine inspired jibes that Kaypro was guilty of
using the same gimmickry as IBM and Apple had been with their
single-disk computers.

Moreover, all the Kaypro models, despite their low prices, made _some_
customers pay for their bargains with headaches.

Take Chris Jensen, a writer in Cleveland. He futilely tried for months
before he could send his stories to his newspaper from home via the
phone lines. His dealer had sold the Kaypro IV, promising that Jensen
could. “It’s really scummy to put this out,” the _Plain Dealer_ reporter
said of his machine, “and know that the communications software has
serious bugs in it. It’s the kind of thing that the government would
kick the shit out of the automobile companies for doing.” A Kaypro
employee admitted that the communications software for the Kaypro IV had
come out with bugs, but not those of the kind that were plaguing Chris
Jensen. He confirmed another of Jensen’s complaints: that the Kaypro IV
model with the modem couldn’t use the most popular communications
software at the time. Coincidentally or not—shortly after Jensen griped
to me, the _New York Times_, and computer writer Peter McWilliams—Kaypro
released SuprTerm version 5.3. And that did the trick for him. The
machine delighted Jensen in other ways, but he still wondered about all
the ordinary customers out there who were unwilling or unable to wage a
media campaign to get their software up to snuff.

Jensen’s story was atypical—many Kaypro owners still spoke as if their
computers were micro manna.

Still, the new Robie, introduced in early 1984, might be a sign of
troubles to come. It was unique, a desktop selling for $2,300 with two
2.5-megabyte _floppy_ disks. But disks didn’t run as quickly as a hard
disk, and as of late 1984, the Robie just hadn’t caught on. The Robie
looked so ugly—ungainly, plastic cheap, fit for a discount store—that
even some value-minded buyers might have thought twice about bringing it
into their offices. It was a computer that only a designer could love.
And it was just an 8-bit machine.

In the 8- versus 16-bit battle, people were accusing Kay of living in
the past. It was Osborne all over again, some might have said—just like
Kay’s old rival babbling on and on about the virtues of a machine with a
tiny screen. This may have been unfair. For simple word processing, for
instance, an 8-bit machine could be a terrific bargain. But many buyers
still gravitated to the 16-bitters, worrying that future software might
not appear in the Kaypro CP/M format.

Kay’s attitude didn’t help. He was showing less of the adventurousness
that had led to his hard-disk portable.

And he now felt that the Kaypro II was just like the old Volkswagen bug
and would always be around—an ominous parallel considering VW’s recent
fiascos in the auto market.[13]

Footnote 13:

  Kaypro later dropped the Kaypro II and replaced it with the $1,595
  Kaypro 2X. It’s still a II, though, except for some improvements such
  as more disk space. The 2X’s disks store almost 400K each.

Some software programs endured because enough people learned and liked
them; and the Apple II in one form or another would last; but the Kaypro
II? Even with hundreds of thousands of users? What about the ill-fated
Osborne? No, computer buyers normally spurned antiques. Within a year or
two Andy Kay might change his mind and ponder whether to update the
Kaypro II drastically or kill it.

In November 1984, well over six months later than Kaypro had promised
investors, a 16-bit IBM-compatible machine appeared.

“He’d rather not call it an IBM clone,” said an industry observer. “He’d
rather call it just a 16-bit computer. It’s a matter of pride.”

The 16-bit model, a portable with a 10-megabyte hard disk and 256K RAM,
looked somewhat like the Kaypro II and IV. It had an =expansion slot=
into which you could plug a device to hype up the performance of the
machine or expand its versatility; and it offered free WordStar along
with other software. At $3,295 it sold for $1,700 less than a hard disk
portable from Compaq. But it faced stiff competition from machines such
as the hard disk desktop from Leading Edge, which was discounted to as
low as $2,000. The 16 just wouldn’t wallop rivals the way the original
Kaypro II had.

And it shared some of the drawbacks of the Compaq and many other IBM
clones—especially the keyboard. The left shift key was in an awkward
position like the IBM PC’s, with a weird, nonalphabetical character
separating it and the “Z”; imagine the reaction of touch typists who had
enjoyed the Kaypro II’s close resemblance to the traditional Selectric
keyboard. Many makers of 16-bit machines had aped the horrid PC
keyboard, causing one reviewer to liken them to idiot savante piano
players who imitated the mistakes of true geniuses.

The 16, moreover, showed Kaypro’s internal weaknesses. Dan Berger of the
San Diego recalled how Kaypro had futilely struggled for more than eight
months to design the computer in-house. The project had flopped. Kaypro
farmed the design out to a San Diego firm, which did the job in a
fraction of the time. Earlier in 1984 Andy Kay had told Berger that
Kaypro was spending only 1 percent of revenues on research and
development, compared to the industry average of about 10 percent. How
frustrated he must have felt paying an outside firm. Osborne had had to
do that, but technically Kay had placed himself and his company in a
different league.

Kaypro was heavily depending on the 16. The company hoped it would
provide 40 percent of income for the year ending August 31, 1985.

Early signs were good. A small dealer in Virginia, for instance, The
Disk Connection, sold six Kaypro 16s in one week—half to existing Kaypro
owners and half to new customers. Some people had demanded an IBM clone,
bungled keyboard and all; now Kaypro had given it to them with a
vengeance. Appearing late, however, the 16 had lost much of its price
advantage. In another six months IBM might well sell its XT hard disk
model for as little as the new Kaypro portable.[14]

Footnote 14:

  “XT” stands for “extended.”

The 16, if successful, would triumph at a helpful time. In the 1983
budget year, the company had earned $12.9 million on $75 million in
sales; the next budget year it had _lost_ $267,683 on sales of about
$120 million—blaming everything from advertising costs to price-cutting
and inventory problems. No longer was Kaypro a success story. It
remained strong in some stores specializing in computers; but the share
of the whole domestic market for personal micros would be 2.5 percent in
1984—a drop from 1983.[15]

Footnote 15:

  Kenneth Lim of Dataquest, Inc., the San Jose, California marketing
  research firm, is the source of the 2.5 percent estimate quoted in the
  _Wall Street Journal_, November 14, 1984.

In the long run, moreover, unless Andy Kay made major production
changes, his computers might lose what price advantage they did have.

Automation was improving rivals’ quality control and whittling down
their labor expenses. Eventually, they’d be just a tiny fraction of the
cost of a computer. Apple already had built a $20 million plant to crank
out the Macintosh computer, using Japanese-style manufacturing savvy;
Macs even helped oversee the manufacturing of Macs. “I don’t even know
if the Kays could automate their plant,” said the ex-employee who’d
accused the family of running a feudal society. “You’ve got these four
buildings no wider than a single room. They have a lot of windows, and
that’s great for the people—but hard on computer parts. Often people
placed piles of parts on the lawn overnight when they didn’t have space
elsewhere.” The Kays, to be sure, had put up a semiautomated warehouse
designed by Andy’s daughter Janice and built by his son-in-law’s
construction firm. “But,” said the ex-Kaypro employee, “that’s not the
same as automating the whole plant.” And Andy’s selection of the
architect and construction firm was further evidence of the Kays’
tight-grip management style.

This lack of flexibility could especially hurt them in responding to the
threat from lap-sized machines with flat screens. Sooner or later they
would menace the Kaypro-sized “luggables” in the business market.

About 120,000 flat screens sold in 1983, and although they weren’t
moving off the shelves as rapidly as expected in 1984, sales still might
exceed several hundred thousand.

Some showed 16 lines at one time. That wasn’t as many as the 24 on the
Kaypro II screen, but enough for light-duty word processing. And soon
others would do for the heavy-duty kind and a slew of additional uses.
Thousands of traveling reporters and executives were already using the
Radio Shack Model 100 introduced in 1983—despite its tiny built-in
memory (no more than 24K in a typical configuration) and small screen (8
lines only 40 characters wide).

But where had Andy Kay hoped to get his first flat-screen model? From
Mitsui & Co. in Japan, which would offer it to other U.S. companies,
including perhaps some with marketing clout far greater than his. The
Kays had thought they’d be the only people selling the note-book-sized
computer. By late summer 1984, half a year after the original hoopla,
Kaypro should have been shipping this miracle machine, but a spokesman
in September could not even tell me if the Mitsui deal was still alive.
Then word came out that the deal had fallen through and a flat screen
Kaypro wouldn’t appear until 1985.

A rival company, Morrow, Inc.—headed by George Morrow, a witty, balding
ex-grad student in math, one of Silicon Valley’s better hardware
gurus—had meanwhile acted more successfully. In late 1984 it began
marketing the Pivot, a ten-pound, $2,495 MS-DOS portable with one disk
drive and a well-reviewed clone of WordStar called NewWord. And a
revitalized Osborne—on the verge of escaping the Chapter XI bankruptcy
proceedings—would soon sell its own version of the machine.

Data General, the mini-maker written up in the best-seller _Soul of a
New Machine_, was another threat to Kaypro. In September 1984 it
unveiled the Data General/One, which offered IBM compatibility, a
built-in 737K floppy disk drive, and a 25-line flat screen. A software
developer joked that the letters on the screen were so faint that the
machine should be sold with a coal miner’s hat to read it. But
eventually the flat screen would be just as readable as the Kaypro’s
cathode ray tube. With the inevitable price drops and refinements,
machines like the Pivot and the Data General/One would wreak havoc on
Kaypro sales unless Kay retaliated with the right flat-screen portable
of his own. IBM, AT&T, and Compaq, too, were designing their own
flat-screen machines. And already Hewlett-Packard had been selling a
$2,995 flat-screen computer with the popular Lotus 1-2-3 spreadsheet
program in Read Only Memory—permanent memory.

Another firm—Epson, a branch of Seiko, the giant Japanese conglomerate
known for watches—was shipping a $995 computer with a compressed version
of WordStar in ROM. The screen displayed only 8 lines of information at
a time. But within months a 16-liner from NEC (formerly called the
Nippon Electric Company) hit the market at the same price, complete with
WordStar and built-in gadgetry for talking to other machines on the
phone.

WordStar was now the only word-processing program offered free with the
“luggable” Kaypros. If Andy Kay’s lap-sized micro couldn’t run it or a
clone like New Word, he might be paving the way for some of his
customers to buy rivals’ flat screens that did.

Most buyers used Kaypros to write or type. And how many would relish a
switch to a new word-processing program?

And what about piping WordStar-composed letters and other documents from
the luggables to the lap-size Kaypros? Customers could do so, but then
they might have to insert new commands to tell their printers to
underline or produce other special effects.

Beyond everything else, Andy Kay had better offer good software to fight
rivals selling flat-screen machines similar to his. And WordStar over
the years had generally been the most popular word processor for micros.




                       4 ❑ WordStar: The Creators


Arthur Clarke is _the_ Arthur Clarke, the science-fiction writer who
gave us _2001_ and that beastly computer named HAL. Seymour Rubinstein
is a California businessman with only fleeting mentions outside the
magazines of the computer trade. He is literate but not literary. When I
talked to him, he had not read Clarke’s latest novel. Yet Seymour
Rubinstein and a colleague played more than a small role in the the
writing of _2010_; for they created WordStar, the word-processing
program that Clarke uses.

WordStar is to micro software what _Citizen Kane_ is to movies: it is
old—by computer standards, anyway—but it’s one of the best of its kind.

If, when writing, Clarke wants to insert a phrase several sentences
back, for instance, he can just zip the cursor to the proper place, then
type in the addition. He needn’t enter a special “Editing” mode. Some
WordStar rivals may break up your thoughts by making you change modes.

Moreover, with simple keystrokes, Clarke can insert, drop, and move
whole paragraphs.

“I can make corrections without hesitation that I wouldn’t have done
before,” Clarke said enthusiastically about WordStar and his Archives
micro. “It’s at least doubled my production with a quarter of the
effort.” His normal output for his books and articles was still around a
thousand words a day, but WordStar had made his writing more fun, and
now he was churning out letter after letter to “my neglected friends.”

“I said I’d retired,” he told me over the phone from his home in Sri
Lanka, “but now I’m working on three or four things simultaneously. I
haven’t touched a typewriter since I got this computer a year or so
ago.”[16] You can easily understand why he hasn’t. No longer, for
instance, does a noisy bell tell Clarke that he’s nearing the right
margin—he just keeps on typing and a feature called =word wrap=
automatically takes him on to the next line.

Footnote 16:

  Clarke responded by phone in early 1983 to questions I’d mailed about
  his use of WordStar.

Granted, WordStar is traditional software. It doesn’t use =icons=, for
instance, those cute little pictures of wastebaskets or file folders
that some snazzy new programs will flash across your screen to tell you
what you’re doing. And as of this writing, anyway, the original WordStar
didn’t offer =split screens= to show more than one electronic file at
once. WordStar 2000, a related but not identical program, does. First
marketed in late 1984, it may supplant plain old WordStar eventually,
but the original program will always have a special place in the hearts
of the cognoscenti. It’s an indisputable classic. More than a million
people have used WordStar since it appeared in 1979. Rubinstein and Rob
Barnaby, the brilliant programmer who did the actual coding for
WordStar, are legends.

As computer technology matures, the machines themselves will be mere
commodities like televisions or Walkman imitations. It’s the programs
that run on them which will make the difference.

WordStar is at least adequate, and mostly superb, in all but the last of
these areas:

1. Absence of bugs. The software maker should have gotten all the bugs
  out so that the program will run reliably on your computer. You can’t
  write a complex program that will be absolutely bug-free. But you can
  make it bug-free 99 percent of the time.

2. General ease of use. A program should be easy enough to learn _and_
  use. Being logical helps; ideally, you can use combinations of
  familiar commands to coax the program into doing many things that you
  haven’t done before.

3. Good documentation. The manual should be clear and logically
  organized. Either the simplest material should come earliest, or else
  there should be a beginner’s version; also, the manual should boast a
  good, comprehensive index.

4. Usefulness to beginners and old pros alike. You can adjust the best
  programs to suit your own level of skill with them.

5. Speed. It lets you do your job fast, especially when you use it with
  a hard disk.

6. Power. Related to speed. The program can quickly accomplish
  complicated tasks like substituting one word for another in a contract
  thousands of words long. Imagine the boon to lawyers plugging new
  names into standard boilerplate.

7. Fewer chances for botch-ups. Good programs limit the chances for
  careless errors in the first place.

8. The Jewish-uncle effect. Ideally, your software will slow you down or
  flash a warning when you’re about to ruin your work with a few taps on
  the wrong keys.

9. Damage limitations (if you _do_ goof).

10. After-the-goof feedback. After you’ve botched up—and we all do
  sooner or later—the program will tell you how you did so.

11. Ability to customize. You or at least a software expert can
  customize good programs for _your_ use on _your_ machine.

12. Availability of “accessory” programs to make your original software
  still more useful.

13. Support. Ideally, the software seller will stand behind his product
  if you have problems. MicroPro’s record here is far from the best;
  this may change.

Again, WordStar isn’t perfect (see Backup III, “The Lucky 13,” for a
more detailed description of it and criteria for choosing good
software), but it comes closer than most other popular programs.

                            ■      ■      ■

  Here are a few terms useful to people shopping for a word processor:

  1. A =cursor= is just the marker on your screen—a blinking line,
    maybe—that shows where a letter will appear when you type. _Cursor
    keys_ move the cursor up, down, left, or right.

  2. A =file= is an electronic version of a letter, report, or other
    document or collection of data.

  3. A =control key= is what you start holding down to turn a letter or
    series of letters into commands for your computer. Used with the
    control key, the letters normally won’t show up in the document
    you’re typing. Some programs, by the way, may use the control key
    and an =escape= key, which could be a way to get from one part of
    the program to another. Or the escape key may take on functions
    similar to the control key. In addition, there’s an =alternate= key
    that you may also use to help boss your machine around.

  4. To =scroll= just means to move from place to place in your
    electronic document. It’s like rolling or unrolling a Torah or other
    scroll, except here there’s no ink or paper, just patterns of
    electrons in your computer memory and dots on your screen. On most
    computer monitors you see only 24 lines of typing at a time.

  5. A =menu= lists commands on your screen. It can tell you how to
    locate a document on your disk or what to do while you’re at work
    there.

  6. A =block move= is the ability to move material from one part of
    your document to another.

  7. A =global search= tracks down specified words in your document.

  8. A =search and replace= substitutes one word (or group of words) for
    another.

                            ■      ■      ■

WordStar’s creators, Seymour Rubinstein and Rob Barnaby, are like Orson
Welles and Herman Mankiewicz of _Citizen Kane_. The movie would have
been hack melodrama without the brilliance of both the producer-director
and his writer; and yet critics still argue over _Kane_’s exact origins.
So it is with WordStar. When _Time_ said Rubinstein had written the
program, a friend of Barnaby’s whipped off an angry letter to the
editor. I won’t take sides here. Rubinstein, however, far from playing
down Barnaby’s WordStar role to me, unhesitatingly passed on his phone
number when I asked. Barnaby is equally willing to acknowledge the
importance of his collaborator. Even the letter writer emphasizes the
usefulness of Rubinstein’s salesmanship and his perception of the
software market back in the late 1970s when WordStar was born.

A short, stocky, bespectacled man in his fifties, Rubinstein grew up in
New York City, the son of a pinball- and novelty-machine owner who died
while Seymour was still in grade school. His mother worked as a clerk.
“My first job,” Rubinstein said, “was a helper on a fruit truck when I
was twelve years old.” Two years later, however, his neighbors were
“letting me ruin their radios,” and by his mid-twenties, he seemed
settled into the routine of a TV repairman.

But Rubinstein grew restless after six months’ reserve military duty in
the 1950s; he attended night school at Brooklyn College and took up
technical writing.

Decades later he recalled a navigational computer he encountered while a
civilian, speaking as if it were his “Rosebud,” as if he were Charles
Kane thinking about the Colorado snows and the name on his childhood
sled. He gave me the machine’s exact measurements, eight by nine by
twelve inches. Then, mixing nostalgia with awe, he said, “If you opened
it up, it would look like a Swiss watchmaker’s nightmare, all those
gears and little electronic things whirring and clicking away. But with
it you could take off from an aircraft carrier and circle overhead and
press the reset button and fly anywhere you wanted, and wherever you
flew, an indicator kept track of how far you were from that spot on the
ocean and told how you could return.” Ask Rubinstein about his early
career and you may hear more talk of machines than of people. “$2” The
hardware, however, helped make the man. Rubinstein spent years working
with data-communications networks—the ones that, for instance, handle
airline reservations or credit-card information. Without quick, accurate
updating, these =real-time= systems are worthless: just ask anyone whom
an airline has booked on an already-full flight. You could have the
best-designed computers in the cosmos. But the question in the end may
be “Did the airline clerk key in reservations for you on the right
flight at the right time?” And Rubinstein’s software philosophy later
reflected his real-time work. He originally did not intend WordStar for
the bumbling and the lazy but for “the production typist” on whom the
boss heavily counted for both speed and accuracy.

In my last interview with Rubinstein for this book, he downplayed his
statement that he created WordStar for the fleet-fingered typist. “I
believe that everyone deserves a product appropriate to his particular
classification,” he said, “and while WordStar may have been aimed at a
particular niche, that is not to say we shouldn’t enlarge the scope of
this product.... We’re going to make the next version easier to learn.”
As thousands of professionals and executives can verify, however,
WordStar all along has been quite learnable.

Early in his computer career Rubinstein also grasped the importance of
clear documentation to guide people through the programs. IBM at the
time was one of the world’s largest publishers, at least in sheer volume
of paper consumed, ranking right up near Random House and other giants,
and Rubinstein recalls the old manuals as abysmal: “You really had to
have a lot of drive and patience to get through their stuff.”
Programmers rose or fell according to their ability to push through
“arbitrary collections of material arranged in an arbitrary order.”
Rubinstein, who by now had forsaken technical writing for programming,
made a discovery helpful to any software user: you won’t serve yourself
best, necessarily, by completely memorizing the manuals. The trick,
rather, is to know where to turn in a hurry when you _do_ have a
problem.

In 1977, wandering through a store for computer hobbyists in San Rafael,
California, Rubinstein saw a box with blue-and-red switches and lights,
and “it looked really interesting. I went home, built it, and a week
later I had a computer.”[17]

Footnote 17:

  _InfoWorld_, April 5, 1982.

It was his first micro, perhaps more of his Rosebud, after all, than the
navigational computer.

“I had spent many hours of my life in very brightly lit, cold rooms in
the middle of the night, surrounded by millions of dollars’ worth of
junk,” he once recalled. And yet his new dwarf seemed “a true computer”
to him “in every sense of the word. I could see the potential, and I got
very excited.”[18] His elation grew when he saw that a company named
IMSAI, run by an old boss, had produced the kit. He once remembered the
firm, now defunct, as “one of the tiny companies that really made this
industry happen. The industry did not happen by some big, famous
manufacturer deciding this was what he was going to do. It was a
grass-roots movement.”[19]

Footnote 18:

  _InfoWorld_, April 5, 1982.

Footnote 19:

  H. Edward Roberts, president of MITS (Micro Instrumentation and
  Telemetry Systems), a New Mexico company later overwhelmed by the
  competition, came as close as anyone to being the father of the first
  successful personal computer. His Altair 8080 made the cover of
  _Popular Electronics_ in January 1975.

Rubinstein joined IMSAI as software-products manager and within two
months was marketing director; there he signed the first contract
between a computer manufacturer and Digital Research for CP/M, the
popular operating system—the only one with which WordStar at first would
work.

Leaving IMSAI in 1978, Rubinstein “knew exactly what I wanted to do.” He
would “build packaged software” for businessmen and others unfamiliar
with computer arcana. Registering out a business name in June, he
included “International” after “MicroPro” because “I felt that with the
right, well-designed products, Europe would be an approachable
market.”[20]

Footnote 20:

  The November 1982 _PC Magazine_ is the source of the quotes on
  Rubinstein’s business plans after IMSAI.

Rubinstein was barely out of the IMSAI fold when he dropped by Rob
Barnaby’s flat in Berkeley, California. The two had met at IMSAI, which
Barnaby had left a short time earlier, for different reasons, after hot
words between the moody young programmer and his boss. Barnaby was a
Harvard graduate, a physics major, a tennis pro’s son, the descendant of
an old New England family. A pattern in his life was seemingly emerging
by the time he reached his thirties; he would throw himself into
computer jobs, program masterfully for a while, then find his interest
waning. Just before joining IMSAI, Barnaby had been fixing up old
houses. “I kind of like creating things with computers and forgetting
them and getting away from them when I’m not creating something new,”
Barnaby told me. He was in no hurry, quite likely, to return to work
after IMSAI, having salted away a good part of his salary. “I like the
flexibility that saving money produces.” He isn’t materialistic—the very
antithesis of it. And yet money and WordStar are together a touchy
subject. Barnaby’s work for MicroPro seemingly did not make him rich, at
least not California rich.

“It was originally royalties,” Barnaby said, “and when the royalties
played out, I took a salary and a stock option.” His total earnings from
MicroPro were somewhere in the six figures.

“I want you to understand where his ego is,” said the friend who wrote
_Time_. “He’s often chided by people for allowing himself to be taken
advantage of and he simply does not want to discuss it. He says, ‘I made
a deal. I kept my promise, Seymour kept his promise and that’s it.’”
Describing the circumstances in a peculiarly Californian way, the friend
said: “If Seymour was really greedy he would have gone to Rob two years
ago and said something like, ‘Hey, you got to believe me, Rob, I never
expected this thing would ever do what it’s done. And I’d like to do
right by you and so I would like you to graciously accept this check for
$150,000 I brought with me here today.’ Then Seymour would have owned
him. Rob did not get rich writing WordStar. People think that, but it’s
simply not true. I’ve seen it. The guy’s a friend of mine. He’s back to
work again because of financial need.”

“We were both very poor,” Rubinstein told me earlier about himself and
Barnaby. “I had less than $8,500 to my name, in fact, but I gave Rob a
$2,500 retainer, a third of my cash reserves. I owned a house, but the
bank owned most of it.”

Rubinstein offered to make Barnaby a partner. Barnaby,
characteristically wary of entanglements, turned him down.

An early program Barnaby did for Rubinstein was a programmer’s aid,
which, among other things, let you move words and numbers around more
easily on the screen. It was no more a word processor than a pencil. Nor
did Barnaby intend it to be one: “I was writing a program editor, a tool
for me.” Yet “computer stores would be trying to sell people something
they could write letters with, and it would get back to Seymour that our
program definitely did not have those features.” Rubinstein recalls
taking a big hint from dealers’ enthusiasm for a program called Electric
Pencil. “What they liked,” he said, “was you could both enter and print
from the same program, and you had a lot of control over the printout.
You could specify things like underlining and margin settings, but it
was very primitive. You certainly couldn’t imagine what it would be like
until you printed it. You didn’t know where page breaks would occur,
where one page would end and another began,” and so you might have to
print several times before you got it right, since each change might
create new breaks in the wrong places. That was micro word processing
1970s style. You either put up with all these nasty details or prayed
for a sweepstakes killing so you could buy a $20,000 “dedicated” machine
from IBM or Wang.

                            ■      ■      ■

    When You Should Buy a Dedicated Word Processor

    Here are some times when you should seriously consider it:

    1. When you work for a stuffy old bureaucracy that’s rich and afraid
      of the new.

    2. When you’re a procurement officer on probation. As they say, no
      one’s lost his job for buying Xerox rather than Brand Non-X. Then
      again, your boss may bawl you out for not buying a Xerox _micro_.

    3. When you want to dump the training problems in the manufacturer’s
      lap. Of course, many independent companies and consultants
      nowadays are training people to use micros, especially IBMs.

    4. When you prefer an extra-large, extra-sharp screen and giant
      memory and when you can’t easily find micros of comparable
      quality. Here, too, I’m skeptical. The gap between micro hardware
      and the dedicateds is narrowing.

    5. When you’re looking for a machine that will run special software
      that the micros won’t. Fondly, a Hollywood writer-director tells
      of a script-formating program “dreamed up by some lunatic in
      northern California.” Nowadays, however, more programmers are
      writing for micros than for dedicated word processors.

    You should think “Micro” if you’re working for (1) yourself, (2) a
    needy company or organization, or (3) a rich, frugal one.

    “But,” you ask, “what about repair?”

    Well, surprise: many big companies—including Xerox itself—are now in
    the micro repair business.

    Besides, for the price of one dedicated, you might buy both a micro
    and a backup.

                            ■      ■      ■

Psyching out the market, Rubinstein not only listened to computer-store
owners but read up on the features of the dedicateds, determined to
match them.

In some ways, in fact, he hoped to surpass these rivals. From the very
beginning he was against built-in function keys features, believing that
they actually slowed down typists by forcing them to take their hands
off their main keyboards.

Pitting himself against IBM and the other giants of the word-processing
world, Barnaby worked in a spare bedroom from which he evicted an
electric-train set. He wrote the WordStar with a brand-new IMSAI
computer, 64K RAM, two 530K disks. His big, fat Teletype Model 40
printer crawled along at a pokey 10 characters per second, but he poured
out his code as if he were a muse-inspired novelist.

“Working out whatever it was he was going to code,” Rubinstein recalled,
“he would sit in front of the machine and his fingers would fly. And he
would actually growl at the machine with his chin jutted out—_rrr, rrr_,
like that—and he would pound the keys as fast as he could go, because he
couldn’t get into the machine fast enough.” Between fall 1978 and summer
1979 Barnaby typically worked eighteen hours a day on WordStar, and
sometimes many more in the frenzy of it all. Rubinstein said, “I stayed
up a few nights with him, in fact. He was younger than I was—still is,”
he said dryly, “so I couldn’t do it as much as he could. He was an
excellent coder, one of the best I’ve ever seen in terms of speed and
accuracy and putting in features that are real clever.”

Barnaby, in turn, praises Rubinstein’s contributions to WordStar.
“Seymour set the general goals. I wouldn’t have known what the world
wanted because I’m not in touch with the world. He gave me a lot of
specifics. He was probably the person who used WordStar the most and
gave me the most comments, because he bridges the range from being able
to understand where technical people’s heads are at and being able to
relate to the outside world and the market. He was a programmer years
ago. He’s familiar with the process I go through. He doesn’t like to do
it anymore, but he sort of understands what I’m doing. I think the menus
were his idea”—the instructions that pop up on the screen if the typist
takes too much time to execute a WordStar command. Rubinstein also
recalls contributing touches like the Q effect, which accelerates the
impact of other WordStar commands; and he says he thought up the dotted
lines that cross the screen to mark page breaks. No matter who did what
for WordStar, however, it’s likely that Barnaby, regardless of
Rubinstein’s helpful studies of the market, was writing mostly for
Barnaby. “I don’t hear a voice from the world,” he generalized to me
about his coding habits. “I hear a voice from the back of my head.”

Rob Barnaby, you might say, was WordStar’s first user. He used WordStar
as a programming aid to write WordStar. Then he used WordStar to write
the manual for WordStar.

As we talked, I realized how close his working habits came to mine and
how, coding WordStar for himself and Rubinstein, he had also programmed
it for me. It was not so much a fluke that the program’s logic coincided
with mine. So, in many ways, did Barnaby’s personal writing habits. “I
fiddle around a lot with text,” he said. “I try to get the points down,
and then I try to get good sentences to say them with. If I find I try
to word the thing right from the start, I lose it. I must see things on
the screen.” Amen, Rob. I don’t write my best English inside my head,
either; I, too, must _see_. Like me, Barnaby might have loathed the
programs that didn’t let you zip the cursor to an error and correct it
without much ado.

The creation of WordStar, by the way, wasn’t the only act of genius from
MicroPro. The name was a marketer’s dream. Why “WordStar”?

MicroPro already had the programmer’s aid called WordMaster, and
Rubinstein apparently held an informal name-this-product contest for the
new word processor.

“Who’s this for?” asked an employee named Barbara.

“It’s really for the production-minded secretary,” he replied.

“Why don’t you call it Word—?” she said, using a vulgar synonym for
“cat.”

“What?”

Barbara mulled it over. “Maybe that’s a little too risqué. But you say
the secretary’s the hero?”

“Yes,” said Rubinstein.

“The star?”

“Yes.”

“Then why not call it WordStar?”

And so it was.

Hitting the marketplace in the summer of 1979, the product clicked; no
competitor came close; at least none offered WordStar’s get-what-you-see
printing features.

Rubinstein had come out with good, timely software, and now he was
riding the beginnings of the micro wave. Just as with VisiCalc, buyers
soon asked about WordStar by name—before they bought their computers. In
fact, often it was _why_ they bought micros. And Rubinstein found
WordStar wasn’t merely a good first sale for dealers. Frequently, it
would be a second. Balking at WordStar’s price, customers would make do
with an inferior word processor but remember the sales reps’ original
praise of the MicroPro program.

Ironically, as WordStar was taking off, Barnaby, its writer, was headed
toward another burnout. The atmosphere around MicroPro was changing.
Rubinstein, who eventually would name a yacht the _MicroStar_ and move
into a hilltop home with a sunken tile tub, was losing touch with some
programmers. “They locked us up in this little windowless room with
Customer Support,” recalled Jim Fox, Barnaby’s former assistant, who
worked on WordStar Version 3.0, the one I’m using. “It was messy. It was
very noisy—not very good air circulation. And then they were expecting
us to do programming. Rob asked months and months for shelves, and they
never gave them until he threw a temper tantrum.” It seemed strange for
Rubinstein to let this happen. Everyone agrees that $400,000 home or
not, he was the opposite of a golf-course president. And yet Rubinstein
had burdened MicroPro with high-tech bureaucrats who were turning it
into a mini-Washington, inflicting reorganization after reorganization.
The real producers, whether sales reps or programmers, sometimes
suffered. Barnaby quit in the summer of 1980 just after working on an
important sister program of WordStar, MailMerge, which helps businesses
personalize letters with names plugged in from mail lists. “To my
knowledge,” Rubinstein told me in early 1983, “he has not coded anything
of significance since.”

Rubinstein was telling the truth as he knew it. Barnaby, indeed, had
largely forgotten about computers. He had lost excess weight; he had
traveled; he had stopped smoking and shaved off his beard. In
superficial ways he seemed a different man from the writer of WordStar.
And yet Barnaby had left software before and returned; and in late 1982,
unknown to Rubinstein apparently, he had again.

It wasn’t just that he needed the money. He could no longer flee
computerdom so easily. A barrier had tumbled, the one between his work
and the rest of the world. Once micros had been mostly hobbyists’ toys,
demanding hours of soldering and programming. Many of his friends hadn’t
fathomed what he did. But now Barnaby was hearing a woman—formerly
perplexed—say that WordStar was the rage at the stores where she was
shopping for her new business computer. Barnaby’s father got _2010_ for
Christmas and read that Arthur Clarke had written it with WordStar;
Clarke had sent the book to New York on a five-inch floppy and
transmitted final corrections from Sri Lanka through his computer over a
satellite link. Another science-fiction leader, I discovered, also was
hoping to catch up with _2010_—Seymour Rubinstein.

Returned to computers, bearded again, Barnaby in early 1983 was working
for a small rival of MicroPro, Chang Laboratories, aiming at the
lucrative market for software compatible with IBM’s 16-bit PC. He was
like a canny Hollywood scriptwriter. Barnaby was somewhat vague about
his software plans, in part because he really did not know what he would
create in the end, but perhaps also because he did not want to alert the
competition. He would not, in early 1983, say he was working on a new
word processor, only that he was at the keyboard of his new IBM. It ran
WordStar. Barnaby, like thousands of other people, had bought his IBM
version at a local ComputerLand store. You might say it was the neat
completion of a circle, for the founder of the ComputerLand chain was
none other than Bill Millard, the man behind IMSAI, Barnaby’s former
employer.

Barnaby offered his opinion of the WordStar version he had bought at
ComputerLand—competent but unimaginative. Well, how could he outdo his
WordStar? Barnaby answered, and despite his refusal to be pinned down on
a future project (“It could be a spreadsheet”), he gave at least an
inkling of what another word processor from him could be like.

Among other things, Barnaby would take advantage of the newer machines’
more powerful memories; he’d write more instructions for the RAM. So he
wouldn’t have to choose as much between making the program either (1)
more easily understood or (2) capable of moving around words in the
fastest or most efficient way. Smart computers and dumb humans could
coexist more gracefully.

Also, he’d reduce the number of commands in WordStar, a good idea if not
overdone. “I’ve thought, Gee, couldn’t I have only two or three ways of
deleting text rather than twenty. And I look at my habits, and I do use
a lot of them. But most of them I could replace with the same number of
keystrokes or only one more keystroke using a combination of other
commands. I’d never tried to write a program where you didn’t have to
read the manual before. And I still don’t think I’ve succeeded. I think
that’s a worthy goal for the future—to write a program that doesn’t have
to have a manual.”

Back at MicroPro, Rubinstein, by early 1983, had fallen behind some
previous goals of his own. Fewer than 250 people worked for the company,
or less than half the peak number, and the company had saddled itself
earlier with hundreds of thousands of dollars a year in office leases it
no longer needed. “There were some odd things that happened internally
with these visions of increasing numbers of sales,” said a former
MicroPro man, “and they hired too many people too quickly. They pay very
well, and their salesmen were getting incredible commissions. I know one
guy—his first month in sales he took home five grand in commissions.”
Did he sustain that amount? “He didn’t,” said the ex-MicroPro employee.
“Every month after that he fell.” And so, it seemed, did the sales rep’s
colleagues at MicroPro. “They kept trying to break record after record,”
the former employee recalled, “and the only way to do it was to extend
generous credit and get their products out the door.... They had to
produce all the programs people ordered, but they weren’t getting their
money immediately.” With high interest rates, some buyers would stall
payments as long as possible. MicroPro’s growth problems weren’t unique.
Another pioneer in micro software, Lifeboat Associates, a distributor,
also found itself overexpanded and laid off employees.

MicroPro likewise suffered when programmers, ordered to meet
Rubinstein’s deadline, cut corners on an early version of WordStar for
the IBM PC. The software was too hard to adapt to customers’ printers.
And then IBM threw MicroPro a loop. It suddenly changed the PC’s
operating system in a way that made WordStar glitch up. MicroPro wasn’t
the culprit here. And yet it was the one receiving angry phone calls
from frustrated customers. It was, in a sense, a victim of its own
reputation for quality. MicroPro products had bugs like other software
makers’, but fewer of them than most, so that the IBM WordStar
problems—since corrected—enraged customers with high expectations.

Old friends of Rubinstein’s, meanwhile, complained that the firm had
nothing truly original coming out, that MicroPro had evolved from a
programming company to a marketing one. I disagreed somewhat. MicroPro
had succeeded largely _because_ Rubinstein had aggressively sold himself
and his programs. And yet it was also true no other MicroPro product had
commanded as much attention as WordStar, the first big one. Michael
Canyes, a computer consultant, complained that it was “getting a little
gray around the temples.” It was time for updates, drastic ones. If they
didn’t come, if competitors kept duplicating various features of
WordStar, the program would eventually perish.

So far, however, that hadn’t happened.

Nothing had appeared that was both as good as WordStar and marketed as
successfully.

“If you’d asked me when I first introduced it,” Barnaby said, “I would
have said as soon as we stopped moving, somebody would have done
something better. I sort of thought WordStar would be gone by now, but
it’s growing instead. It may sell a million by the time it’s done.” He
wasn’t bragging; he was right.

We were talking now in summer 1983. Barnaby had removed himself from the
payroll of Chang Laboratories, and I suspected it might be because he
worried about living up to his first success. Barnaby didn’t discourage
that impression. When asked if another WordStar might be on its way, he
said, “I hit once; I may not hit again.” I understood. He was no
different from a writer trying to create another blockbuster book or
movie; he would be competing against himself—a contest made more
difficult by the fact that MicroPro’s marketing expertise would no
longer be on his side. I suggested that he and Rubinstein might both
benefit by working together again as a team. If Barnaby agreed, though,
he certainly didn’t make that clear to me, and I hung up thinking that
the Barnaby-Rubinstein collaboration was as dead as the
Welles-Mankiewicz one.

“Let’s just put it this way,” said Barnaby of MicroPro. “They could have
made me happier there and I’d still be there, and MicroPro would still
be growing instead of being flat.”

“Rob is beloved around here,” said a public relations woman at MicroPro
when I suggested that the company might benefit from his return, “but we
have many other good programmers.”

Not long afterward I was talking to Seymour Rubinstein. He was decidedly
more upbeat about MicroPro’s fortune than Barnaby had been. He had added
some fifty people to his staff since we’d last talked. Rubinstein
predicted record sales of about $42 million in 1983, of which WordStar
would be 65 percent; he expected that his word processor would thrive
inside the ROMs of $1,500 lap-sized computers.

During our conversation I expressed my astonishment over a newspaper
article; supposedly, a programmer—unnamed—had dreamed up WordStar in a
week or so during vacation.

“I was amazed to see it myself,” Rubinstein said. “It was really
romanticizing something in a way that wasn’t necessary, beyond not being
true.”

“I talked to Barnaby,” I said, “and he has the normal worries of
programmers and writer-writers—whether he can ever repeat his success.
And I still wonder about the chances of you two coming together again.”

“Well,” Rubinstein said without the slightest pause, “I got him back
working again.”

“Now?”

“Yep.”

“When?”

“Just started a week and a half ago.”

“Christ,” I said, “I sort of popped the question to him.”

“I’d just as soon you didn’t broadcast it,” Rubinstein said. “He’s not
in solid yet, but I expect he will be. You can put in there a blurb that
as of this writing Barnaby came back for a test run to see whether he
could get involved again.”

“As a WordStar user,” I said, “I have a selfish interest in his
developing it further. Will he be working on WordStar?”

“He’ll be working on WordStar,” said Rubinstein. Like a movie man, he
excitedly described his coming attraction. (“It’ll just knock their
socks off.”) The new WordStar would contain a spreadsheet. Also, used
with the right printers, it would offer proportional spacing, meaning
that an “I” would take up less room than a “W,” making the print look
more booklike. What’s more, the new WordStar would be simpler to learn.
Listening to Rubinstein raving over his forthcoming word processor, I
could tell that if Barnaby didn’t work out on the new project, MicroPro
might use someone else. Ideally, however, it wouldn’t. “Just
incredible,” Rubinstein had said of Barnaby’s coding of WordStar. “The
man is a consummate artist.”

Surely, I thought, Arthur Clarke would agree.

Barnaby stayed some months with MicroPro. In fact, he had helped fit
WordStar into the little memory of the Epson lap-sized portable marketed
that year. A micro magazine, meanwhile, came out with a report that a
version of WordStar for big machines, Version 4.0, might contain split
screens. In October 1984, however, I was still waiting. And Rob Barnaby
had left MicroPro in July.

“Things didn’t click,” he said without going into the specifics. “We
talked about a lot of things, but they didn’t jell.” He was now
consulting.

MicroPro suffered in other ways. Yearly income was up 53 percent, and
the company was still shipping thirty thousand copies of WordStar each
month, but quarterly revenues reported in September 1984 were $12.4
million versus $15.6 million for the same period in 1983. The company
sustained a loss in earnings of six cents a share, $756,000. Hoping to
cope with threats such as NewWord, which sold for $250 and used the same
commands as the older word processor, it laid off 10 percent of its
workers and reduced WordStar’s list price from $495 to $350. NewWord
even offered twists of its own. You could tell it to go to a certain
page number, for instance, without having to specify a word on the page
you were looking for. The natural question arose: Why should people pay
$100 more for the real WordStar?

                            ■      ■      ■

  Six Reasons Why Customers (or Noncustomers) Feel Free to Cheat
  Software Companies

  WordStar clones like NewWord aren’t illegal. Getting a “free” WordStar
  from a friend, however, is.

  “It’s like illegally getting a second typewriter—copied from a
  friend’s, down to the serial number,” a software columnist observes.
  “You’re stealing a valuable tool.” H. Glen Haney, the president of
  MicroPro, told me that most copies of WordStar in use are _bootlegged_
  ones.

  While opposing the practice, I’ll list six reasons why customers
  cheat:

  1. It takes all of two or three minutes—maybe less—to copy a disk
    worth hundreds or even thousands of dollars. Yes, anti-bootlegging
    gimmicks exist. But often they _reduce_ software sales; would you be
    as keen to buy a $500 disk if you couldn’t easily make backups?

  2. Everyone does it.

  3. Computer users want to befriend others with similar machines so
    they can draw on them for technical hints or back up equipment.

    And what better way to cement a new friendship than at a copying
    session where the users swap programs? That’s the thinking.

  4. Many software companies overprice their wares. Yes, it’s expensive
    to develop good programs; but some companies, rather than creating
    innovative products, gouge you to pay for development of copycat
    offerings. They themselves rip off people—their more imaginative
    rivals. (No criticism of NewWord here. It is much cheaper than the
    original WordStar and offers some improvements.)

  5. Some people in large companies think software houses don’t give
    big-enough discounts to corporations buying the same program for a
    number of machines.

  6. Many software companies don’t offer enough guidance or other help.
    Customers think, Why should I buy this program when they’re just
    going to ignore my problems once they have my money? The columnist
    counters: “That’s like saying, ‘I’ll just throw out the old
    Judeo-Christian ethic that it’s wrong to steal.’ The other guy being
    wrong doesn’t make you right.”

                            ■      ■      ■

MicroPro’s responded to such competition by keeping WordStar but
developing another word processor, WordStar 2000, aimed at offices that
had shunned micros as too hard to use.

WordStar 2000, named because MicroPro said it would stay modern into the
next century, discarded most of the older program’s commands. There
wasn’t one line of code from plain old WordStar. And WordStar 2000
couldn’t easily read its files—imperiling an industry standard that
MicroPro itself had created. Moreover, it couldn’t run on less advanced
micros like the Kaypro II. Machines in that vein were still good for
word processing, and critics claimed that MicroPro had kissed off the
8-bit market. MicroPro replied that it had wanted to take full advantage
of the hard disks and other capabilities that were showing up in
powerful new computers such as the IBM AT.[21] WordStar 2000 did not run
well on the slower floppy-disk machines. Its early version was pokey,
moreover, even on an IBM XT hard disk computer. However, it indeed
simplified WordStar’s commands and offered split screens, a form-letter
program, a spelling checker that you could use as you typed a letter
rather than having to leave the file to call up the speller,
proportional spacing, underlining displayed on the screen, and the
ability to go to specified pages—in other words, what one writer called
“a catalog of wishes” for people using the older program. WordStar 2000
lacked a spreadsheet and sold for an outrageously steep $595; for $100
more you could buy WordStar 2000 Plus, which included a simple
list-keeping program and software to help hook you up to other computers
via phone. A slogan captured the MicroPro sales pitch: “Easy Word
Processing You’ll Never Outgrow.” WordStar 2000 wasn’t “easy” word
processing—all powerful products took some time to learn—but it was
_easier_ than plain old WordStar.

Footnote 21:

  “AT” stood for “Advanced Technology.”

I went to a MicroPro dealers’ meeting just outside Washington in early
November 1984 and saw a slick, professional sales campaign that would
have done a shaving-cream maker proud. Company officials, including
president H. Glen Haney, said WordStar 2000 wasn’t a fluke: “We’re going
to repeat this process again and again.” Educators, even science-fiction
writers, were said to have helped forty programmers make The Product
easy to use. MicroPro billed 2000 as having been “beyond the
capabilities of one or two genius programmers.” This philosophy, as much
as anything, perhaps explained why Rob Barnaby was no longer with the
company. Like many talented people, especially writers, he was the very
antithesis of a team man. There was a difference between being one of
forty programmers and _rrr_ing away in front of the keyboard at midnight
while the head of the company watched. And yet as a user of WordStar I
still hoped that Barnaby might return to the MicroPro fold. No matter
how many creativity experts MicroPro brought in—and the company in fact
had experimented with one—you could no more replicate a Rob Barnaby than
you could a Welles or Mankiewicz. It was entirely inevitable that the
MicroPro officials at the Twin Bridges Marriott felt compelled to say
that 2000 was beyond one or two genius programmers. WordStar 2000 indeed
had _some_ merits. Still, it was far from the earthshaker that the
original WordStar had been. Barnaby and Rubinstein had so brilliantly
conceived their program that it could hold back the competition for
years and years.

Well into the 2000 presentation at the motel, the room darkened. It was
movie time. The dealers chuckled at “word processing throughout the
ages.” A cartoon caveman wrote on stone, a Greek shuffled around stones
bearing inscriptions for a temple, and a cartoon George Patton barked
orders to the troops as part of a pun based on the phrase
“command-driven word processor.” (See Chapter 5 for a definition.)
MicroPro officials trotted out advertisements that would appear in the
_Wall Street Journal_, _Fortune_, _Time_, and other major publications.
The company was as proud of the ads as of WordStar 2000. A
lie-detectorlike device, measuring electricity in the body, had even
gauged test subjects’ responses to the copywriters’ creations.

After lunch—salad, roast beef, potatoes, and a redemptive low-calorie
dessert—MicroPro let the dealers try out WordStar 2000 themselves on IBM
XTs and ATs. It was a combination sales talk and seminar. MicroPro
quizzed the dealers with questions in the vein of “What do you like most
about the product?” The session greatly increased the dealers’—and my
own—understanding of 2000. At the same time, using a teacher-student
relationship, MicroPro people fortified their depiction of themselves as
the world’s top experts on word processing.

Similar dog-and-pony shows would take place in cities across the country
and overseas. MicroPro by now had four hundred employees worldwide and
thirty-five hundred retail dealer outlets—a far cry from the days when
Rob Barnaby had been writing WordStar in the room from which he’d
displaced the electric-train set. If WordStar 2000 didn’t sell well,
however, MicroPro would shrink into just another software company. It
was a crucial time. MicroPro was deemphasizing products like data bases
and spreadsheets, flaunting its reliance on word processing, and
inspiring headlines like “MicroPro Back to Its Roots.”

                            ■      ■      ■

How to Work on Two Files at Once While Using Plain Old WordStar

=Windows=, among other things, let you view several files at once and
move material back and forth (see Backup IX, “Window Shopping”).

Even though plain old WordStar lacks windows, you _might_ be able to
upgrade your software to include them. Ask your dealer about IBM’s
Topview software and Microsoft’s Windows.

                            ■      ■      ■

For Rubinstein personally, 1984 had also been eventful. He and his wife
had separated—different interests, he said—and he had a heart attack. He
had lost thirty pounds but had come back “stronger than ever.”
Meanwhile, an initial public stock offering in March had made him richer
than ever. It brought MicroPro $13 million.

“After all is said and done,” Rubinstein told me about the offering,
“I’ll end up with a little more than $5 million.” He already owned a
gold-colored Corvette and a house worth hundreds of thousands. “And
okay,” Rubinstein said, “so I’ll decorate the house. I’ll buy some
furniture. So maybe I’ll spend another couple hundred thousand, but most
of the money will be used for investment, not to go on some wild
spending spree.” He said that “unless you’re a dissipated type, your
life really doesn’t change.”[22]

Footnote 22:

  _InfoWorld_, May 14, 1984, is the source of Rubinstein’s quotes about
  the heart attack, not going “on some wild spending spree,” and his
  life not changing.

His corporate life, however, would be different. Perhaps chastened by
Adam Osborne’s failure, some investors had insisted that Rubinstein give
up control of MicroPro. He would still serve on the board. And he would
help plot long-range strategy and develop new products, but the old
entrepreneurial environment was vanishing at MicroPro and in much of the
industry at large.

The Osborne failure haunted Rubinstein in ways besides making money
raising somewhat harder. Some investors in Osborne filed a suit saying
that Rubinstein—owner of Osborne stock—had bailed out ahead of time,
using insider knowledge. “It’s such hoked-up bullshit; it’s just
ridiculous,” Rubinstein said in May 1984. He had “needed the money ...
principally to pay my taxes.”[23]

Footnote 23:

  _InfoWorld_, May 14, 1984, is the source of Rubinstein’s “bullshit”
  quote.

By now, the sales of personal-computer software exceeded $1.5 billion
a year.[24] Throughout the industry, accountants and others in
three-piece suits were increasingly calling the shots. Marketing
considerations—advertising, even the designs of the boxes housing the
software—often overwhelmed technical ones. A word-processing program
called Select typified some so-called user-friendly software aimed at
the burgeoning market.

Footnote 24:

  The $1.5 billion estimate is from Chris Christiansen of the Yankee
  Group.

Backup:

◼ III, The Lucky 13: What to Look for in Choosing Software, page 302.




  5 ❑ The Select Word Processor: Martin Dean versus the Command-Driven
                              Restaurants


“Gentleman Farmers” don’t appear just in whiskey ads. One showed up in
_InfoWorld_—ballyhooing Select, a craftily marketed rival of WordStar.

Embracing Madison Avenue-style tactics, software companies like Select
Information Systems were luring some customers away from programs that
would have been far better for heavy-duty business use.

Select’s word processor retailed for about $500 in 1982, a year after
its introduction, including speller and mailing list programs and a
tutorial disk. Just WordStar—without accessory programs—listed for about
the same.

More than twenty-five thousand copies of Select sold in less than two
years, and major manufacturers started offering it with their computers.
I myself loathed Select. And yet I could see how the program could wow
the throngs jamming their local computer stores. The tutorial disk was a
salesman’s dream: he could walk away while the program baby-sat the
customer tinkering with the computer.

Select Information Systems, moreover, a forty-employee company in
Kentfield, California, was running an advertising campaign as slick as
any distiller’s.

“No contest,” proclaimed a _San Francisco Examiner_ columnist in one ad
in 1982, looking up from his Xerox 820, dangling a pair of glasses from
his hand, like some refugee from a Famous Writers School. “Select was
easier to learn.” The ads didn’t say what he was comparing it to, but a
popular computer magazine named his equivalent of Brand X, WordStar.

The columnist, Dick Nolan, never returned my calls, and Select wouldn’t
put me in touch with the secretary featured in another ad, but I did
track down “Richard Russell, Gentleman Farmer.”

“Nebraska soybeans,” said the ad, “are Richard Russell’s business. But
he rarely gets there. Richard manages his farms from a Victorian flat in
San Francisco. And he does it with little more than a telephone and the
SELECT Word Processor.” What was this, an ad for a word processor or a
communications program? And yet the copywriter had done her job. I read
on eagerly, curious about gentlemanly word processors—human or disk.
“Select supports his interests as efficiently and often more quickly
than could a well-run office back home. The briefest bank instructions
or thickest annual report can be recorded in minutes and retrieved in
seconds.” Was software so powerful? Maybe. The ad quoted Russell:
“Select manages the business. I just reap the harvest.”

The gentleman farmer, however, wasn’t mainly a gentleman farmer—rather,
an interior decorator.

“I spend more time doing that,” Russell told me when I called up out of
the blue, “than on my farm operation, which is managed in the Midwest.”

Then why be a gentleman farmer in the ad?

“I think they just thought the idea of a gentleman farmer was more
interesting than an interior designer,” Russell said. It must have been.
He was deluged with calls, including one from NBC, which was in the
thick of a computer series.

Well, I asked, did he actually use the word processor?

Yes, Russell said, but mainly in his designing business. It was a
successful one, 20 percent commercial, 80 percent residential, including
work on some mansions in the million-dollar range. “I design
architectural interiors, furniture, fabrics,” he said, “the whole
thing.”

What did he most like about Select?

“The self-teaching program was the main thing that appealed to me,” he
said—the tutorial disk.

I asked Russell about the cumbersome series of keystrokes that the
Kaypro version of Select inflicted on people making insertions a few
sentences back in their writing.

He knew about the problem. And he knew about WordStar, too.

“I’m a lot more aware of that since the ad ran,” he said of WordStar’s
reputation as a powerful word-processing system, “but I don’t think I’m
in a position to say much about it since I gave Select my endorsement.
But you’ve brought up some valid points. The whole business of personal
computers is new to me in the last six months, and so I’m learning about
it, as well.” Russell said he used Select several hours a week, that he
could legitimately endorse it even if he wasn’t actually using it mainly
as a gentleman farmer. He was right. I didn’t question his basic
sincerity. But for me, anyway, Select had proved tediously cumbersome.

In early 1983 I called up Martin Dean, the head of Select Information
Systems, and did the proper thing.

“Martin,” I said in effect, “I hate your software.”

Why gladhand information out of him, then stab him in the back?

Dean was smart and a good sport. Not only didn’t he hang up on me; he
spent an hour on the phone giving his point of view. Like the developer
of WordStar, Dean had a philosophy, one born of his own business
experiences—in this case, a WordStar debacle. He was a real estate
lawyer eager for one of his staffers to work with a sophisticated word
processor. “I handed her WordStar,” he told me, “and said, ‘It’s the
standard in the industry.’ And she came back two days later and said she
was not going to do that.”

“She was vehement,” Dean said. She wasn’t going to spend the seventy
hours she felt it would take to master WordStar.

And she wasn’t “just” a secretary. She had a year of law school, had
done ten years of legal secretarial work, and was supervising Dean’s
legal research staff. “She’s one of the brightest women I’ve worked with
in the legal business,” he said. “But she didn’t have the time to learn
WordStar.” A major manufacturer had done a study comparing the two word
processors’ learning time. “And my understanding,” said Dean, “is they
determined it takes about fifty hours of working with WordStar to become
as accomplished as you could become in ninety minutes of using Select.”
I disagreed. WordStar took much less time for me to learn; Select, much
more. With other people, it might be the reverse, but a good company
normally wouldn’t have so much turnover that the employees would lack
time to master a _decent_ word processor.

Defending Select, Dean praised the tutorial disk and the program’s
built-in memory aids. Want to erase? If you hit the “Escape” control and
pressed the “E,” you’d eventually do that. Eventually. Dean and I went
through a keystroke count. He claimed that actually his system—improved
since the one I’d tried—was as fast or faster than rivals if run on the
right machines. He said the Kaypro just wasn’t right for his program.

“If you felt this way,” I asked, “how come you let it be bundled with
the Kaypro?” Why did he and the Kaypro’s maker sign a contract that
allowed Select to be the “free” word processor provided with the
computer?

“Well,” Dean said, “we had that version on the market only three
months”—in 1982. Then, according to him, Perfect Writer underpriced
Select. “Kaypro _then_ thought that was a bargain. They do not now.”

“Why?”

“Try to get a call through to their service department.” He was right.
Kaypro owners were swapping war stories. Theoretically, Kaypro—not
Perfect—would guide the owners through the software maze. Actually, it
didn’t. Not always, anyway. I heard people at user groups deciding which
machine to lie about owning so the Perfect Writer staffers would listen
to their problems. Kaypro, in fact, dropped Perfect software in 1984
after dealers said they preferred WordStar.

Okay, but what about my printer not underlining with the Kaypro using
Select?

Here again, Dean blamed Kaypro, and the printer maker, too, but I wasn’t
about to zero in on who was at fault here. All I knew was that my daisy
wheel wasn’t that exotic a machine. And yet, involuntarily, I’d been
sold cumbersome software that, unmodified, did not even work right with
the other parts of my $2,500 investment.

You may love Select, maybe even after you’ve been running it a while.
“Cumbersome,” remember, is my opinion. A _Washington Post_ staffer named
Eugene Meyer, a Kaypro owner, liked Select and said the slowness “gives
me more time to think.” He was working on a book around the same time I
was and turned out one as long. “But,” I half joked, “if you’d been
using WordStar, then you might have written one _three_ times longer
than mine.”

I called up Ben Shneiderman, an expert on matches between humans and
software systems. Just what did an academic feel about Select-style
systems and WordStar? Shneiderman, an associate professor of computer
science at the University of Maryland and author of _Software
Psychology: Human Factors in Computer and Information Systems_, said:

“Select has very few commands. There are very different people in the
world. You’re very attracted to choice and options, and you seek the
power that WordStar offers. But very simply, people are different. Some
like to drive Maseratis, and some like to go twenty miles per hour.”

He was right. There might even be a version of Select better than
today’s WordStar; software is constantly changing, and when you shop,
you must do your homework to make sure you’re buying the best program
available for your needs at the time. But while I was writing this book,
I loathed Select—even a version more advanced than the one for my
Kaypro.

Who, anyway, wanted to hire a typist content to do the keyboard
equivalent of twenty miles per hour?

And yet I tried to be tolerant. I hit the control key to fire up
WordStar’s commands; Select users tapped “Escape.” “There are
twenty-five thousand people happy with using ‘Escape’ instead of the
control key,” Dean had told me, as patiently as a liberal Baptist
explaining to a Klansman that Jews didn’t have horns.

Certainly it was true: one man’s joy, another man’s plastic-disked
kludge—that was software for you. And what you learned first was often
your first love. A computer magazine even called one article “Getting
Married to WordStar.” “Can you erase your memory modules?” Mark
Robinson, a marketing man with Lexisoft, asked before he mailed me a
copy of his company’s Spellbinder word processor. He had a point. I
liked Spellbinder more than Select, much more, because it ran faster on
the Kaypro, but I still could not abide by the need to enter a new mode
to make insertions or corrections. It seemed inhibiting, this
requirement, though perhaps more in writing than in secretarial work.
Michael Canyes, a computer consultant, at the time loved Palantir. It
offered many of the better features of both WordStar and Spellbinder and
let a nonprogrammer set up the numbers pads of many computers to serve
as function keys. Canyes also appreciated The Final Word, an excellent
word processor for footnoting and other academic requirements. It was
clear. There were serious alternatives to WordStar—some, anyway—even if,
like the writer of the “Married” article, I was already well matched.

In some ways, however, I felt uncomfortable about the general direction
in which the software business seemed to be moving. Would less powerful
but well-marketed products like Select drive out the future WordStars?

_The_ WordStar had benefited from Seymour Rubinstein’s salesmanship. But
Rubinstein also had boasted a solid computer background; and unlike some
of the new people in software, he wasn’t just a businessman cashing in
on an exploding market.

Again and again a pattern was beginning to repeat itself.
Programmer-entrepreneurs would tough it out in the proverbial
garages—for some reason programmers work in garages, authors in
garrets—and score with the right software hit. Propelled by little more
than their drive and technical expertise, their companies would grow.
Then, however, other businessmen, real businessmen, would want the same
niche, and the marketing people would muscle in and set the tone. Or, as
with some new companies, they might have been setting the tone from the
very start.

This had been the classic pattern in many industries—Orville and Wilbur
Wright hadn’t exactly gone on to become major aviation magnates—but
computers were improving faster than had airplanes. And so the process
was accelerated; well-financed managers were rapidly replacing
garage-style entrepreneurs.

The stakes were higher, and striking back, software authors were even
hiring agents. The question arose, however, of the extent to which the
market would remain open to more imaginative garage people, anyway, what
with increased use of teams to develop complex programs.

“The frontier,” said Jeffrey Tarter, publisher of _Soft.letter_, an
industry publication, “is already closing.

“A couple of years ago you got to be successful primarily by competently
executing an innovative idea and by picking the right machine to produce
that execution for. VisiCalc for the Apple is the classic example here,
but lots of other programs achieved success on a smaller scale by doing
something useful for a microcomputer that came to dominate a market
niche”—or, I would add with WordStar in mind, by producing a program
valuable for its very ability to run on a number of machines.

“Now, however,” Tarter said, “the rules are changing.... Marketing
factors are becoming more important. You have to package and distribute
the product with far greater sophistication than before and be able to
spend the kind of money that sophistication requires.”

“It’s like the record business,” said Nick Vergis, then a marketing man
with Perfect Software, telling me about the new programs his company was
developing. “You get a lot more bullets ready than you actually fire.
Some will be hits, and some won’t. You hope you’ll get enough hits to
pay for the new bullets.” Research and development (R & D) was a major
part of the costs of new programs. The original WordStar had come
cheaply; Rob Barnaby had toiled night and day for a fraction of the
money that his counterparts now often demanded.

Then again, advertising and other non-R & D expenditures in the industry
had increased, too. By spring 1984 Select had sold 50,000 copies. That
should have been enough to sustain a small or medium-sized software
company, but even after a public stock offering in November 1983, Dean
still felt capital-short. “We just couldn’t spend enough on ads and
still have money to pay the sales force,” said Dean, who “saw it coming”
by February 1984. That summer he licensed Select to Intelligent Systems
to publish and promote at the retail level. Intelligent, privately held
and based in Georgia, enjoyed yearly sales of $90 million; its Quadram
subsidiary made well-advertised computer accessories. In late 1984
Select merged with Summa Software Corp., an Oregon firm that offered a
stock-market program called Winning on Wall Street, and Dean laid off
six marketing people from Select, so that his original firm had only
twenty-one workers left. The Intelligent deal went on despite the
merger.

“There are many more products available today than the market can
support, and it’s very confusing to consumers,” said an Intelligent
vice-president named Frank Marks. “The user needs to know that he’s
buying from a company that will be around in the future.” He was right.
In that sense, the large companies’ growing ascendancy in software may
have been to the benefit of the consumer. Still, old micro hands may
have gnashed their teeth when they heard that Intelligence would turn
Select into the “Quadsoft” line of software and when Marks said that the
name “leverages Quadram’s brand awareness.” Quadsoft might as well have
been a new shampoo.[25]

Footnote 25:

  The account of Select’s capital shortage and the metamorphosis into
  Quadsoft comes from _InfoWorld_, August 13, 1984. The merger
  information is from _InfoWorld_, October 8, 1984.

To Select Information Systems’ credit, the company had garnered some
favorable reviews of new products in the months before the Quadsoft
deal. (They included Select Write, a $99 stripped-down Select.) Even so,
some of the old-time micro people correctly questioned Dean’s style of
“user friendliness.”

In a _Byte_ article, “Simplify, Simplify, Simplify,” Dean had pushed
=menu-driven= software like Select.[26] The idea seemed logical. You’d
see the choices on the computer screen rather than having to recall
combinations of keystrokes, as you would with =command-driven= systems.
Dean likened a computer menu to a restaurant menu. He lampooned the idea
of “a command-driven restaurant” in which, supposedly, you’d try “to
remember what sort of sauce the veal came with last time and whether it
was pepper or peppercorns that you liked in your green beans.”

Footnote 26:

  Dean’s _Byte_ article appeared December 1983, p. 161.

Wasn’t that stretching it, however? If you ate at the same restaurant
day after day, couldn’t you order many kinds of meals without bothering
to glance at a menu? How would you feel about a waitress who _insisted_
you see a menu even if the fare never changed? She would be pushy,
wouldn’t she? All of a sudden “user friendliness” would be antiuser
pushiness to those using a program regularly. Strictly menu-driven
software should normally be just for occasional users, children, and
adults wanting to be treated like children; and many if not most adults
in the business world worked too often with words and numbers to let
Select-style programs keep them in the infant stage. Granted, exceptions
existed justifying this kind of software. A micro user who occasionally
retrieved information from a mainframe, for instance, could take
advantage of menus to guide him through complicated routines. What’s
more, even WordStar employed a menu to handle installation procedures to
match the program up with various computers and printers. But that was
different from menus that slowed you during your regular work with the
program.

Some of the so-called command-driven programs, moreover—at least
WordStar—actually did have the option of letting you keep a list of
common commands on the screen if you wanted.

Jerry Pournelle, a prominent computer columnist, growled back at the
“user friendliness” crowd, saying that their software didn’t let
ordinary people enjoy the full power of their machines. “It takes a
little work to join the micro revolution,” he said, “but the rewards can
be high.”[27] I agreed. You didn’t have to learn programming, but you
owed it to yourself and your company to make good use of the best
software for your job. A user named Alan Scharf had done exactly
that—saving his firm $200,000 a year.

Footnote 27:

  Jerry Pournelle’s rebuttal to Dean and others of the “user friendly”
  school appeared in _Popular Computing_, May 1984, p. 81.

Backup:

◼ IV, On the Evolution of Software (And a “Perfecter and Perfecter”
Program), page 310.




6 ❑ Three Software Stories: Motorcycles, Homes, and The $200,000-a-Year
                                  Disk


Zzzzzz. I doze off reading lists of the right software for, say,
beekeepers or chiropractors. So sorry; I won’t cover everyone’s
programs. Besides, software is evolving. I hate Select now; I may love
its future editions. And what about WordStar? Although 2000 offers many
improvements over my beloved WordStar 3.3—and I may eventually convert
to it—I don’t like all the changes.

_So don’t think specific programs here. Think concepts._

_In fact, if possible, don’t even think computer concepts. Instead,
think_ business. _Just how could the lessons of the three people in this
chapter apply to_ yours?

                         Ed Boland: Accounting

Ed Boland helps run a motorcycle shop, but you’ll never find him roaring
off on a bike, dodging myopic drivers. “I’ve got a wife and three kids,”
he joked. “Scares the hell out of me.” It doesn’t matter. Boland, a
graying, middle-aged accountant, is just as useful to Clinton Cycles as
a top mechanic or a crack Suzuki salesman.

Above all, a good controller obviously knows where the money is. He
helps his employer avoid unneeded trips to the bank to borrow more.
Clinton Cycles, in fact, borrows rarely.

That’s one reason why, when U.S. motorcycle sales suffered the economic
equivalent of a head-on crash, Clinton survived. The firm even expanded
during the early 1980s. Also, years before, owner Don Smolinski had
wisely diversified. Clinton Cycles was actually Clinton Cycle and
Salvage, Inc., a miniconglomerate with three motorcycle stores and
dealings in scrap metal. Sales exceeded several million a year.

But size and complexity weren’t pure joy. Boland’s accounting software
just couldn’t handle a holding company and five subsidiaries, not
without costly customizing, and nearly a year after computerization, his
feelings were still mixed.

“I don’t regret the decision,” Boland said. But at the time he had spent
thousands of dollars more than planned, and he told me, “There’s been a
few times I would have thrown this computer out the door in a second.”

His horror story—even if it eventually turns into a success tale, as it
probably will—is instructive. He’s good. And he bought his software from
a good store. Clinton Computers, in the same Maryland suburb, won top
ratings in a consumer guide in the Washington, D.C., area. A software
executive, moreover, an outspoken one critical of some other D.C.
dealers, praised Clinton.

So a bothersome issue arises. If a $3,800 accounting program doesn’t
work out easily with good people selling and using it, what happens
among mediocre people?

And there is a second point here. Don’t expect even the best computer
store to serve as your private consultant, intimately familiar with your
business; not, at least, unless you’re buying a big mini or mainframe
from the likes of IBM.

A third point, too, comes through. Don’t computerize a
multi-million-dollar business without a consultant—at least not if
you’re running an extra-hairy program like an accounting one—unless
you’re willing to talk and think computerese or at least take a training
course. Accounting software, anyway, just isn’t simple and reliable
enough yet. Any idiot can flick on a computer and stuff a floppy disk
into a drive or crank up a hard disk; most of the time his hardware will
work fine, but even the brightest of businessmen may need a consultant
to unravel the mysteries of many programs—even “canned,” off-the-shelf
accounting packages like the one that bedeviled Ed Boland.

A blunt, tough-talking man, Boland himself is no moron. He holds a
bachelors degree in accounting, and he’s worked for employers ranging
from hospitals to restaurant chains, including one where he caught a
chef on the take from a supplier.

“Accounting is accounting,” he said. “I don’t care if it’s food or
motorcycles. Life exists the same way.” Moreover, life is a series of
ratios, of intertwining figures. That’s how Boland caught the chef. He
knew that food costs were normally 20 percent of the company’s expenses;
two months after the chef’s hiring, they were 23 percent, creeping up
toward 27 percent, finally. The incident perhaps colored his attitude
toward computerization. He would computerize, but not overdo it, not
lose himself in tangential statistics, not hire extra clerks to key in
data.

“We carry more than seventy thousand new parts _numbers_ alone,” he
said. “Seventy thousand different kinds of screws, bolts, nuts, fenders,
rims.” But if he couldn’t track every single bolt, he at least could
work with major numbers like sales figures for various categories.

Normally, for instance, new bike sales and accessories sales went up and
down together, and if one of the two had fallen off alone, you could bet
that Boland would demand a reason. If nothing else, computers, by making
past information available more quickly, could help him sniff out
trouble.

Computerizing, he saw a micro as one way to avoid greedy consultants and
their expensive recommendations.

“I’ve seen too many instances,” said Boland, “where businesses paid out
$50,000, $60,000 to a consultant who spent six or seven months analyzing
computer requirements. Then he’d recommend $50,000 or $150,000 worth of
computer equipment.” Boland wanted the benefits of the bigger machines
without the costs. His goal was to reach the point that a somewhat
larger competitor in the D.C. area already had; the rival owned an IBM
34 system with a six-digit price.

“He used to work for IBM fifteen or twenty years ago, before he went
into the motorcycle business,” Boland said. “He now has just about every
one of his salespeople on commission, and he knows exactly what they
sell every day. He can tell you where each motorcycle, each piece of
inventory, is.

“He can tell you whether it’s in a truck, what color it is, where it is,
what stage of preparation it’s in for delivery. He puts his purchases in
the computer with an inventory program. The moment a salesman sells a
cycle, the register itself deducts it from inventory. It’s a
=point-of-sales= system. So theoretically, at the end of the day he
knows exactly what he started the day with, what he sold, what he added
to it, and what the bottom-line figure is. We’d love to get to that
point.

“The likelihood of this happening with us, though, is very low. I don’t
know if all this detail is necessary. And our business is seasonal, and
I don’t want too much cash tied up in the system. And what’s the sense
of keeping instant track of every nut and bolt sold? But we’d love to
get the major items in on computer. The motorcycles, for instance. They
can easily sell for up to $6,000 apiece, so it’s worth it.

“It’s a question of software. This competitor has spent more than
$100,000 to develop specific software to get what he wants. Now if
you’ve got $100,000 to throw away and want to hire a programmer full
time at, say, 0,000 a year, that’s fine. Most companies like us can’t
afford that.”

So Boland bought several programs off the shelf from Clinton Computers,
including Accounting Plus, which he began trying to use as an electronic
general ledger. He ran it on a North Star computer with a 5-megabyte
hard disk—a memory device capable of stashing away the equivalent of
maybe 2,500 typed pages of information. The North Star system was just a
way for him to get his feet wet in computing with a general-ledger
program. Boland, though, would switch computers even sooner than
expected. The system’s memory space wouldn’t suffice for the records of
his miniconglomerate, and it wasn’t easily expandable. And he would have
trouble getting the machine repaired as quickly as he needed. Clinton
Computers, however good its service department, just could not respond
fast enough to suit _his_ requirements.

And the software seemed just as major a disappointment, what with the
need for complicated customization.

“The biggest problem I ran into at the store,” he said of the hardware
and software, “was ‘We’re going to sell you a system that we think will
do the job, but not necessarily so.’”

Both the buyer and the seller, in this case, apparently lost the
software gamble; they apparently came out on the wrong side of
“necessarily.” Clinton Computers did not win, because it _isn’t_ a
fly-by-night operation. Boland’s name had come to me from none other
than Sue Grothoff, who’d sold him the software. She had enough
confidence in herself and her store to offer Boland as the source of a
“candid” story, and my respect remains, especially after having talked
to another business customer, raving happy about her ability to
understand his company’s software needs.

Boland emphasized that Clinton wasn’t out to cheat him. “Sue is a very
nice person.” And he liked the software expert there, too. “He knows how
to change software, but you have one person trying to meet the needs of
too many customers. He’s spread too thin. Clinton never gave him enough
time to get the program running at my business. And we never could seem
to get together to get the twelve hours of training they’ve promised me.
To be frank, I think we spent the twelve hours trying to correct the
problem I had rather than on training.”

Giving Clinton Computer’s side, Grothoff said, “Because of changes that
Ed wanted in the software, it took longer to adapt the program to meet
his needs. And that used up the twelve hours.” Evidently, Boland and
Grothoff stayed on good terms, because she later sold him a new Kaypro
portable for home use.

But with his big computer system at work, Boland—for one reason or
another—seems to have suffered more than his share of woes.

“Accounting Plus,” said Boland of the software he bought there, “is a
very good program, but it was designed for one single company to be
subdivided into departments. You could have six departments, everything
from sales to used parts, and it will work beautifully. But it wouldn’t
for what I wanted. It would not treat a motorcycle store, for instance,
as a subdivision of a holding company. I could not pull off separate
profit and loss statements or separate balance sheets.”

Clinton Computers, to its credit, referred Boland to a consultant
familiar with the =source code= of Accounting Plus—a part of the program
that would enable it to be customized. The consultant took in Boland’s
North Star computer system as a trade-in. He sold him a Delta
microcomputer and TeleVideo terminal in return, along with a hard-disk
system upgradable to 70 megabytes. With the software customization
included, the cost came to $20,000, minus the $12,000 trade-in. The
consultant, like Clinton Computers, didn’t know as much about accounting
as Boland had hoped. But through sheer tenacity Boland at least got
himself a halfway usable program.

“I had the software changed,” he said, “so that instead of one company
with departments in it, it now reads a holding company with subsidiary
companies. The software was changed to print out separate balance sheets
and separate income statements for me.

“On the income-statement side this machine will ask me if I want a
consolidated or individual by-page income statement. It will print out a
holding company and then, in successive order, on each page, the income
statement for each company. When I go to the balance sheet, it will ask
me that same question.

“If I tell it I want individuals and a consolidated by page, it won’t do
it. I must ask it individually each time for company one, then company
two, right down the line. I have to give the computer individual
instructions to do that.

“And that was the best my consultant could do to change the software. It
got the job done, but not all the way.

“I’ve since found out that for $400, not ,800, I could have bought an
accounting package that would do exactly the same thing I wanted.”

So why didn’t he buy it?

“Why spend another $400 to delve into it further and then find out _it_
isn’t what you wanted?” Boland asked. “I think it’s stupid to spend
money at this point. I have a system I know I can make work within
certain limits. I’m still in the learning phase, and I’ll probably still
be there for another year, for all I know.” I thought he was too
patient. If his software system was a dog—perhaps not for everyone but
for him—he should change it. Four hundred dollars was a pittance
compared to Boland’s total investment of $20,000.

Ideally, too, as he said himself, he would have gone to a consultant in
the first place, not just any consultant but one familiar with
accounting. And yet it’s understandable why he acted as he did. Why
repeat the mistakes he’d seen at other companies? Why not frugality?
Better to be out $20,000 than $50,000 or $100,000 after paying for a
mini, a consultant, and the other trimmings. His computer wasn’t making
or saving buckets of money for Clinton Cycle and Salvage as of early
1983; but it might in the future as he got his software under control
and could, for instance, easily put salesmen on commission.

He told me, moreover, that he would soon stop farming out the company
payroll—up to seventy people—to a computer firm. He also was mastering
an electronic spreadsheet. He did not plan an accounts receivable
program, because Clinton Cycle collected quickly through checks and
credit cards, but an accounts payable one was in the offing.

“It’s going to give me the companies’ names, the payment terms, the
volume I deal with them each month,” Boland said. “It will flag when the
bills are due, and it will also generate checks.”

He was also going to crank up a mailing-list program, using a list of
all buyers of new bikes within the last three years—a sensible project,
considering the market for accessories and repeat sales. Obviously,
here, as in other applications, the more information built up on his
hard disk, the more his machines would justify the $20,000 investment.
The benefits of computerization for Edward Boland might not be
immediately dramatic, but with his stick-to-itiveness, sooner or later
they’d almost surely come. Boland’s battles with computers were to
continue. When I caught up with him in spring 1984, he said he’d bought
yet another computer system.

                Charlie Bowie: Data Base and Spreadsheet

Remember the customer who was raving happy about his software—also
bought from Sue Grothoff at Clinton Computers?

That’s Charlie Bowie, who, when we first talked, was a vice-president of
Washington Homes and manager of its Southern Division. He told me he
expected two Zenith micros to save his company perhaps as much as
$50,000 a year, maybe more.

In just one month, in fact, his $5,000 computer had already saved the
equivalent of thousands of dollars in executive man-hours.

Even before he and I met, his assistant, behind his back, was singing
praises of her boss and their new machine. “I wanted to learn word
processing,” said Julie Grimes, a young, blond woman who could have been
the secretary in the IBM commercials saying the advertised product was
“a piece of cake” to master.

Gazing at the Zenith—which she and Bowie use for data-base work,
spreadsheets, and some word processing—she said: “It really comes in
handy.... We were both worried. Charlie told me, ‘Don’t worry. We’ll
teach each other.’”

Bowie by now was in the room, and it was immediately clear he’d won her
respect through his brains and dedication, not through the normal
trappings of executivedom. He was bearded. He wore a sweater and heavy
boots and wire-rimmed glasses. He plainly was the construction
industry’s version of the proverbial shirt-sleeves manager. He must
loathe paperwork, prefer the field to the executive suite, even if he
was a vice-president of a publicly owned real estate company with twelve
hundred stockholders. He was in his mid-thirties. That wasn’t so much
younger than Ed Boland, who himself, interviewed on a Saturday, had worn
casual clothes. And yet the two somehow came across as being on opposite
sides of the generation gap that all the pundits were babbling about
during Vietnam. I could imagine Boland watching _M*A*S*H_; I could
imagine Bowie, in the right setting, being a mild version of Hawkeye. He
wouldn’t necessarily do things the traditional way, but in the end no
one would care, because whatever it was, he’d succeed. Ed Boland was a
man with a fondness for constants—a characteristic that in his
profession had served him well. Charlie Bowie, I sensed, enjoyed
surprises and change.

Bowie’s company, like Boland’s, had to be good to have survived so long
in a boom-and-bust industry. Everyone needs transportation, everyone
needs housing; everyone does _not_ need recreational motorcycles or
_new_ homes. Across the country, home sales had plummeted at the start
of the 1980s. Washington Homes’ sales had been almost $30 million in
1980 but just half that two years later.

Yet Bowie’s company had survived the ups and downs since 1965. The
management philosophy struck me as the same as Clinton Cycles—the lean,
mean school. It was early 1983 when we first talked. Another housing
boom seemed ready to explode, and Bowie was working a sixty-five-hour
week, “because we’ve gotten very busy, very quickly, and we haven’t
built up our staff rapidly. It’s hard to find qualified people, and we
don’t know whether the recovery’s here to stay.” Small wonder that he
welcomed his computer as a sort of financial radar—an early warning
system that would buzz before the bombs fell.

Washington Homes was a general contractor. In other words, it was just
as much in the management and budget business as the building business.

Bowie and his company didn’t hire laborers, didn’t buy every nail and
brick. Rather, they farmed out the construction to subcontractors, some
of whom, if not policed, could wreak havoc on Washington Homes by, say,
finishing work late.

You can’t do plumbing and the electrical wiring, normally, if the walls
aren’t up yet. You’ve got to keep your invisible assembly line moving.
The sixty phases on Bowie’s “House budget summary” started with items
like “Engineering” and “Water Sewer Charge,” continued through “Brick
Veneer” and “Siding” and went on to such details as “Fences” and “Trash
Removal.” If Bowie was late in submitting bids or getting what he paid
for, it wasn’t a bureaucratic abstraction. It meant a late house, an
unhappy customer, perhaps, and above all, more interest to pay the bank
on Washington Homes’ construction loans.

Bowie, moreover, had to keep track of his customer’s own financing
arrangements. The company’s houses sold for anywhere from $55,000 to
$135,000, but most customers were first timers who had never before
wended their ways through the mortgage maze. Bowie could reduce his
company’s carrying charges if he didn’t rush homes to completion before
the customers were ready for them.

“We don’t make any money until we deliver the house,” he said, “so we
need to keep track of the time between when people contract and make
application with a lender and how long it takes for them to win loan
approval.

“When our company had ninety or a hundred houses and was backlogged, it
was fairly easy to do manually. But now we have almost five hundred
houses in our backlog.”

Shopping around for a system to handle all those grubby details, Bowie
found that computer stores didn’t treat their first-time buyers as well
as he wanted to treat his. “I looked at computers for a year,” he said,
“and the biggest thing I found was the condescending attitude of the
people in the sales centers to someone who knows nothing about it.

“I’d walk into a store and give them a written list of my requirements,
and the first thing they’d tell me was ‘Your requirements are wrong.’
And that was the case until I got to Clinton Computers.”

Bowie showed Sue Grothoff, the sales rep, his sixty-phase budget sheet—a
basic common-sense rule of software and hardware shopping. If you’re
working with documents, at least nonconfidential ones, then _show_ them!
Do so to a store. Do so to a consultant if you have one. Explain as
clearly as you can just what kind of paperwork you’re computerizing.
Here, incidentally, you can’t compare Bowie and Boland in an
apple-to-apple way. Accounting programs can be much trickier than data
bases and spreadsheets, especially for companies with unusual
circumstances like Boland’s—that is, all those subsidiaries in a
small-to-medium business. It’s clear, though, that whatever happened,
Grothoff and Bowie communicated much better than she and Boland.

“At this point,” said Bowie, “I was only interested in loan processing
and budgets, and the main thing I was interested in was budgets.”

He thought he needed above all an electronic spreadsheet. Here, however,
for once, a computer sales rep knew his needs better than he did.
Grothoff persuaded him that most of all he needed a =data-base=
program—one that would help him track loans on hundreds of houses. It
would store information and rearrange it in patterns he needed. He might
not want full copies of all loan-processing reports, for example.
Instead, he might want just the names of the home buyers, say, or just
the foundation costs of each house. Or he might want the program to tote
up all the foundation costs or perform other arithmetic, including
complicated multiplication and division or calculation of ratios and
percentages. And with a program like dBASE II that’s possible. Like many
of its rivals, it will do some complex calculations, not just shuffle
facts around. There are many books on dBASE II—yet another advantage and
indication of its popularity. (Two good choices are _dBASE II User’s
Guide_ by Adam B. Green and _Everyman’s Database Primer featuring dBASE
II_ by Robert Byers.)

Here are some ways in which dBASE II might organize your records if
you’re an executive like Bowie:

1. The CREATE command lets you begin a =file=.

2. A file in a data base is the electronic version of a file drawer or
   cabinet. It’s just the space on the disks holding =records=—say, the
   house-budget summaries for your homes.

3. A =field= is a category of fact like the amount of money spent on
   each air-conditioning system for each house.

4. =Structure= is simply the way a record is set up. There are three big
   considerations—the =field names=, the =field width=, and the =field
   type=. The field name is simply a field’s title. The field width is
   the number of spaces required for the information in each field. The
   field type can be one of these categories:

   a. A =numeric field=—just numbers

   b. A =character field= or =alphanumeric field=—numbers, letters,
     question marks, miscellaneous symbols like “@,” or spaces between
     letters or numbers

   c. A =logical field=—one with just two choices, like “Y” for “Yes”
     and “N” for “No”

5. The EDIT command changes the contents of a data field. You can type
   in modifications after putting your cursor in the right place.

6. A command to APPEND can add new records to your electronic filing
   cabinet.

7. =Sorting= lets you reshuffle records alphabetically, by date or other
   ways, just as you would index cards.

8. The LIST command tells dBASE II to flash across the screen the
   records that you specify.

9. .AND. helps you narrow down the information you’re looking for or
   changing. Consider this hypothetical example: LIST FOR SALE:PERSN =
   ‘BABBITT’ .AND. LOAN:AMT = ‘$70,000’ would guide you to all houses
   that a sales rep named Babbitt sold to a customer borrowing exactly
   $70,000.

10. .OR. is another way to describe the desired facts. LIST FOR
   SALE:PERSN = ‘BABBITT’ .OR. LOAN:AMT = ‘$70,000’ would indicate you
   wanted to see records involving either Babbitt or a loan of $70,000.

11. LIST FOR .NOT. SALE:PERSN = ‘BABBITT’ could help weed from view, or
   the files, all records involving Babbitt.

12. =Command files= are programs that tell the machine how to manipulate
   the data so you needn’t repeat complicated procedures one by one. You
   might work out these files to simplify your secretary’s work—or he or
   she might do the same for you.

Bowie and Grimes mastered dBASE II basics in eight hours of classes at
Clinton Computer. “dBASE II was real easy,” he said. “The manual is in
plain English. Even without all our records in the computer now, it
saves me and Julie probably five or six hours a week. We were doing it
manually before, and we’re on the verge of saving other people in the
company lots of time with the loan processing by using dBASE II. I think
we’d have to say with five hundred houses in our backlog there is the
potential for this to save us $50,000 a year in carrying charges that
may have accrued under the old system of keeping loan-processing
records.

“We are going to buy another machine,” Bowie said, “for the Northern
Division.”

The potential $50,000 annual savings from the two machines, by the way,
would include just reductions in carrying charges—not in executive time
or tasks besides loan processing. Consider the economies that would
result simply from less paperwork.

“When we first set up the computer,” Bowie said, “we set it up exactly
like we were doing things manually. As a division manager, I’m in charge
of marketing and production. And earlier we had (1) marketing reports,
(2) production reports, and (3) reports combining highlights of each for
me to determine whether to start houses and things like that. But now
all three categories appear on one loan-processing form.”

dBASE II (or the new dBASE III) may not work for you. But for Bowie it
was a dream program through which he could store and retrieve records
quickly and conveniently for any one of many purposes. He might set up
his records mainly for loan processing. But the “SALE:PERSN” field,
combined with the “SALE:PRICE” one, could tell him which outside sales
reps were selling the most expensive homes. In other words, the
loan-processing data base was one good way to keep track of the salesmen
catering most successfully to the $135,000 buyers. For who cared what
Bowie called his data base—“Loan Processing” or “Sales”? The point is,
he could follow the salesmen’s performance, too, through
cross-references between fields. dBASE II was a treasure trove of
information about trends, sales, or otherwise.

“The problem,” said Bowie, “is that dBASE II would work fine with my
budget summaries for my houses, except they require sixty fields and
dBASE II is limited to thirty-two. So Sue suggested the Multiplan
spreadsheet program. Multiplan is easy to use, even easier than dBASE
II. Julie got started with Multiplan with just fifteen minutes of
instruction.”

Multiplan works on the same idea as the better-known VisiCalc program,
which, like WordStar, has sold hundreds and hundreds of thousands of
copies.

The true origins of these spreadsheets go back to 1978. A Harvard MBA
student disliked the tedium of using a calculator to tote up columns and
rows of interrelated numbers; it was boring even with a pocket
calculator. A change in just one number could throw off dozens of other
entries, so imagine the brain-numbing effect of making an error and then
having to recalculate an entire spreadsheet. Why not write a computer
program to alter all the other variables if one changed?

And so was born the electronic spreadsheet; it and word processing are
the single most popular uses of microcomputers—the real justifications
for their existence. A VisiCalc-type spreadsheet can add, subtract,
multiply, average, do partial sums, find minimums, maximums, simplify
your life in a number of ways.

A description of VisiCalc in _CPA Micro Report_ ticks off an awesome
number of applications: “sales forecasts, profit and loss statements,
rate-of-return calculations, project scheduling, tax calculation,
pricing strategies, financial planning, loan amortization, league
standings and report generation.” An electronic spreadsheet can help do
your checkbook; or it can assist in the preparation of a small country’s
budget—which, in fact, has happened.

Some even say that spreadsheets are contributing to the paperwork
deluging American business. VisiCalc coauthor Dan Bricklin disagrees. “A
lot of calculations,” he said of the pre-VisiCalc days, “were being done
on the backs of envelopes or corners of envelopes or the corners of
newspapers. VisiCalc isn’t causing people to produce more numbers and
reports. Those numbers were always there, but they weren’t always being
identified.”[28]

Footnote 28:

  The Bricklin quote comes from Steve Ditlea’s excellent article in
  _Popular Computing_, September 1982, page 48, which helped me
  appreciate VisiCalc’s many uses.

“Multiplan is incredible,” Bowie said of his VisiCalc-style software. “I
have generated budgets to see if they’ll do all I want them to, to
consider all the what ifs.

“And it’s a big help in scheduling production. We have a factory
producing cabinets for our homes, and our scheduling system is critical,
since at most it can produce cabinets for only fifteen units a week.”
The cabinet plant manager, caught between the demands of Washington
Homes’ northern and southern divisions, had scheduled production
according to his own whims.

“It was costing us a lot of money in missed settlements,” said Bowie,
“and cabinets were not delivered, or they were the wrong color and
size.” He was talking in late February, telling how, the other day, he
had loaded in thirty-five more cabinet orders and instantly learned “we
were out to April 15 on cabinet deliveries. That’s the soonest we could
get them based on the plant’s production capabilities. I’m meeting with
the manager this morning to see if in the future he can up his output.
I’ve found that everybody’s got to live with lead times. Everybody’s got
to give us the right lead time on orders, which means we are now
ordering cabinets for delivery at the end of April and May, where we
generally in the past would not have ordered May delivery until April.
If I miss five house deliveries in a month because of cabinets not being
there on time, then that’s ,000 to $5,000 in carrying charges over the
next three to five months.”

Similarly, Multiplan was probably saving Bowie several thousand dollars
more over the same period by “identifying houses not started because
building permits have not been issued. And it will help identify the
reasons why they haven’t been.

“To get a building permit, all sorts of things must fall into place. And
now we can look at any particular job at any particular time, and if we
see it isn’t started, find out why the permit hasn’t been issued.

“We can determine if we’re waiting for site plans or a plumbing permit
or electrical permit or whatever it happened to be and instantly target
and solve that problem.

“Before, the record keeping was ‘Go get a permit. Have you got it yet?’
There were no details, no backup. We relied on our field people to get
the permits, and they would get the permits in a way that was timely for
them and their production schemes but not in a way that was timely for
us in bottom-line deliveries. So we are now able to target all the
permit process and make it happen at our rate.” Not only was Bowie using
Multiplan as a spreadsheet to plug in all the what ifs; he was also
using it as a data base, even if it wasn’t as nimble in manipulating
nonnumeric data as dBASE II could be.

Whatever chore Bowie was using Multiplan for, he loved the “Help”
screens. He could turn them on to guide himself through the commands he
wasn’t familiar with; besides, all of Multiplan’s basic commands were
normally at the bottom of the screen, anyway.

Multiplan, by the time you’re reading this, may not be the best
spreadsheet on the market, at least not for you. But at one point _CPA
Micro Report_ was pronouncing it the “new Empress of Spreadsheets” for
accountants using a wide range of computers. Multiplan even worked with
VisiCalc files so that users of the older program could easily convert.

“Multiplan,” said _Micro Report_, “... can sort a line-by-line record of
events by account number or name—a frequent requirement in CPA
applications.” Keepers of expense accounts, presumably, could cherish
such a capability. Also, Multiplan, as the newsletter pointed out, lets
you name your variables; you could refer more easily to the =cells= or
the exact locations in the columns and rows. Instead of saying cells
“A26” or “R38P,” you could refer to “Sales” and “Total Costs.”

With programs like Multiplan, software designers are more successfully
catering to the needs of businesspeople who want computers to adjust to
them rather than the other way around. That’s how it should be. Bowie is
a construction executive, not a computer expert, and Boland’s an
accountant rather than a hacker.

Bowie, however, plainly seemed more willing to live with the
complexities of existing software. Many in his place would have used a
consultant—and wisely, I think, for Washington Homes was a
multimillion-dollar operation—yet Bowie had the background and patience
to computerize just with guidance from a store. He might not have been a
computer expert. But he loved the new. He loved complexity if he could
logically unravel it. He didn’t mind mistakes. He felt in control
because he had backups on disk and on paper. The manuals didn’t scare
him. Instead of soaking up every word there, Bowie, like Seymour
Rubinstein, had a gift for knowing which page to flip to if he had
trouble. Bowie was a born micro user. However serious about his job, he
might as well have been a child relaxing after school with a few rounds
of Pac-Man. He loved seeing instant cause-and-effect relationships. He
took as much delight in learning where his division could be six months
hence as a child might take in winning an arcade game. He considered his
computer “the greatest therapy in the world,” an opportunity to “sit
down and feel really good” in “a fairly high tension business.”

Edward Boland, too, however, in a different, more structured way, was
curious about numbers and life, and in the end, I suspect, the two men’s
learning styles didn’t entirely explain their opinions of their
programs. Bolands’ general-ledger software just wasn’t right for his
needs. It straitjacketed him. Bowie’s programs, on the other hand,
helped him do just about anything he wanted.

“Anything,” incidentally, included advancing his career. When I next
caught up with him, in May 1984, he was president of another
construction firm and owned one-third of that company and was taking
home a paycheck thirty-five percent bigger. Bowie said his computer
skills “had a great deal to do with it. I had management tools that not
very many other people had.”

          Alan Scharf: Integrated Program, Including Graphics

Alan Scharf, a forty-three-year-old New York executive, also has a nice
touch with software—a good-enough one, in fact, to have helped win him a
job at a blue-chip firm at triple his old salary.

“It’s done wonders for my earning power,” he said from his offices at
Merrill Lynch Leasing, Inc., where he was a $75,000-a-year assistant
vice-president. “I got this job because I walked in and told them I
could do a better job on an Apple.

“I didn’t own one at home at the time. But you can be sure that I bought
one promptly and boned up on it for the next three weeks, and of course
I’d done a lot of research on the Apple before then to make sure I could
deliver on my promise.

“My previous company had refused to let me get one to improve operations
there and do estate taxes. I had to do them by hand on a calculator. It
took hours per client. And I got mad. Most people my age are afraid of
computers, but I’d worked with word processors. And what are word
processors but another kind of computer?”

So Scharf left his job as an estate tax planner with a staid old
brokerage firm and set up shop at Merrill Lynch’s division dealing with
real estate and equipment leasing.

It was a VisiCalc devotee’s dream job, one calling for quick,
repetitive, accurate math in deals as big as $150 million. Merrill Lynch
Leasing made bids to companies hungry for better cash flow. The leasing
company (and rivals) offered to buy their headquarters buildings or
other real estate, freeing the money for bigger factories or research
and development. It was a series of leaseback arrangements. Merrill
Lynch organized syndicates for the ultimate buyers—people or companies
eager for tax shelters. And that meant more than a little numbers
crunching.

Imagine the variables. The deals had to be sexy enough to the selling
companies for Merrill Lynch to win the bids. At the same time, the tax
shelters couldn’t leak. The deals must provide the buyers with the
write-offs that the prospectuses from the leasing company promised.
Ideally, too, they would yield maximum tax advantages on minimum
investments. And for investments of different sizes and at different tax
rates, just what would the various benefits be?

When Scharf reported for work, he found that the real estate department
of the leasing company was on the verge of spending $200,000 a year
tapping into an outside firm’s computer to come up with the right
numbers. The big machine would have been able to do simple
debt-amortization calculations. Scharf could have told a company, for
instance, how long it would take to pay off a mortgage on a building for
which Merrill Lynch proposed a leaseback. But that was only a small part
of what the job needed. And what about the costs?

So Scharf instead used an Apple system costing less than $7,000, a
one-time investment. The Apple couldn’t do all the calculations needed,
but it could actually outperform the time-sharing system in some ways.

Consider simultaneous equations. The software on big machines—at least
by way of the terminals at Merrill Lynch Leasing—just didn’t include
them. But the Apple could simulate this capability. With the VisiCalc
spreadsheet it could juggle around dozens of interrelated statistics,
using nightmarishly elaborate algebra with Catch-22-like mathematical
spirals. In other words, you wanted to know the value of _x_, and it
depended on the value of _y_ and _z_, and you couldn’t solve for _y_
until you solved _z_, and you couldn’t solve for _z_ until you knew _x_.
That’s how it worked, except, quite possibly, Scharf and his staff would
be wrestling with, say, _a_ through _k_ instead of just _x_ through _z_.

Struggling with these Catch-22s, the Apple was a slowpoke by computer
standards. It still took half an hour. That might seem like the Indy 500
to someone accustomed to hand calculations. But Scharf must have felt
the same way I did about inferior word-processing software. However
faster than without a computer, it still limited your possibilities. You
didn’t have as much time to experiment with all your choices. And the
more time Scharf had, the more closely he could consider all the
variables and the more attractive could be Merrill Lynch’s leaseback
bids. The Apple did its job. “We used it to compete successfully for
work with a number of well-known clients,” Scharf said. “Anheuser
Busch—we did their office building in St. Louis. We worked with
Beneficial Corporation. We’ve done a number of K mart stores.”

Scharf, never smug, still tinkered with the Apple and its software. An
observant computer dealer noticed he would keep asking for larger RAM
boards to allow him to do bigger, fancier spreadsheets.

And so it was that the dealer nominated Scharf a tester for Lotus 1-2-3
in late summer 1982. 1-2-3 was the new =integrated software= from Lotus
Development Corporation, a Massachusetts firm started by a former rock
disk jockey rich with $500,000 in royalties from programs sold to the
makers of VisiCalc.

1-2-3 combined a spreadsheet, graphics, and data base. You could, for
instance, pump figures from the spreadsheet program directly into the
data base with a few simple keystrokes. You didn’t have to go through
unwieldy computer rigamarole to transfer facts from one kind of
electronic file to another. More important, however, Lotus, at least for
Scharf’s use, was a more powerful numbers cruncher than the VisiCalc he
ran on his Apple. Lotus was for the 16-bit IBM PC. Sixteen-bit machines
were speed demons for numbers crunchers, especially with powerful
programs like 1-2-3. An Apple-VisiCalc duo handled worksheets with 254
rows and about 65 columns. But an IBM and 1-2-3 duo could take on 2,048
rows and 256 columns.

Scharf’s first test version of 1-2-3 cracked simultaneous equations in
four minutes, one-tenth the time that the Apple-VisiCalc combination
took. Income and cash-flow statements came out calculated to the nearest
penny.

                            ■      ■      ■

  Alan Scharf’s Tips on Choosing the Right Spreadsheet

  Not every spreadsheet user has needs as complex as those of Alan
  Scharf, a whiz with Lotus 1-2-3 and Symphony, but here are traits he
  says you might look for:

1. A large number of rows and columns. A spreadsheet of 254 rows and 65
  columns doesn’t mean you can work with 254 rows _and_ 65 columns
  containing a total of 16,510 cells. The actual number of cells—the
  number of columns multiplied by rows—will be only about a thousand. A
  640K-RAM machine and an elaborate spreadsheet would be much more
  appropriate for budget planners in a large corporation with many
  products and divisions.

2. Speed. “Even with a simple spreadsheet,” says Scharf, “someone might
  get annoyed if it seemed to drag.” In late 1984 his complex
  calculations on an IBM PC were taking as much as four and one-half
  minutes. And he said: “There are times when I just need the answers
  faster.” The powerful IBM AT could run the present version of Lotus
  1-2-3 twice as fast. However, he was still looking forward to the day
  when a version of Lotus 1-2-3 for the AT would require even less time
  and address the full 3 megabytes of memory (aided by a new operating
  system). Consult micro magazines for the latest speed comparisons.

3. General simplicity and ease of use. In tricky places, does the
  program offer “help” messages in plain English to guide you through
  various procedures if you want? Ease of use will increase as computer
  memories grow larger and leave more room for “help” features.

4. Range of commands. Most spreadsheets nowadays let you easily move or
  copy numbers. But there are less common but very useful commands.
  Symphony, for instance, lets you flush out formulas behind calculated
  cells so you can regain available memory space.

5. The ability to do what-if tables. The best spreadsheets won’t just
  tell you what your profits would be if your costs increased by _x_
  amount. They’ll also let you calculate for a whole range of numbers
  around _x_, automatically creating a table.

6. Easy consolidation of figures from different spreadsheets. That’s no
  small matter if you’re trying to come up with a profit and loss
  statement for a twenty-division company. Lotus 1-2-3, unlike some
  rivals, lets you consolidate an unlimited number of divisions.

7. =Natural order of recalculation.= Cells must influence the numbers in
  other cells in a precise sequence if some calculations are to be
  accurate. Natural order of recalculation helps you automatically
  control that sequence.

8. A useful =macro language=. Macros are combinations of commands that
  you can program into your computer to reduce the number of keystrokes
  and save time. A macro language systematizes these shortcuts.

                            ■      ■      ■

He could use 1-2-3 in the future, moreover, as a data base with up to 32
fields and up to two thousand records, and it did allthe basic search
and sorting that you’d have in other data-base systems. At the time I
talked to him, the names and addresses of investors—receiving quarterly
income reports—were still stored on an Apple. Scharf was waiting for the
right word processor-mailer to come along to work with the 1-2-3. Then
the massive retyping job for the address lists would be worthwhile. With
space for two thousand names, 1-2-3 would be much more useful than just
a small filer. It wouldn’t be just a primitive record-keeping system
with limited capacity.

Meanwhile, for Scharf, graphics was a snap. “If I send out a thirty-page
bid, I do three or four graphs with it,” Scharf said. “We have a selling
job to do with both the potential corporate leasees and the potential
inventors. The presentations are complex, and the graphics come in very
handy. We use line graphs and bar graphs showing the expense of lease
payments versus mortgage payments if they went out and mortgaged the
properties conventionally. The minimum terms of the leases are usually
twenty-five years; it’s a huge numbers-crunching job, and we try to
simplify everything as much as we can. I come up with the figures on the
spreadsheet part of 1-2-3. Then I tell what I want on the graph. Maybe I
want to make a line for the rental income, interest expense,
depreciation, or taxable income. So I select the appropriate columns on
the spreadsheet. Then I push ‘V’ for ‘View,’ and I can see my work
instantly as a graph. If I don’t like it, I can quickly redo my
calculations and look at the graph again.

“And 1-2-3 offers a tremendous range of printing options. You can
specify how many rows you want per page. You can tell if you want border
lines separating some numbers and titles of columns. You can tell if you
want a header—can indicate the subject on each page.

“The printout can be in any one of several type styles on dot-matrix
machines. Or you can use a daisy wheel with its own typewriter-style
print.

“And you can do color. A colleague uses plotters.” Controlled by the
IBMs and Lotus 1-2-3, ballpoint pens, with different colors, wriggle up
and down. They can make bars as well as line graphs, and pies, too,
among others.

Not that Lotus was the answer for everyone. _Soft.letter_, Jeffrey
Tarter’s trade publication, noted that all integrated programs
compromised in some way and were the software version of a Swiss army
knife. “Swiss army knives are nifty gadgets; we’ve got several
ourselves,” said _Soft.letter_, “but we don’t use them much. Instead, we
use specialized tools for specialized tasks—screw-drivers for poking
around inside the Apple, a stand-alone cork-screw for uncorking the
Chablis, and a nice big carbon steel blade for carving roast beef. Each
of these tools does its specific job better than the multipurpose tool.”

At least in the version available as of this writing—listing for
$495—Lotus 1-2-3 didn’t have a real word processor. You could write
paragraphs. But it lacked the speed of true word processors and was
awkward. Nor did it offer communications software to use with a modem.
Context MBA, a rival integrated program, did. But then MBA’s spreadsheet
module wasn’t nearly as fierce a numbers cruncher as 1-2-3’s was.

Lotus planned to improve 1-2-3’s text-processing ability—which it did,
ultimately, along with the data base, graphics, and spreadsheet
capabilities of a super-1-2-3 called Symphony. The new program, unlike
1-2-3, also let you talk to other computers.

At Merrill Lynch Leasing, however, Scharf hadn’t any need to reach a
mainframe for his calculations. His four IBMs with 1-2-3 were doing the
work. They had cost $40,000, including extras like printers; except for
service, that was it. What’s more, with four people, Scharf said, he was
tackling the same work load that eight people were handling in a similar
office on the equipment-leasing side of the operation.

Months later I reached Scharf to find out if his career was still in
ascent. “I’m now a vice-president,” he said. His salary had broken the
six-figure barrier, and he was hoping for a still more lucrative job
there or with another firm.

It was a good fit, Scharf and his software. He had the best program for
_him_. “Most people would rather talk about hardware,” he said. “I know
hardware, but I’d rather discuss software.” He had a point. Especially
now, when there are so many clones of various IBM micros, you’ll find
that good software will give you an edge on your competition.

You can also gain an advantage by experimenting with new _types_ of
programs. The next chapter discusses graphics, which, after many years,
is at last becoming practical for owners of inexpensive micros.

Backups:

◼ V, “3-D” Versus Mail-Order Software—and How to Shop, page 319.

◼ VI, “Easy” Data Bases: Another View (Mensa Member Versus InfoStar),
page 323.




 7 ❑ Graphics (or How a Mouse Helped Joe Shelton’s Friends Stop Feeling
                               Like Rats)


When a California executive invited people to his apartment, they often
ended up feeling like rats in a laboratory maze.

“I had people driving around for half an hour and find a phone and say,
‘Come on over and get me,’” says Joe Shelton.

In recent years, however, the “hit rate” for finding Joe’s place has
jumped from 50 percent to over 95, and computer graphics is the reason.

Joe’s neat little map shows a mile-square area with up to five turns
_before_ you even start wending your way through the complex of 150
units. He isn’t an artist. But he uses a Macintosh computer.

With the Mac’s famous “mouse”—the pointer device that Joe rolls along
his desk to move the cursor—he can effortlessly make sketches.

Granted, Joe isn’t detached about Mac’s virtues, not as a $50,000-a-year
software products manager with Apple Computer! And this particular
example is trivial. It’s also, however, irresistible. And the story
indeed shows how graphics can ease the life of a corporate manager.
People also use computer-drawn maps for, say, directing colleagues to
meetings in new places.

The easier-to-use graphics programs—like MacPaint—are to art what word
processing is to writing. They won’t turn you into Picasso. But they’ll
make your sketches and designs look less like your kindergartner’s.

“But I can’t even draw a straight line,” you protest.

Well, Mac-style graphics programs will help you electronically pick a
line out. Or a circle. Or a rectangle. You also, of course, can control
the sizes and locations of the shapes you select. And you can choose
shading. And vary its intensity. And you can also use exotic type styles
and even design your own type.

By letting you zap mistakes, without messy erasures, computer graphics
may eventually halve the time it takes for you to do a complicated
drawing.

Directions: Turn onto Cary Avenue. Follow Cary around left and then
right bends for at least .3 mile from Washington St and turn into
apartment entrance on right. Make immediate left turn and continue until
you cross speed bump. Park in any uncovered space on left. Apartment 4
is upstairs in the middle on the other side of the building.

[Illustration:

  Would you feel like rat in a maze if you had a map like this to guide
  you to Apple executive Joe Shelton’s house? Indeed you would. Lest
  anyone mistake Joe for Customer Support, the map doesn’t contain
  his actual address.
]

Of course there’ll always be resistance to graphics from some hard-core
bureaucrats in and out of government.

“The Macintosh,” gripes one, “takes us back to the time people were
drawing pictures on cave walls.”

He’ll tolerate _some_ graphics but loves to read and write twenty-page
memos.

And if I were an executive, I myself would growl if my people insisted
on Macs just so they could use Old English characters for routine
paperwork. In fact, for that, I’d rather work with a Kaypro or a
mouseless IBM PC.

“For the world of letters and numbers a computer without a mouse would
be better,” says James Fallows, the _Atlantic Monthly_’s Washington
editor, who tried a Mac for several weeks but happily returned to a
machine with WordStar. He and I are baffled. We can’t understand the
Mac’s lack of cursor keys. Why couldn’t Apple have kindly let Mac users
move the cursor conventionally on the screen if they wanted? Omitting
the cursor keys was IBM-style arrogance, no ifs or buts. Even if cursor
keys become available on a numbers pad, it won’t be the same as having
them in a convenient location on the main keyboard.

But graphics? That’s where the Mac and similar machines may pay off for
people with overscheduled art departments or an honest willingness to
experiment:

● A California designer can draw a hot-water system for an outdoor car
  wash in just four hours, thanks to his Mac; once it took him days.

● A Washington state man uses his Macintosh to design optimal orchard
  layouts.

● Another user lays out the Yellow Pages with his Macintosh, while still
  another employs one to plan paintings.[29]

Footnote 29:

  The car wash, orchard, Yellow Pages, and painting examples come from
  _USA Today_, May 3, 1984.

Advertising agencies, especially, may benefit from computer graphics
even if the Mac-priced technology still has some flaws. Take one
example. Just after a Colorado agency bought a Mac, a bank wanted an ad
saying that it gave personal service—that its customers were more than
computer numbers. But how to get the idea on paper?

“I suggested that the bank use a computer for the ad,” said Rebecca
Glesener, assistant art director of Heisley Design and Advertising, a
twenty-five-person agency in Colorado Springs. The bank agreed.

Using a Macintosh, a Heisley artist drew a man and woman with masses of
numbers on their faces.

“If your bank sees you this way,” the ad said, “come see us.”

Western National Banks loved the results. And when I talked to Glesener,
her agency was about to unleash another Mac-drawn ad—the machine’s
“self-portrait”—for an Apple dealer.

“We have several clients in the computer business,” Glesener said, “and
we thought we should be aware of computers.”

Of course you don’t start instantly doing first-class graphics work on
Mac-like machines. Take the man drawing the Western ad. He had “no
computer skills” in his background, and he toyed around with the Mac for
some six hours or so before he did the numbers heads for the bank.

With the art stashed away on computer disks, though, the Heisley agency
could more easily crank out different versions of the same drawing.

It’s like word processing. Once you’ve stored your material on your
computer disk, you needn’t start over from step one.

Mac-like machines may also streamline ad agencies’ mock-up work. Through
the marvels of graphics an art director can more easily figure out the
best location for Brooke Shields’s derriere in a jeans layout.

In fact, the Heisley people said they had used Mac successfully on
drafts of a sales brochure and an ad for the U.S. Amateur Hockey
Association.

Even so, Don Pierce, the artist behind the bank ad, warns: “Inexpensive
machines like the Mac can’t come up with drawings good enough for final
ads without a deliberate computer effect. A line other than a
forty-five-degree line can be pretty ragged because the machine makes
them in steps.” And they lack a good-enough resolution to downplay the
roughness.

Eventually, of course—through high-quality graphics made on laser
printers—cheap machines may turn out slick ads that don’t scream, “A
computer made me!”

Meanwhile, Mac-like computers will do fine for drafts and nonpublished
work. Already, when hooked up right to some Compugraphic typesetting
machinery, Mac’s sister computer Lisa II can turn out seamless charts
for publication.

Who else might use computer graphics? Some examples:

                   A SALES REP (OR BROCHURE DESIGNER)

Computer graphics would help you simplify a complicated brochure in
which twenty statistics proved the superiority of your company’s
industrial dishwasher to Brand X’s.

There’s no question—graphics can liven up otherwise dull data, and
remember: if people don’t read, there’s less chance they’ll _buy_. In
that sense, sales literature isn’t so different from a newspaper. Again,
though, bear in mind that the inexpensive computers may not produce
graphics of professional smoothness.

                A CORPORATE TRAINING OFFICIAL OR TEACHER

You can Xerox your Mac-drawn pictures of a widget maker or Mayan
artifacts—perhaps even include them in test papers. And you or your
audiovisual specialist can even prepare overhead slides by photocopying
the drawings onto clear plastic sheets.

                              A BUREAUCRAT

The same slide technique could be a relief to bureaucrats preparing low-
or mid-level briefing.

                    A PERSONNEL OR DIVISION MANAGER

What a boon to the addicted drafters of personnel charts!

Now, there’s a dark side to this. I have a good friend at the Department
of Housing and Urban Development named Al Ripskis.[30] “They’re
_reorganizing_ again,” he groans from time to time. It’s a waste of good
tax money in Al’s opinion. The faces and desks change; the bungling
remains.

Footnote 30:

  Ripskis is not the hard-core bureaucrat I mentioned earlier in the
  chapter. He in fact puts out an underground newsletter regularly
  exposing his agency.

Shelton, though, says the better companies thrive on fluidity, and in
Silicon Valley he may be right. It depends on your outfit’s style of
management. Don’t play computer games with your people, however, just
because the machines make it easier to play musical chairs.

                              AN ARCHITECT

Microcomputer graphics might be just the ticket for rough sketches. In
fact, on a sophisticated machine, the computer graphics would do for the
final version.

Who knows? An architect someday might carry around a little computer the
size of a sketch pad and do designs to be fed into a larger machine for
the detail work.

                           A PRODUCT DESIGNER

If I were one, I’d leap at the chance to try computer-aided graphics.
Sooner or later, American industry will make widespread use of machines
that automatically turn drawings into real frying pans, soap bars, or
refrigerator cabinets. Well, it won’t be _that_ simple. But computer
graphics and related technologies will increasingly blur the line
between creative types and production people.

Just look at the newspaper industry. Reporters, after all, on most daily
papers are basically setting the type for their stories as they tap them
out.

But back to the factory. The jargon is =computer-aided
design/computer-aided manufacturing= or =CAD/CAM=.

                          A FACILITIES MANAGER

Working on the floor layout for offices that your company will rent?
Computer graphics could be just right in this era of instant partitions.

                          A CONVENTION PLANNER

What better way to juggle around the positions of various booths on your
charts?

                          A CORPORATE PLANNER

(AND MANY OTHER EXECUTIVES)

Building nuclear submarines, you might worry about your keel before your
propeller shaft. An overgeneralization, maybe. But that’s how a defense
contractor hit on the need for =Project Evaluation Review Techniques=
(=PERT=) software.

Charlie Bowie—the home construction executive in the last chapter who
worried about his basements before his floors—might have used a
PERT-style program with graphics to keep up with his priorities.

“With PERT programs,” says Shelton, “you can graphically draw important
relationships: ‘This has to be done before this starts.’ Or, ‘Both of
these have to be done before the other thing starts.’ Or, ‘This can wait
while the others are done.’”

A more complex PERT can help you juggle priorities of two hundred or so
projects. “It’s a capability magnifier,” admits even my friend the
hard-core bureaucrat. “PERT charting by hand takes ten times as long as
a computer. You can wear holes in the paper—erasing mistakes—if you do
it by hand.”

Hearing of PERT, I recalled the Case of The Missing Cafeteria. The
taxpayers were supposed to get a cafeteria—worth maybe $500,000 or
more—at the headquarters of the Environmental Protection Agency in
Washington, D.C. The landlord’s company, however, laid not one brick for
the cafeteria. Some say it was politics—he was once a friend of Spiro
Agnew’s. The landlord denies anything wrong. Whatever happened, the case
boggles the mind. How could an entire cafeteria slip through the cracks;
how could the General Services Administration, the government’s real
estate agent, have shoved aside such an important detail even in a
$60-million-plus lease? You never know. Perhaps with PERT graphics in
the right federal offices in the 1970s, some budget-minded lunchers
today wouldn’t feel forced to brown bag it.

“When you have so many little pieces,” says my friend the Hard-Core
Bureaucrat, working at another agency, “it’s so easy to let one drop off
the table. We could sure use a good word processor-cum-PERT machine.”

Although computers can help you tidy up your work, they themselves can
be messy enough unless you know what you’re doing. There’s no substitute
for a good computer expert in many cases. And training, too. In the
following chapter, you’ll have one answer to “people” problems—the
“Who-How Solution.”

Backup:

◼ VII, Graphics Tips, page 331.




                    8 ❑ People: the Who-How Solution


Stewart Research, Inc.—a fictitious name, along with the others in this
tale, which is true in the main elements—once seemed on the verge of big
money.

Frank Stewart, a slim, intense young chain-smoker, was receiving
hundreds of thousands of dollars from a large company to monitor
congressmen and bureaucrats influencing certain business activities. He
planned to sum up gigantic piles of newspaper stories inside a computer.
Then his early-warning service would ferret out patterns for his
benefactor and other businessmen trying to keep up with the vagaries of
government. Stewart’s plan may come to pass, but last I knew, he was
fighting off unfounded rumors of bankruptcy.

“We’ve wasted upwards of $40,000 on computer consultants and the
consequences of their ‘advice,’” Stewart told me in the modest
white-frame home where he and his wife lived and worked and took in
boarders.

“And that doesn’t include the thousands of dollars in business we lost
because our computer was down at the wrong times.

“I had to lay off five people largely because of the consultants’ lack
of interest in anything but turning a buck off us.”

Stewart’s story illustrates the need for the Who-How Solution in hiring
consultants. Who-How may also help micro users train employees and get
the most out of their data-processing departments.

Who-How is nothing more than the five Ws and the H of newspaperdom. Like
a reporter, you simply ask, “Who?” “What?” “Why?” “When?” “Where?” and
“How?” and especially “How much?” Ask those questions often. Ask them
when:

1. Deciding whether to hire a computer consultant. How much in your time
  and your people’s will it cost _not_ to have one?

2. Hiring and using a consultant. It isn’t just a matter of asking,
  “Who?” Ask, too, “Who cares?” Who cares about a consultant’s two
  decades with IBM? What counts is how much he can do for _you_. Is the
  IBM experience relevant?

3. Training employees. Don’t clutter your people’s minds with
  computerese not related to their jobs. Use the five Ws and the H to
  strip the training to the basics—which, by the way, almost surely
  won’t include BASIC.

4. Working with your company’s data-processing people. Know which
  questions to ask to find out the computer crew’s true attitudes about
  micros. And come up with the right answers of your own if the
  mainframers feel threatened by your interest in do-it-yourself
  computing. Good data-processing people, however, won’t be
  frightened—quite the reverse.

The scary aspect of Frank Stewart’s consultant fiascoes is that he and
his people were hardly lost amid high tech.

“Some of us were inventors,” Stewart said, and his vice-president, Bob
Hillard, even had a smattering of the FORTRAN programming language.
Stewart’s firm didn’t rush blindly into computerization. Originally, it
had been hand culling articles from 140 periodicals and 16 major daily
newspapers. “We sat down,” Hillard recalled, “and worked out a
mathematical formula to give weight to a particular article by mention
of certain words, certain individuals, certain companies.” Existing data
bases like The Source and Dialog just wouldn’t do. You couldn’t easily
use them to search out the political patterns affecting the fortunes of
Stewart’s clients.

Stewart spent $31,000 on a computer and soon was suffering defective
circuits and junky software. He paid a secretary to cram almost a
million words of newspaper articles into the machine’s hard-disk memory,
but it still couldn’t fetch facts as easily as he’d hoped. Then the
data-base program, the one he was using to store facts and juggle them
around, crashed—apparently overwhelmed by the volume of data. Micro data
bases at the time, the early 1980s, couldn’t easily handle big hunks of
text. Stewart couldn’t retrieve whole articles.

It was time for a consultant. A good consultant (the “Who”)
theoretically could write or install a new program (the “What”) in an
effective way (the “How”), justify his actions (the “Why”), and ideally
do everything at a reasonable price (the “How much”) before the data
base grew too unwieldy (the “When”). Stewart wanted him working on his
own premises (the “Where”) as much as possible so he could supervise
him.

“Our first consultant lasted all of four days,” Stewart said. “He was
abrasive, nasty, and didn’t know what he was doing. One of our staffers
was so frustrated trying to work with him that she wept. We’d hired him
because he was a friend of a friend and said, ‘I’m a computer
programmer. I can fix it for you.’ We never quite could pin him down
about his background. We were so burned that for five or six months we
put off hiring another consultant.

“And when we did get one,” said Stewart, “we wanted a solid, established
firm.”

So he went to a government contractor headquartered in an imposing
building, the size of a small public library. The consultants even owned
the same-model computer that Stewart’s company did.

Unfortunately, however, they were using different software for much
different purposes. Stewart’s needs were new to them.

“Look at MDBS,” Hillard recalls telling the contractor. “It really looks
like a good package.”

But he says the consultants told him they hadn’t even heard of it.

That in itself might have been a tipoff that Stewart had hired the wrong
people for the job. MDBS stood for Micro Data Base Systems. Ads and
reviews about it had appeared in _Byte_ and other prominent publications
of the micro world.

With the clock ticking away at up to $35 an hour, the consultants
searched for data-base software meeting Stewart’s detailed
specifications. “Three weeks later,” Hillard said, “they handed me a
bill for $2,500 and said, ‘The package you need to use is MDBS.’ I said,
‘Where is the work, where are the hours in relationship to the $2,500
bill?’ It went around in circles.” Stewart and Hillard must have
remembered the old saying that a consultant borrows your watch to tell
you the time of day and then charges you for it.

According to Stewart, in fact, the consultants based most of the report
on material his company had given them.

By think-tank standards in his area, Stewart may have gotten a bargain.
Dealing with consultants new to micro data bases, however, he was in
effect paying their tuition.

“The federal government must like them immensely,” Stewart said,
“because they do good, documented work in the fields they have expertise
in. But a small businessman had no business using them. After two and
one-half months we had nothing but recommendations on the data base—and
a stack of bills”—$2,500 high.

But there was hope. Stewart’s corporate benefactors were sticking with
him. If he could get his data base running, he could easily recoup his
losses, offering clients a treasure trove of information about
government policy-making affecting them. Although Stewart thought of
himself as a truth seeker, his vice-president was bluntly a money man.
“We would have sold our service for a million a year,” Hillard said,
“and we would have netted $600,000. We were using four people to feed
the articles into the computer, but that would have changed, because
optical readers eventually could scan magazine articles and newsprint.”

So now Hillard shopped around for a new savior to unravel the
complexities of the MDBS software that he had settled on.

He found three possibilities. One consultant, a micro expert, was snowed
under with work, and another man had only mainframe experience. So
Hillard and Stewart chose Fred Brown, a retired military officer who had
worked not only on big computers but also little Radio Shacks and
TeleVideos. In fact, Brown came recommended by the manager of a local
computer store. The manager leveled with Stewart. He said he and Brown
were together in a partnership developing software for lawyers’ offices.
Hillard asked only two people about Brown. And both references came from
the computer-store manager with the business relationship with the
consultant. Inquiring about Brown, however, Hillard asked some good
questions. Did Brown document the software properly? Did he, in other
words, tell how to use or change it? Did his software work? Did he meet
deadlines? Did he live up to all the specifications in his contracts? “I
got affirmative answers to most of these questions,” Hillard said. One
reference said a software project of Brown’s hadn’t come in on time but
brushed off the problem as a hardware one.

Unfortunately, Hillard didn’t ask _all_ the right questions. Brown had
never before worked with the brand of computer that Stewart Research was
using; nor was he fully comfortable at the time with the exact kind of
software used at the company.

Brown, however, struck Hillard as “a very nice professional.” He wore
three-piece suits, lived in a $140,000 home with several computers in
the basement, and held a masters degree from an Ivy League school.

“No problem,” Brown told Hillard. “Listen, I charge——” He gave an hourly
figure to the nearest cent; $30.02, we’ll say.

“What?” asked Hillard. “Why 0._02_ an hour?”

“I like to be fair about my salary, and that gives me $30,000 a year.”

“Okay,” said Hillard, “that’s cute.”

Brown wasn’t about to apply for welfare. On top of the $30,000 for
consulting part of the time, he was enjoying income from sales of
computer hardware. In short, he came across as successful and honest.
And he may have been. Just the same, client and consultant were clearly
mismatched.

Their downfall was a familiar kind—software problems.

You could customize the MDBS program in FORTRAN or BASIC. The earlier
consultants, the ones with the large government contractor, had
suggested FORTRAN. Brown himself was more familiar with that than with
BASIC. And Stewart was convinced that FORTRAN would make the best use of
software already purchased. So Brown went ahead with it despite three
strikes against him:

1. The computer company’s FORTRAN, according to Stewart, was as badly
  botched as its hardware.

2. FORTRAN wasn’t as good as BASIC for micro data bases that stashed
  away English prose rather than mainly numbers. Another consultant was
  amazed when I told him that Brown had used FORTRAN in a data base
  storing newspaper stories. “You can use it if you like,” he said, “but
  you’ll lose something. It’s like trying to translate Hemingway into
  pidgin English.”

3. Brown was still basically a mainframer. And micro FORTRAN was
  different from the kind used at large military installations. Writing
  software for micros is like writing short stories instead of novels.
  You’ve got to be more elegant and get to the point faster. A micro’s
  memory simply lacks the capacity of a mainframe and brooks less
  sloppiness than would a larger machine. Many great novelists could
  never write decent short stories, and many first-class mainframers
  just couldn’t code cleverly or deviously enough for micros—couldn’t
  electronically trick them into thinking they were larger machines.

“What happened,” said Hillard, “is that we were paying for Brown’s
training on how to use FORTRAN on a micro. He spent forty or fifty hours
developing specifications for the data base and writing the code. This
went on and on. Brown kept running into all these problems, and he could
have cleared up some with just a quick call to the manufacturer.”
Meanwhile, the money clock was ticking.

Several months later, thousands of dollars richer from those
$30.02-hours, Brown threw up his hands. “This isn’t going to work in
FORTRAN at all,” he said. “Maybe we should do this in BASIC.”

“So,” Hillard told me, “all the work he’d done up to that point was out
the window.”

“And on top of that,” Stewart said, “we were anticipating our new
software package and didn’t care to feed the information twice into the
computer. So we built up a backlog of well over 10,000 articles waiting
for the software that never came.”

Brown’s clock ticked away for several thousand dollars more in time,
bringing the total billing to $8,630.81. Then it stopped. Stewart
Research had simply run out of money.

Stewart’s corporate sponsor could send no more. “Their pockets,” he
said, “just weren’t deep enough to subsidize both our own computer
literacy and that of our consultants.” When I talked to Stewart in
mid-1983, his computer was doing word processing and other minor chores.
“But,” he said, “it does hardly enough cross-referencing to be a major
data bank.” His research firm faced some $30,000 in debts, including
much of the $2,500 bill from the consultants with the library-sized
building; and he and his wife were the only two employees left in
Stewart R & D. He still hoped to get the data base going, however.
“We’re going to become computer consultants in self-defense,” said
Stewart. “I’ve done nothing but work on this computer for a year.” It
would be nice to be able to do the same, but most of us lack the time or
talent; the challenge is to find the right computer consultant so you
won’t end up feeling you must do the work on your own.

Not so coincidentally, Hillard himself actually did go on to become a
computer consultant part time. He wasn’t the smartest or the best
credentialed, but he had what many of the more established consultants
lacked—empathy and humility. Don’t shrug off those traits. The real
question, as one consultant pointed out to me, isn’t just whether
someone is competent; it’s whether he’s competent enough at the job he’s
doing for you. Never forget that when pondering the “Who?” and “What?”

Stewart and Hillard obviously aren’t the only people who didn’t ask the
right questions in time. A sail maker wasted $18,000 on a computer
system recommended by a consultant. The machine didn’t work right with
the hard-disk memory, and it lacked proper shielding against the
60-cycle hum given off by power lines. By the time Hillard was on the
scene, the consultant had left town. He says the computer was such a
disaster that “I suggested to the client that he get a length of rope
and use it as an anchor because it was unfixable.” In another case, a
truck-rental firm spent $30,000 for $15,000 of computer equipment. And
then the consultant didn’t even supply instructions to operate and
modify the software. “As far as I know,” said a more ethical expert,
“he’s still a consultant. Computers are mystical, and most people don’t
know when they’ve got a good system or when they’ve got a bad one.”

“The real problem,” Hillard correctly said of consultants, “is that the
microcomputer field has only been around since the mid-seventies and
things are moving so rapidly. It’s hard for anyone to keep up,
consultant or layman.”

There is, too, a nasty economic fact. A micro consultant can’t reach
full prosperity, in many instances, without having ties with stores or
manufacturers. Indeed, most micro consulting nowadays is done in effect
by sales reps recommending systems to their customers. How objective can
they be? Even conscientious consultants—independent or those with
ties—may still favor the computers and software with which they’re most
familiar. The man and the machine in effect become one package.

Another anticonsultant argument is that small computers may soon be
inexpensive and simple enough to make consultants much less necessary.
You don’t use a consultant to buy a $1,000 typewriter. And by the time
you read this, or a few years afterward, we’ll have good, complete word
processors selling for no more—with printers.

Yet another anticonsultant argument is that you may have computer-wise
friends in your own business or profession, smart people you trust. They
may actually anticipate some of your needs better than would a
consultant. Moreover, it’s been said that if you know enough to pick the
right consultant, then you really don’t need one.

I’m not sure. As one consultant pointed out, it’s like choosing doctors.
You can be good at choosing one without necessarily knowing brain
surgery.

I was a borderline case. I still might have bought a Kaypro without
Michael Canyes’s approval, since I knew another writer familiar with the
glories of the Osborne who appreciated the greater glories of the
Kaypro. On the other hand, with my consultant friend’s guidance, I could
shop for the lowest price rather than the most technical help from the
dealer. And Michael steered me away from the dot-matrix printer, which,
with their inferior print quality at the time, would have been bad news
for me. I was lucky. I had befriended Michael through an Osborne user
group at a time when he himself was looking for advice on writing, so he
didn’t even charge me. You may be similarly lucky if you have a skill a
computer consultant needs. But don’t count on it. So often, free
consultants are worth their charges.

Had I not been as fortunate and had I experienced difficulties, I would
have been willing to pay for advice. And mind you, my whole system costs
less than $3,000. “You don’t want to spend $10,000 on a computer
system,” Michael warns, “and find it doesn’t do what you want. You’d be
better off spending several hundred dollars or more to learn exactly
what you want and get some help installing it. Think of the business
you’ll lose if you install your computer and it doesn’t work as planned.
It depends. You could also spend a lot of time shopping and talking to
people and not pay a consultant. It depends what your time is worth. The
average guy has one or two uses for his computer in mind, and he doesn’t
want to piddle around with the complexities of the thing. He just wants
to cut right down to the core of it and get this job moving. If a
consultant spends two or three hours with someone discussing a micro, it
may cost perhaps $75 or $100. But the client might master in a day what
might normally take a week or even several.” The wrong consultant,
however, may actually cost you more—in money and time.

When shopping around for the right one, you’ll first want to consider a
_what_—what work you need him for. Forget about computers. Does the task
make sense commercially? Are you realistic about its costs? A former New
England consultant tells of a baseball enthusiast who wanted to recreate
some board games on the computer screen. It might have worked. But the
man didn’t just want a computerized arcade game here—rather, a
replication of ball parks, with their actual proportions. “He had a
statistical background,” recalled the ex-consultant, “and had done some
statistical consulting for a professional sports organization.” But
there was a problem. The man believed that the consultant could perform
this miracle on an Apple for less than $5,000. Actually, the program
would have cost $50,000 to write—probably more than the man could
quickly recoup through sales of the program. The consultant turned down
this mission impossible. But the client let his enthusiasm for the
project blot out his business sense and in fact squandered $55,000 on
another consultant, who, incidentally, botched the job.

Now move on to the details of the work you want done. Do as with
software; get as clear an idea as you can of the paperwork you’re
computerizing. You may want your electronic files organized entirely
differently from your paper ones. Whatever the case, plan ahead. You
don’t want to—as somebody once put it—automate your confusion. And
there’s another reason for knowing your precise needs before calling a
consultant. Trying to jack up the bill, some experts can be brilliant at
inventing new problems to fit their prepackaged solutions. Or they may
downplay your real needs because the answers are not in their tool kits.

You’ll also want to decide if the consultant is just to give advice or
more. Don’t pay simply for advice, then expect him to haggle with
equipment suppliers and install the software.

And what about other services besides advice? Take the task of keying
paper records into your computer system; some consulting firms will line
up temporaries for the job. That way your normal people must worry only
about their regular work and learning the new computerized routine. Of
course, this =data-entry= work may itself be part of the training, and
at least if your people enter the material, they’ll more easily find it
later on.

As you define the _what_, you also get into a _when_—your deadline for
computerization and how long the consultant or the firm is to remain on
the job. There is a happy medium. You want him around long enough, full
time or part time, to get the system up and running. But don’t count on
making him in effect an employee. Hire permanent people if that’s going
to happen. Joseph Auer, a $1,500-a-day computer-negotiations expert with
blue-chip clients like New York Life, tells what can happen when
consultants stay too long. A bank used a consulting firm for years. The
outsiders became the main people familiar with the electronic links
between the automatic teller machines and the big computer. Then the
bank woke up. It realized that the outsiders could cripple its
operation. The consultants didn’t blackmail the bank, but it was worried
enough not to risk incurring their displeasure. Rather than farming out
the work to a facilities management firm as planned, it extended the
existing consultants’ contract, with the understanding that the
outsiders would make the bank’s own people self-sufficient.

Next go on to the _who_ question. A generalist who’s a good, quick
learner might be a better deal for you than an overpriced guru who
limits himself to one area. It’s like medicine. I’d much rather be cut
up by a smart general surgeon with a steady hand than by a mediocre
cancer specialist. Of course, for a complex job, you want the equivalent
of a top cancer surgeon. At Stewart, anyway, the right specialist might
have “programmed” the company to succeed.

Intertwined with the _who_ are two _how muches_—the size of your company
and the task for which you need the consultant. Are you a small
businessman or a Fortune 500 executive? The consulting needs of the two
categories may overlap. The general rule, however, is that a large
company will feel more comfortable with a large consulting firm (GM,
say, with Arthur D. Little) and a small company will be better off with
a small one. A small businessman may enjoy more personal attention from
a small consultant. He knows the people he’s dealing with, and it’s
harder for the firm to pass the work on to a green employee—while
charging the full price. The smallness of the firm, of course, makes it
that much more important to check out references. Of course, sometimes
the small guy may fit the large company’s bill; Michael Canyes, for
instance, has tutored WordStar classes for the Federal Trade
Commission—a good buy for the taxpayers, considering his skill and low
overhead. “The smaller consulting firms,” he wisely says, “are likely to
save a large business money when the consultants are working within
their limitations.”

Canyes, however, at the time I wrote this chapter, wasn’t the consultant
to install a $5 million micro network. He might be one day, but back
then he just didn’t have the resources to do the job justice. A Big
Eight accounting firm would have been better than Michael; in fact, an
executive with a large company mightn’t need an outside consultant of
any kind—large or small. His or her employer may boast a large
microcomputer center and a helpful data-processing department. But you
never know. Sometimes, Data Processing is either ignorant of micros or
discourages their use. Ask some test questions. Has anyone in Data
Processing ever installed a micro for business purposes? Do many in the
department have micros at home? Are they reading the micro magazines and
newspapers—_InfoWorld_, say, rather than just magazines about the big
machines? If Data Processing isn’t comfortable with micros, you’d do
well turning to the outside.

One of the qualifications for the outsider, of course, might be his
ability to work harmoniously with Data Processing if you’re hoping to
hook into the mainframe. Then again, your micro might be a stand-alone,
not exchanging information with other computers, so that you needn’t
worry what Data Processing thinks. Even if you’re using a
Data-Processing staffer or other internal person, you still may want to
find out his track record. Don’t be a corporate chauvinist. Every
company has its share of gobblers.

Turning to an outside consultant? Then, through computer stores, you
might try to track down a local users group for a brand of hardware or
software. Go to a meeting. Find out whom the members regard as an ace
consultant. In fact, try to go to several user groups—remember the
preference that Apple owners, say, may have in favor of an Apple
solution or that Kaypro owners may have in favor of a Kaypro one. Mere
word of mouth, though, is still no substitute for a thorough interview
with the consultant and reference checks. Certainly, too, you can’t use
a consultant just because he or she shows up in the directory of a
consultants group. Charles E. Harris, a lawyer who, with Joseph Auer,
wrote _Computer Contract Negotiations_, says, “I know of no
organizational membership that proves anything other than membership and
the fact that the man’s paid his dues.”

“The person to watch out for in particular is the guy who’s doing this
part time and he works on a mainframe or something like that,” warns
Mark Robinson, a California consultant. He’s been in the micro business
for years and handles dealer relations for Lexisoft, a software
company—a micro one, mind you. “Anybody who hasn’t made this his
business full time for a significant period of time,” he said of micro
consulting, “is a great risk.” Consultants can relax. Robinson said
eighteen months could be “significant.” I myself wouldn’t shrug off the
part timers from Data-Processing departments if they have a long list of
pleased micro clients. But as a generality Robinson’s observations seem
valid. Not only is micro software written differently from the mainframe
kind; there’s also a different mentality. Cloistered away in the
computer rooms, some mainframers may strive for technical perfection at
the expense of economy. “They may be right about things,” Robinson says,
“but that’s not the point. The point may be more like what Mr. Osborne
prates about all the time—mere adequacy. I’m thinking of posting an
aphorism on the wall from _The Soul of a New Machine_: not everything
worth doing is worth doing well.”

The same wisdom might apply to consultants. You don’t need a
$1,500-a-day man to help you choose a good micro for word processing—not
unless you’re about to buy a few hundred. Opinions vary about pay. Some
observers of consultants say you get what you pay for. “There’s very
little relationship between pay and value except for one thing,”
Robinson says. “People who don’t charge enough eventually go out of
business, or that business. If they don’t charge enough, they’re not
likely to have been around long enough to have gotten experience for
you.”

Then again, as Robinson points out, experience in the microcomputer
business rapidly decays in value, weakening the relationship between pay
and competence. Back in the late 1970s Bernard McGowan, a Massachusetts
ophthalmologist, bought an Apple and hired an expert at all of $5 an
hour. His consultant was a scruffy young man in an old jacket. And this
guru had himself owned an Apple only a day. But it didn’t matter. His
name was Mitch Kapor, and he was good, apparently, for he went on to
found Lotus Development Corporation, the company that developed the
best-selling 1-2-3 integrated program. Today McGowan is still using
$5-an-hour men at times. He told me, in fact, that one consultant, a
teenager digesting software manuals for him, doubled as a baby-sitter.
No, this isn’t an argument for merciless exploitation of child labor à
la nineteenth-century England. For a small businessman with a simple
task, however, and no pressing deadlines, a teenager might do well. Why
must every sixteen-year-old be flipping hamburgers around after school
at McDonald’s?

But teenage computer geniuses are special cases. Don’t count on a
$5-an-hour consultant to write up a complex accounting program that you
need done within three months to avoid bankruptcy.

Moreover, if you’re a business of any size, you might end up spending
hundreds or even thousands of dollars just to audition consultants.
That’s right; you may pay them. Canyes will talk to people by phone if
he thinks they’re good prospects, but the moment he gets in the car, the
meter starts running. That’s basically in line with what Adam Green, a
software training expert, told me. Green has conducted seminars for
big-name clients like Price Waterhouse and Xerox, and earlier he worked
as a programmer and salesman, so he’s been around. “A good consultant in
my view would come out [in many cases] and spend a day or two looking at
the operation and then give back a written proposal saying how they
could help the client,” Green said. “And then they should charge the
client about $250 for that.”

“If someone comes out and spends a day or two with you and writes
something up for free, obviously they don’t have anything better to do.
They’re not working. They’re amateurs. They don’t consider their time
worth anything.” Paying a consultant to write a proposal, you’ll learn
(1) if he can communicate in comprehensible English, (2) if he can think
logically, and (3) if he understands your business and its needs.

But maybe that’s a step or so ahead of where you now are in the game.
Having found a promising candidate, make certain you feel comfortable
with him or her. Trust your instincts. Beware of snake-oil artists who,
through greed or incompetence, may actually increase your time and
expense. People like Bob Hillard and Michael Canyes come across as
teacherlike in their eagerness to pass on their wisdom to the
appreciative. But not all consultants, in and out of computers, seem
that way. A few might not even give you a written report of their
findings. Many intimidate you through jargon, even through dress. Quite
correctly, some young business school hotshots have been depicted as
punks in pin-striped suits. “You have to know what your client wears and
dress one level above him,” said an ex-Bain and Company man. “If he
wears a sport coat, you wear a suit. If you’re meeting him in a
midwestern cornfield and he’s wearing a T-shirt, you wear a button-down.
You might actually drive to his office in beige pants, a jacket, and a
tie. But you can look in through the window when you get out of your car
and then take off as much as you have to.”[31] The consultant wasn’t in
the computer trade, but he might as well have been. One industry
magazine began a “So You Want to be a Consultant” article with a warning
against polyester.

Footnote 31:

  The ex-Bain man’s quote is from _Harper’s_, November 1982.

“Well,” I asked Mark Robinson, “what about dress? Can you trust a
consultant in a three-piece suit more than one who looks like a refugee
from a university computer center?”

“It’s really irrelevant,” he said, “I’d look more at things like Can the
guy focus on the relevant features of my business? Does he seem to
understand what my business is about? This is one of the things that
probably isn’t even related to the number of years in micros or
computers or what not.” Robinson suggests asking yourself, “Does he
quickly grasp the nature of my relationships with my suppliers, my
clients, my promotion methods? Is he focusing on the technical solutions
rather than my needs first? Does he even consider a question like
whether I need a computer at all? Does he try to look at the
highest-priority needs that I have in terms of the effect on my bottom
line? Does he really have a grasp on why I might have a computer—to move
into new things and serve my customers better, to replace existing
functions, and so on? Does he know general things like that? If he
doesn’t have that sort of perspective, if he isn’t even able to back off
as to whether I should have a computer, I may be getting a slightly
different type of salesman, someone who is committed to a computer
solution, for instance, and isn’t really looking at it from my
viewpoint. He is not totally professional.” You might still use such a
person, but you’d better consider his limitations and biases.

I asked about “pure” consultants versus those selling software or
hardware.

“Most consultants,” said Robinson, “have found that small businessmen’s
budgets for pure consulting and their appreciation of it aren’t high
enough so they make enough money. So they’ve got to sell software and
hardware. And also purity means that a consultant is spread too thin.
He’s not able to specialize and know enough about a particular package
to be competent in it. So either he has a superficial view of these
packages, or else he’s a partisan.” While working as a full-time
consultant, Robinson hoped to maintain his purity. “I found myself
dealing with a lot of invoices of fairly small amounts,” he said, “and
most of my support came from contract programming.”

What with the line so thin between salesman and consultant, you should
politely but persistently ask about business connections that could sway
their judgment.

Obviously, too, you’ll want a consultant’s résumé if he or she has one.
He should. One way or another you’re after the normal personnel-office
answers—his schooling (anything that could help him understand your
business?), his previous jobs (one computer consultant ran a nightclub
once—perhaps not such a bad background for an expert dealing with small
businesses), maybe even if he has an arrest record (a perfectly suitable
question if he’s setting up an accounting system or doing security
consulting). Be polite but aggressive. By not shying away from the
basics, you’ll be reminding him who’s in charge—the client. Don’t forget
the _why_. Why is he in “consulting”? It isn’t a euphemism for
unemployment, presumably. Also, why is he working with micros rather
than mainframes? Attitude matters as much as brains and skill. Ideally,
your consultant will be comfortable with the flora and fauna outside the
antiseptic computer rooms. While he’s auditioning, see if that’s true of
him.

How do you tell? Introduce him to your people, not just your executives.
Encourage them to ask questions. If the consultant condescends toward a
secretary or clerk now, he may very well do so toward you later. And if
he rubs your people the wrong way, they may resent him in the future and
take it out on the computerization project.

Well, there’s a caveat here. Maybe the specs for the job are so
clear-cut that your consultant can work in a little corner away from the
rest of the world. With _personal_ computing, that’s not going to happen
as much as with mainframes.

In winding up the interview, ask about the future. Will the consultant
be around in the future to do work or answer questions? He won’t be? You
still might use him. But police him very carefully to make certain he’s
following standardized procedures that another consultant can pick up
on. You don’t want your business to go down the tubes when your software
man goes off to find his karma atop Mt. Fuji.

Satisfied? Then move on to references—which, if you’re a small,
budget-minded business, you might want checked before a full-fledged
audition.

Remember Stewart’s ordeal. Ask for the names of people whom the
consultant served in tasks similar to the proposed one. Request ten
names. The consultant needn’t have done—in each case—jobs like the
proposed one. Moreover, you often don’t have to call more than five or
six references. But with ten names, at least you’ll know you’re far from
the first client. Don’t, incidentally, phone just the references at the
top of the list; outfox the consultant in your most constructive way.

You’ll want the references to tell you the usual—what the consultant
achieved within the time agreed. Would they use him or her again? What
kind of hardware, what software, did the consultant recommend? The same
kind for clients with different needs? Be on guard if he seems to have a
one-shoe-fits-all philosophy. Also, ask about the references themselves.
See if they have any connections with the consultant, social or
business.

How many consultants should you try out before signing the contract?
That’s up to your needs and your budget. There’s no law saying you have
to go through all the screening steps here in every case. Why pay $250
to a consultant to audition when that very likely will be the cost of
the whole job (assuming you’re lucky enough to find one willing to take
on a project with such a low budget)?

For all tasks, though, even small ones, you’d do well to bother with at
least one formality—a contract with your micro consultant.

                            ■      ■      ■

  A Sample Consultant’s Contract
  (Featuring Some Plain English From a
  Washington Lawyer)

  No, you’re not going to pay a lawyer $50 to draw up a contract for a
  consultant doing a $60 modification of WordStar.

  But you can help protect yourself with your own version of the sample
  contract below. It’s nothing more than a letter in simple English.
  William Wewer, however, the Washington lawyer who drafted it, says it
  probably would be just as binding legally as a document filled with
  “whereases.”

  _Dear_ ——:

  _This will confirm our agreement that you will perform the following_
  [software?] _services_:

  [Precisely list the services in numbered paragraphs.]

  _You have represented to me that you can complete this project by_
  [date]. _You will charge me $—— per hour for your consulting time. Do
  not exceed $—— without my written consent._

  _You agree that you are performing these services as an independent
  consultant and are not my employee._

  _If you are willing to work under the terms of this letter agreement,
  please sign the enclosed copy and return it by_ [date].

  Under your signature, use this language:

  _I agree to and accept the terms of this agreement to_ [quick
  description of service provided].

  ———- [consultant’s name], ———- [date of signing]

Remember, this sample is just a starter. See Backup VIII, “Consultant
Contracts: Some Who-How Questions”, for a list of some of the points a
contract might address. One of the more important ones is ownership and
control of software. If you want to own the newly developed programs and
keep them away from your competitors, here’s what Wewer might insert
after the paragraph saying the consultant isn’t your employee:

  I am paying you to do this work for me alone and require that you not
  retain any copies of it or give any copies to anyone else or tell
  anyone else how to recreate what you have done for me. We agree that
  the software you create for me will be my trade secret.

  “‘Trade secret’ is a key phrase to get in there,” Wewer says. “Then
  it’s within common law.”

  Again, your informal contract won’t give you iron-clad protection—that
  could depend on the mood of a judge—but it’s better than nothing.
  “It’s the handshake deals,” Wewer says, “that always fall apart.”

                             ■      ■      ■

  “The real problem,” Adam Green says, “is that no one ever has to sign
  a contract. People get concerned. They say, ‘Boy, lawyers cost a lot,’
  and I know the feeling.” Then Green brings up an exception to that
  opinion, lawyers. “I know a lot of consultants who will never work for
  lawyers because as far as lawyers are concerned the job is never
  complete. They understand what it means to be complete.” Their
  contracts reflect this; yours should, too. Have the consultant do the
  first draft of the contract, perhaps; but don’t shy away from
  extensive changes if need be. “Hell,” tell him, “that’s what your word
  processor’s for.” Back out of the deal if he isn’t reasonable now. He
  might not be later on.

  When hammering out a consulting contract, you should fret over three
  variables emphasized by Joe Auer:

  1. “How long is it going to take?
  2. “How much money does it cost?
  3. “What’s the quality of the work?

  “If you tie down the money and the quality and not the time,” he
  warns, “you give them a license to loaf. If you tie down the quality
  and time and not the money, you give them a license to steal. If you
  tie down the money and time but not the quality, you give them a
  license to cheat.”

                               Training:
                              How to Enjoy
                          the Mahony Advantage

  Who-How counts just as much in training your people as in the
  selection of consultants:

1. Who’s teaching? Can he or she communicate well with the students, and
  how adaptable to computers are the people getting the instruction?

2. What task is being taught? A very teachable one?

3. Why is the material taught? To make your people computer literate in
  a broad way? Just to help them do their present jobs better?

4. When do the students learn? On their time or yours? Will you reward
  them in any way for their extra effort?

5. Where is the learning happening? Ideally, your students can take the
  machines home if they want—one advantage of transportables like the
  IBM portable and its work-alikes.

6. How do the students learn? Through instruction manuals, mainly, or
  through early experience at the keyboard? Do they suffer through
  irrelevant exercises, or do they start right away on assignments
  similar to their jobs? In fact, do they start immediately on their
  normal work, as some training experts recommend? Do the students work
  with teaching disks? And are the disks interactive, as Adam Green, the
  training expert, correctly recommends? Do the disks, in other words,
  require you to type in a thoughtful response?

“How much?” also figures here. Consider the cost of a good training
program versus your losses from misused or underused people. In the
future you may want an office filled with people conversant with
WordStar or dBASE, but don’t shrug off valued employees who can’t even
play an Atari game. Tutor them if need be. Bend. You needn’t be
sentimental, just practical. Don’t waste the Mahony Advantage, as I’ll
call it; don’t throw away a mixture of background and experience that
silicon won’t ever fully replicate.

Unfortunately, Jim Mahony’s employer didn’t take full advantage of the
Mahony Advantage.

Mahony, a white-haired man with a ruddy face like Tip O’Neill’s, was a
popular local columnist at my old paper, the _Journal_, in Lorain, Ohio.
He barely survived computerization. In fact, he barely survived. He
suffered a heart attack that may or may not have been brought on by the
added stress. His ordeal is a preview of what some companies may expect
as small computers—or terminals like Mahony’s—become requirements
instead of options in many businesses. It is a fitting argument for
tutoring or other adjustments for key employees. Within the newspaper
industry—more computerized than most fields by now—you’ll find few Jim
Mahonys today. But many other businesses are now wasting the Mahony
Advantage.

At the _Journal_, readership surveys showed Mahony’s column was one of
the main draws. He was a native of his steel town, a perfect
counterpoint in a newsroom dominated by young outsiders. He’d worked for
the _Journal_—whether as a newsboy or an editor—since he was ten. The
only break was time off for World War II service. Indisputably, on local
matters, he was a human data bank. “There’s nobody who knows this town
and the people and the relationships, the marriages, like Jim,” said
Bill Scrivo, an ex-managing editor. “You just can’t store this kind of
material. He knew who was a phony and who was likely to mislead you.”
Jim doubled as the news editor (on the _Journal_ the news editor’s job
was more of a copy-desk function than an executive one in the fullest
sense), and over the years he may have saved the _Journal_ thousands of
dollars in lawyer’s bills from the libel suits that never were filed. He
knew, say, that the Phil Smith caught in a gambling raid was not the
prominent black minister with the same name. If nothing else, his vast
knowledge of Lorain, Ohio, and its people made the paper more credible.
And Mahony loved the traditional newsroom as much as he did his city—the
big, black wire-service tickers, the bulky Remingtons and Underwoods.

“A ticker gives a newsroom that certain flavor,” he told me. “You hear a
bell, and that means an important story is about to be released and it
puts you on the alert, makes you news conscious.” And typewriters? “I
figured they were the backbone of newspapering all the way through.”
Mahony obliterated, however, at least two of them. He would strike the
keys so hard that the letters would fly off the arms. Appreciating the
man more than the machines, his colleagues cheerfully wheeled in
replacements.

Dapper Dan, however—Mahony’s name for a young computer expert with some
flashy sports coats and a fondness for jargon—wasn’t so accommodating.

“His word was God’s,” Mahony said, “and he pressured us. He felt that
the pupil should be stepped into a more advanced bracket. And evidently
he misjudged the person who was possibly of an older era and not
familiar with the computer field. He never appeared news interested. It
appeared his whole life was wrapped around computers.”

“The training consisted of sitting down two hours every other day in
this little room,” recalled Dick DiLuciano, the former editor handling
state news, “and then we’d be told that when you hit this button, this
activates this diode or that diode or whatever the term. And finally I
decided they were wasting their time telling what happens when we hit a
button. We didn’t have to know that. All we had to know was what buttons
to hit to get our story into the computer and get it typeset.” Mahony
himself complains that the paper didn’t start him out with real news
stories on the terminal. Instead, he did boring exercises similar to
those in typing manuals. “It was much like a batter in major league
baseball taking batting practice,” he said. “You just stayed there while
they threw curve-balls at you more or less.”

“The only thing Jim really put into the computer on the job itself was
headlines and his column,” DiLuciano said, “but he really was getting
frustrated and distraught. And I bumped into him in the washroom one
day, and he was about to cry. He said, ‘Dick, I know I’m going to lose
my job, because I can’t learn how to work that damn computer.’” He
almost did lose it. Jim was out sick several months, and he had to leave
his news editor’s post. The _Journal_ let him continue the “Mahony’s
Memos” column but assigned him to the “morgue,” the library, to file
away old clips. The library was in a room apart from the city desk. No
longer was Mahony so handy to editors wanting to know, say, if a home on
East Twenty-eighth Street is on the “East Side” of Lorain. (It
isn’t—contrary to what a story said.) Were it not for the mishandling of
Jim Mahony’s training, he might still be vigilantly editing.

What could have been done to keep Jim Mahony there? Jack LaVriha, a
cigar-chomping newspaperman of Mahony’s generation, had an idea. Why
couldn’t the paper have hired a tutor for Mahony—maybe a journalism
graduate familiar with computers who was waiting for a reporter’s job to
open up? The young grad could have entered Mahony’s stories on the
terminal, learning city-room ways while Jim gradually mastered computer
ones. Computers and older people can get along fine. Even without a
tutor LaVriha himself was one of Dapper Dan’s star pupils, and today,
though retired, he still drops by the newsroom to write press releases
for community groups on the computer.

Distilled, here are some lessons from the _Journal_’s experience with
computer training:

1. Even the best-intentioned companies may fail miserably in easing some
  employees’ computerization traumas. The paper’s editor at the time was
  Irving Leibowitz, a Lou Grant-like figure beloved by many in the
  newsroom; I can recall Leibo once jumping up on the copy desk to lead
  a “Happy Birthday” tribute to Jim Mahony and barely missing the cake;
  that was Leibo. He died in 1979. Were he alive today, however, he
  would probably be the first to admit that the paper mishandled Mahony
  during the transition. Like many others, Leibo was in awe of Dapper
  Dan. And so he’d suspended the skepticism that usually served him well
  on the job.

2. The traits which make somebody valuable to his company _may_ be the
  very ones complicating his transition to computerization. Jim Mahony
  was the folksy, family-oriented man that his column suggested. Mahony
  knew steelworkers as well as politicians and businessmen, and to
  maintain that network of friends, even in a small town, takes time.
  Jim didn’t like working late at the office, boning up on computers; he
  would rather be with his family or some of the average people he wrote
  about.

3. At the same time you can’t stereotype anyone—by age, folksiness, or
  otherwise—as absolutely doomed to fail at the computer keyboard. Just
  look at old Jack LaVriha, himself a Lorain native and strong family
  man. Jack took well to computerization and would give the editors
  cards with numbers on them, saying, for instance, “Call up story
  number so-and-so if you want to know about a hot veterans parade
  coming up.” Before computerization he’d lobbied for his stories by
  shoving them in front of the editors’ faces or leaving notes; the
  cards were his new way. Why did Jack succeed where Jim didn’t? Hey, he
  thought of computerization, if that’s what it is, I’m going to accept
  it. I do whatever stories they give me, so why not this? His being a
  reporter, not a desk-bound editor with a strict routine, may have
  helped.

4. An important part of training is simple salesmanship—persuading the
  worker to adopt the right attitude. Mahony rightly or wrongly felt
  bullied. He wanted to be wooed, not pressured.

5. Don’t make computerization seem more threatening than it has to be.
  _Journal_ managers bragged how they’d throw the typewriters out of the
  newsroom—Mahony’s security blankets. Instead, the paper might have
  kept a few there for tasks like note taking. As a matter of fact,
  that’s what actually happened. Also, Mahony recalls that the paper
  computerized without at first having a printer in the newsroom,
  meaning that staffers had to trust everything to the computer memory.
  He would have felt more comfortable in the beginning with paper
  backups. That’s a close one. Learning the Kaypro, I myself progressed
  faster because I couldn’t use my printer at night without disturbing
  the neighbors. I, however, was learning voluntarily. Mahony was
  forced. Try to computerize with the old system intact in the
  beginning—with paper records, in other words. Not only will your
  Mahonys feel more comfortable; you’ll be better protected when the
  computer glitches up. Sooner or later, they all do.

6. As early as possible start people on real projects. The first day at
  the keyboard Jim Mahony might have been writing a column or part of
  one. Adam Green, the software training expert, says to start off
  teaching your new employees some computer basics. But then they should
  buckle down to the practical from day one. Integrate WordStar, for
  instance, into your employees’ work. Don’t say, “Okay, now you’re
  going to take a class in WordStar.” Instead, have a sales rep use
  WordStar to write some letters to customers or encourage an accountant
  to start using 1-2-3 as soon as possible on a limited basis. This
  isn’t to say that a real project is the only hook you can use. Green
  has been quite successful with Adventure-style computer games that
  require people to learn to format their disks and other basic micro
  skills. It’s a good introduction to micros for the Pac-Man generation.
  That might not be right, however, for Mahony-vintage people.

Above all, beware of the babble about “computer literacy” for everyone.
Follow John H. Bennett’s example. With a Harvard Ph.D. in mathematics
and a Phi Beta Kappa key, he’s hardly antilearning. And yet he
skillfully mapped out a micro program for executives who weren’t
interested in all the subtleties of bits and bytes.

Bennett is the top data-processing man at United Technologies
Corporation. United, a $14 billion conglomerate, produces everything
from helicopters to air conditioners and silicon chips. “We’re a
high-tech company,” Bennett said. “More and more of our products have
microprocessors in them.” Most of the senior executives, however, had
never used a personal computer before Bennett started a training program
for those baffled by tech talk. “It’s not a productivity program,”
Bennett said. “It’s an educational program.” With the $5 million
program’s stress on hands-on experience, however, those goals meshed
nicely.

United homed in on the computer skills that seasoned executives could
use in their jobs and searched hard for the right people to teach them.
“You can get people to teach you to use an automated spreadsheet,”
Bennett said, “and of course there are at least a dozen vendors offering
to teach people to use a word processor, but there is no program that
takes the standard tool kit and offers to at least introduce you to
every tool.” National Training Systems, Inc., however, a California
company, designed the course he wanted. In 1983 and 1984, more than a
thousand United executives were to learn to use the IBM PC and the
Context MBA program. Bennett had settled on the IBM one Christmas
vacation when he himself tested several different brands. It was his own
initiation to personal computing. He surmised that plenty of software
would be coming for the IBM, and in fact Context MBA did appear in time
with tools he wanted for United’s executives; the integrated program
included a spreadsheet, data base, graphics, communications, and simple
word processing.

United held the three-day course in a windowless conference room on the
second floor of the research center in East Hartford, Connecticut, just
across the river from corporate headquarters. Blowups of IBM computer
equipment lined a wall. It was as though United were doing all it could
to engender concentration. If an executive turned to gaze at a
nonexistent window, the sight of the photographs might gently nudge him
back to work. Up front was a projection screen and an easel bearing such
“EXTRA ACTIVITY” suggestions as “EXPERIMENT WITH VARIOUS COMMANDS ON
YOUR SPREADSHEET.” In a photo from United’s public relations office, the
carpeted room looked like a cross between a college classroom and a
ComputerLand store. Executives came from United divisions across the
country. With sixteen IBM computers and matching printers, the training
project couldn’t travel very far.

One of the students was himself a local of sorts, Robert J. Bertini,
Jr., controller of the East Hartford research center. He was an MBA in
his mid-forties, and in some ways he typified many of the executives in
the program. “To a certain extent,” he said of his thoughts before he
took the course, “you’re afraid you’re going to screw up.” He had toyed
with the idea of buying an Apple or Commodore but “didn’t want to sit
there and read a book and hunt and peck at the keyboard.” Still, he was
constructively egotistical: if others could master computers, why not
he? So he signed up. On paper the program was completely voluntary. In
practice, perhaps, what with peer pressure, it was army voluntary. “We
just didn’t feel the management of a high-technology company could be
competitive without knowing what the computer can do for them,” Bennett
had said in announcing the program, and who wants to be known as
noncompetitive? Still, the company was bending over backward to make the
training as palatable as it could. Within minutes of the computer
instructor’s first “Good morning,” Bertini was learning how to load
disks into the little IBM machine and type out the commands of Context
MBA. Mercifully, he wasn’t wrestling with unneeded computerese. “Most
manuals,” Bennett correctly says, “are not written with executives in
mind. Most are written for people who know how to use computers. On page
thirty-something of the manual it eventually gets around to telling
people how to start their computers up.”

Just a week after Bertini finished the course, his own IBM PC arrived at
his office. Man and machine were still new to each other, and
data-processing people were ready to help overcome the normal start-up
glitches, but Bertini faced other problems. Would he have time during
the normal work day to perfect his computer skills? Nearly thirty people
reported to him, and now the machine, too, would be vying for his
attention. He also worried some about his image as he groped around on
the computer. “Hell,” he candidly said, “we all have our degrees of
vanity.”

Once again, however, United had a solution, a routine one in the
training program. It allowed Bertini to take the IBM home. “Let’s face
it,” he said, “the course taught you the basics, how to get on the
machine, how to do some relatively simple, basic things with it. To
learn other stuff that makes it the tool it really is took eighty or
ninety hours or whatever I spent with the thing at home.” Even after
Bertini mastered the IBM, he still used it at home for chores like
checkbook balancing—and for work, too; especially work. “My wife,” he
joked, “decided that the reason this thing was going to be a big
productivity improvement for the corporation was that I’d put in that
extra eight hours at home and give them a sixteen-hour day.” He also
found himself working later some days at the office.

But Bertini emerged a believer in both the training program and the
machine. As chief fiscal officer at the 1,200-employee research center,
he helped preside over much of United’s research and development
budget—then $800 million a year. His life was a series of what ifs. What
about that $4-million mainframe computer; should United buy or lease it?
What about taxes, depreciation, interest rates? What about a number of
what abouts? Traditionally, Bertini had waited around for answers from
his staffers, which could take hours or days; but now he had his own
computer and electronic spreadsheet and could consider more options
faster. The IBM was also handy for confidential tasks like salary
analyses. “As far as merit increases for my people were concerned,” said
Bertini, “I had access to it, and they didn’t. And that’s the way I
wanted it to be.” He also wrote letters and memos on the computer.
“Would you believe, twenty years ago in college I took a typing course?”
he said. When Bertini wrote to Harry Gray—United’s chairman—the center
controller’s secretary redid the letters on a typewriter. But the little
dot-matrix printer worked well for memos zipped out to Bertini’s
staffers. The communications part of Context MBA was also a joy, for
Bertini could send electronic mail and tap United’s mainframe for facts
that previously had been filtered through subordinates. Some staffers
resented his new ability to bypass them. It was a reversal of normal
roles. The boss had a personal computer before they did and was now
better plugged in to United’s information network. “As far as I’m
concerned,” Bertini said, defending his new system, “the boss’s job is
to second-guess you.” But the worried might find some solace: Bertini
was planning to bring in a second IBM for the people below.

                         Training (Continued):
                          The Dahlonega Answer

For a bucket of fried chicken, Hugh Hunt, a son of H. L. Hunt, the late
oilman, gave me some lessons on how to run my Kaypro.

An Anderson Jacobson salesman had offered my name to Hunt after he
couldn’t get his Kaypros working quite right with his AJ printers and
the Select word-processing program. I passed on the number of someone
who might actually solve the problem.

Hunt, having tinkered with computers for several years, gave me some
quick tutoring on my Kaypro.

“Well,” I said, “I’m still not really familiar with the basics of CP/M.”

“Come on over,” he told this stranger, who was wise enough to own the
same brands of computer and printer as he did.

“No consultant’s fee?” I joked.

“Bring along some fried chicken,” he said.

Hunt’s home sat on a hill in horse country just outside Washington. He
called it Dahlonega, after a town in the Georgia mountains where he had
once lived and where miners had extracted gold before the Civil War. In
his basement, in plain, fluorescent-lit rooms, were the offices of his
land-development company. Hunt showed me how he had rigged up a roll of
Teletype paper with a clothes hanger so he wouldn’t have to buy a
tractor feed for one of his daisy-wheel printers. A tall, heavy-set man
nearing fifty, he wore casual clothes and looked like old pictures of
his father in middle age. In the beginning, however, I could only guess
who he might be. Even if he had been Hugh Doe, I still would have been
interested in his style of training the people who operated his Apple,
his several Kaypros, and a pair of Osbornes. His techniques were wrong
for many corporate situations. They would have been a disaster for Jim
Mahony, the old newspaperman, who was so heavy-handed that he ruined at
least two typewriters. But they were just right for Hunt and his
people—and perhaps for many other small businessmen who like to be
surrounded by employees comfortable with high tech.

Hunt didn’t give his staffers extra-long, step-by-step guidance.
Instead, he:

1. Hired people who were fast learners at the keyboard.

2. Helped them with some learning aids like color-coded keys showing
  kinds of WordStar commands.

3. Motivated them by explaining how their new computer skills would make
  them happier—and richer, since he paid them more, once their
  productivity increased.

Esther King, his middle-aged office manager, a bright, down-to-earth
high school graduate, actually may have been as responsible for his
training methods as he was. She tried to hire only people who’d benefit
from some quick lessons followed by intensive self-instruction.
“Sometimes I’ll have them sit down at the computer,” she said of her
employment interviews, “and I just turn it on and tell them to type. A
lot of people, they’re afraid they’re going to hurt it. And you’re not
going to hurt it. You can’t hurt it. So you mess up, and you get the
wrong thing, and it says you made a ‘fatal error.’ So you just start
over, and that’s the only way you’re going to learn—is sit down and not
be afraid of it.”

Jeanette Counsellor, at the time an employee of Hunt’s, didn’t just type
on computers. She also knew how to juggle around thousands of dollars on
electronic spreadsheets. And King herself boasted the ability to use
computers to help project building costs, a useful skill since Hunt at
the time was finishing construction of a water-theme park in North
Carolina. What’s more, on the Apple, King helped Hunt do company tax
work.

By telephone—I talked to Hunt and his people several times—I asked
point-blank why he’d been so successful in getting staffers running on
computers.

“I told them,” he said, “how it would be useful for the rest of their
careers to be able to say, ‘I’ve worked with a computer and I’ve word
processed.’” His people didn’t mess with BASIC, just skills directly
useful in their work. “I showed them,” said Hunt, “how computers could
save them a lot of time and trouble in the amount of rewrites I do. I
put it to them as a challenge.”

“I was ready to learn,” said Counsellor, who had taken a data-processing
course at a community college but had never before used a computer. “I
was looking for a job that would train me to do this sort of thing.”

Although your people may need more guidance than Hunt’s staffers in
learning computer skills, you can take heart in the results of a poll
reported in _InfoWorld_. Of 500 personnel managers and over 500 clerical
employees, 87 percent said “on-the-job training to learn new
technologies” is important.

                     Micros and the Data-Processing
                               Department

Bertini and the employees in Hunt’s office were lucky—the powers-that-be
were encouraging the introduction and use of micros.

Within American corporations, however, many data-processing departments
have looked askance at small computers.

They’ve seen them as a threat to their power. So American executives
have bought millions of dollars of “typewriters” and “adding machines”
from computer stores, hoping to fool Data Processing (DP) and
bookkeepers. One man lost his job after Data Processing wouldn’t let
executives buy micros and he falsified an expense voucher to smuggle in
an Apple. Dishonest? Yes. But a micro martyr, too.

This atmosphere may be changing, of course. As early as 1983
_Computerworld_ reported that of 220 data-processing managers replying
to a poll, 62 percent said they would encourage the use of personal
computers.

Beware of the De Mille Syndrome, however. It’s the fondness of many
data-processing managers for what one consultant calls a “Cecil B. De
Mille production” with “a cast of thousands, millions of dollars and
years in the making.”[32]

Footnote 32:

  _Computerworld_, March 28, 1983.

The poor, ignorant people outside Data Processing, meanwhile, can’t
enjoy all the micros or advice they need. “Last year,” went a plaintive
letter to a computer columnist, “we purchased a microcomputer and
VisiCorp’s VisiCalc software for the company accounting office. The
micro was idle for about six months until someone decided to figure out
how to use it. Since then, half a dozen people in our office and at
least as many in other offices keep the system tied up.” But the firm’s
computer people wouldn’t budget more machines even though the $5,000
micro in the accounting office had “paid for itself many times over.”
The excuse from the computer pooh-bahs was this: several accounting
systems were on the way that would do the job, and why allow micros to
proliferate? “Money,” said the letter to the columnist, “has never been
a question.”[33] Power, apparently, was. In that sense also, many
data-processing biggies are like De Mille.

Footnote 33:

  _Computerworld_, March 28, 1983.

“Programmers in general are pretty control oriented, pretty methodical
in nature,” said Adam Green, “and usually the most methodical, the most
control-oriented person becomes the head of DP.”

“If they like you, they’ll help you; if they don’t, they won’t,” said my
friend Michael Canyes, who himself served time in data processing in
government and private industry.

And it isn’t just the De Mille desire for control that has dashed many
an executive’s hopes for an office micro. It’s also their sheer
ignorance at times.

“Some data-processing managers started out ten or fifteen years ago when
the field was growing,” Canyes said, “and stayed with their companies
while more able people moved to others. They just were in the right
revolving door at the right time. Many don’t know enough to get a job
elsewhere. And they don’t understand the capabilities of micros and are
afraid of them.”

At United, Bennett’s executive micro course was geared toward the
nontechnical, and yet he commendably wanted his top data-processing
people included, too.

“Many of them,” he said, “hadn’t touched a computer console or terminal
for ten years and were quite surprised as to what a modern microcomputer
can do.” They didn’t learn faster as a group, in fact, than did the
other United executives. “If they’ve never used a word processor,”
Bennett said, “why would they learn it faster than the guy next door?”

                            ■      ■      ■

  ‘How

  What do you do if you need Data Processing’s favor to buy a micro or
  set up an office network of them? Bennett has the good sense not to
  “tell somebody how they could do something in a political environment
  that I’m not familiar with.” Here, however, is my own reckless
  scenario for you. Do not sue if this advice makes you a micro martyr:

  1. Before approaching Data Processing, ask who-how questions about the
    people there—questions similar to some you’d raise about outside
    consultants. Find out who, formally and informally, can help you the
    most.

  2. Ask your informal Data-Processing contact about possible technical
    problems. Tell him what you hope to do. If it won’t fly, how can you
    modify it?

  3. When you’re ready to deal with the Data-Processing manager, tell
    him your exact computer goals. Easier word processing on just one
    machine? A micro network tied into the mainframe? Many executives
    correctly see big computers as massive repositories for information
    to be analyzed on micros.

  4. Make it clear you’re aware of your project’s complications.
    Anticipate the manager’s own who-how-style questions, especially the
    “How” and “How much?” Take on the issues closest to the
    Data-Processing manager’s heart. Traditionally, DP seeks to
    centralize facts so Sales won’t have one set of numbers and
    Administration another set. Does your micro plan tackle that
    problem? Also, what about the security issue? How are you going to
    safeguard facts stored inside the micros? What about maintenance?
    Who’s going to look after the computers—your department or DP? How
    about training? Your baby or Data Processing’s? Also, what will you
    do for ongoing technical support?

                            ■      ■      ■

Despite some DPers’ _possible_ ignorance of micros, you’ll still come
out ahead with the computer room’s cooperation, especially if you want
your micros talking to the mainframe.

“The situation,” one expert told _Computerworld_ in describing
micro-mainframe hookups, “is like connecting two telephones with a wire
and trying to get a Russian to communicate with an American. The
microcomputer users think they have finished the job, but they haven’t
even begun.”

So if you want your micro to get along with other computers, try to
coexist with the people who might help out.

Well, so much for relations with humans. Now, how do you survive the
computers themselves? How do you choose the best keyboards, screens,
etc., for you to live comfortably with your machine? How can people feel
in charge of their computers—guarding health, comfort, and productivity
against the HAL syndrome?

Backup:

◼ VIII, Consultant Contracts: Some Who-How Questions, page 339.




                          9 ❑ The Hal Syndrome


Raquel Welch, the movie star who pranced around in a fur bikini in a
caveman epic, reportedly planned to use a $10,000 computer to write a
fitness book. Her ballyhoo in late 1982 stressed that “the mind and body
are connected.” But for _Time_ readers she may not have set the best
example. A color photo showed a tightly gowned Welch lazing on the floor
near the newly famous computer—it lacked a detachable keyboard.

And if you can’t separate your keyboard from the main part of your
machine? That might be bad news for both your mind _and_ body. The best
distance between your eyes and the TV-like screen may clash with the
right separation between your torso and the keyboard. Your posture may
suffer. In fairness to Raquel—who declined an interview on the topic—she
might have felt perfectly comfortable using her computer. Perhaps she
had the proper eye-sight, the perfect body, for it. If she didn’t,
however, Raquel may have subjected herself to the Hal Syndrome—letting
the computer bully her.

Hal, you’ll recall, killed all but one of his human masters. Raquel’s
computer didn’t murder her, but if she indeed toiled hard on it for her
book, it may have done a very nice job of killing her back.

The Hal Syndrome can manifest itself in other ways. Even the wrong
furniture, indeed especially the wrong furniture, can poison relations
between humans and machines.

What’s more, bad =ergonomics=—the jargon for the human-machine
link—actually can make you sick.

Raquel may like her work; but millions of clerical people don’t, and
aches from computers can add to their stress. They can help bring about
heart attacks, strokes, high blood pressure, perhaps even raise yours by
raising your company’s health-insurance costs over the long run.

And they can lower your profits in other ways.

Working with bad furniture and lighting, computer operators in one study
made more errors and tapped out 25 percent fewer keystrokes than they
did under better conditions. Michael Smith, former chief of the
Motivation and Stress Research Section at the National Institute of
Occupational Safety and Health (NIOSH), says the NIOSH experiment lasted
a week and was closely controlled. A private ergonomics consultant found
a 10-15 percent difference in a study of good and bad furniture.
Whatever the percentage, however, ergonomics isn’t just a gimmick to
sell new tables and chairs; Smith says it especially can help narrow the
gap between mediocre and prize workers.

Not only does good ergonomics pay for itself in the long run; it may
also improve your labor relations.

It’s a perfect meeting ground for you and your employees. They want good
working conditions. You want good work. And everyone can win; for with
decent ergonomics, you’ll enjoy lower turnover. You may very well lure
good people away from competitors who run electronic sweatshops. Sharp
screens and silky keyboards won’t single-handedly stave off unionization
or endear you to ensconced unions, but they won’t hurt. A smart, secure
executive, in fact, may even turn union complaints to his advantage.
He’ll _listen_. He (or she) won’t spend $20,000 on new computers or
terminals that inflame people’s eyes and tempers.

In short, he’ll learn eleven steps to good ergonomics:

1. =The canary-in-the-mine= theory of labor relations. Ergonomics is
  people, too, not just machines, and you’ll read here of better ways to
  work with both.

2. =Good job design.=

3. =“Terminal” happiness.= Detachable keyboards are just a start,
  whether you’re using a micro or a terminal hooked into a large
  computer. Micros normally include keyboards, screens, and other major
  parts of terminals. So “terminal” is what I’ll say most often in this
  chapter.

4. =The right furniture.=

5. =The proper light=, or as it’s been said, “Let there be less.”

6. =Noise reduction.=

7. =Air conditioning, heating, and ventilation=—basics neglected by a
  surprising number of computer users.

8. Honest assurances to your people that you’re exposing them to the
  least risk. Not all the extra stress in some computer work comes from
  the equipment itself. Some is from _fear_ of the machines.

9. A willingness to consider alternatives to the TV-like CRTs that
  computers use to flash out words and numbers. Flat-screen
  computers—with thin panels rather than bulky tubes—may eventually be
  easier on the eyes.

10. Sensible use of wrinkles like the mouse—the hand-sized gizmo you use
  instead of the arrowlike keys to move the cursor on the screen. (See
  Backup X, “Of Mice and Men—and Touch Pads, Touch Screens, Etc.” Also
  see Backup IX, “Window Shopping.”)

11. A related ingredient, good software—the topic of earlier chapters.

                         The Canary in the Mine

“How,” I asked a consultant, “do you know if someone is trying to offer
a constructive suggestion about computerization or to get in the way?”

“Consider the source,” he said. “Is it coming from a researcher or a
union?”

To some extent the man was right. Some people, unionized or not, may be
no more than twentieth-century version of the Luddites, the English
workers who, during the 1800s, smashed the mechanical looms that were
taking away their livelihoods. Indeed, Dr. Michael Colligan, a NIOSH
psychologist, says, “Opposition to computers is usually kind of veiled
or disguised under more general complaints about eyestrain, headaches,
and physical discomforts often associated with video display terminals
(VDTs).[34]

“But,” Colligan warns, “if you talk with workers awhile, major concerns
begin to surface.” Legitimate concerns. Whether it’s individual workers
or unions, don’t tune out gripers. Listen to people like Joan.

Footnote 34:

  The Colligan quotes are from Joel Makower’s useful book _Office
  Hazards: How Your Job Can Make You Sick_, published 1981 by Tilden
  Press, Washington, D.C.

Joan started out around 1980 as a model employee in a northeastern
office of a major insurance company, whose officials declined to be
interviewed. “I averaged ten hours a week overtime,” she said, “and I
came in when I had pneumonia and a fever of 102.” In a modest way,
helping to unravel the mysteries of the machines, she aided
computerization. Later, however, in a not-so-modest way, she aided
something else: unionization.

By the time I reached her, she had quit her $10,000-a-year job to go
into business with her husband. For more than an hour she poured out her
anger against the terminals and the company that now used them.

“They affected my stomach quite a bit,” Joan said. “Most days I worked,
I would throw up in the ladies room. I didn’t throw up before I started
working on the computer, and I haven’t thrown up since I quit.

“The screens weren’t at all soft on the eyes, even with the glare
screens that snapped over the top. And they were nontiltable.”

She also complained that the screens were too low even for a five footer
like her.

“Could I have some books and put my system on top of them so the screen
will be in the middle of my eyes?” she recalls asking a supervisor. “You
get this constant tension in your back because you’re always hunched
over.”

“No,” she says the supervisor told her in effect, “that’s unacceptable,
totally.”

Why?

“Because,” came the reply, allegedly, “the office won’t look the same.
It won’t be level.”

Joan says management wouldn’t even let her work with the terminal in the
middle of her desk. “They wanted them all on the same side,” she
recalls. “I said, ‘Hey, I don’t work on that side of the desk, sport.’
It was ludicrous, absolutely ludicrous. Even a simple request like that
was too much.”

At least the chair was adjustable “I lowered it so I could get my eyes
as close to the middle of the screen as possible,” she says. “I was so
low that if I opened the middle drawer on my desk I’d bang myself.”

But it was the lights that most irked Joan. They were bright
fluorescents, fine for traditional paperwork but not for the computer
era. Management, pressed by employees, took out many of the tubes; and
yet Joan says some glare-ridden workers still wore sunglasses.

She also complains that the company wouldn’t even offer the operators
eye examinations, an irony, considering that she was processing health
claims.

Again, Joan was a union activist—as a result of her experiences—and some
managers may recoil from the very notion of clerks organizing, and yet
in her litany of complaints about working conditions, there was not one
with which most ergonomics professionals would quarrel. Had management
listened to her on those issues, in fact, it would have been doing
itself a favor. Forcing the workers to strain their necks, backs, and
eyes is hardly the road to higher productivity and profit. It would have
cost several thousand dollars at the very most to change the lighting.
Corporate bureaucracy may or may not have allowed the workers to be
consulted in selection of the terminals, but there is no reason—other
than a misdirected passion for discipline and order—why the company
couldn’t have let Joan change the level of her screen.

Joan’s experiences are a good argument for the Canary-in-the-Mine Theory
of Labor Relations. In the days before electronic gas detectors, coal
miners carried canaries into the pits. The birds’ lungs were more
sensitive than theirs to poisonous fumes. And watching the canaries,
many a miner saved himself and others.

Novelist Kurt Vonnegut, Jr., used the canary-in-the-mine parallel to
describe artists and writers serving as an early-warning system to call
attention to social ills. And workers like Joan, “troublemakers,” are
your canaries. You may not agree with them, and you may aggressively
fight them, but before making up your mind, at least listen to them.
They can anticipate the concerns of less vocal workers scared of losing
their jobs.

“Well,” you ask,“what about my authority as a manager? You knuckle under
to the troublemakers once, they’ll come at you again and again.”
Confident executives, however, will avoid this misplaced machismo. They
will assert their authority more productively, letting workers have a
voice in working conditions but, in return, demanding good, steady
production, which, after all, is the bottom line. When your stockholders
receive dividends, how many will think, What slobs—their VDTs don’t even
line up at the same level!

Ideally, of course, your people won’t have to prop up their machines at
all, because they’ll have helped you choose easily adjustable screens
and other equipment.

“When I help design new computer systems,” says Robert Waters, an
ergonomics specialist with a background in psychology, “I try to find
out who’ll be using them. Then, if possible, I’ll seek out their
opinions.

“If you do that, people won’t feel so threatened. It will be their
equipment, too, not just the company’s. They won’t think, I don’t like
it, it’s bad for me.”

Richard Koffler, editor-publisher of the _Ergonomics Newsletter_, also
recommends giving the worker a voice in equipment selection: “If you can
do it, try it. They’ll tell themselves, ‘I wouldn’t want to look like a
fool because I chose something that wasn’t good.’”

In Washington, D.C., Richard G. Barry, now senior advisor for management
systems at the World Bank, has successfully let employees help pick some
of the computer gear the bank was using. Barry didn’t set out to
experiment. He just decided that giving the workers a strong voice would
be the most logical way.

It happened, among other places, in the offices of the Eastern African
region at the bank’s D.C. headquarters. “We had a few word-processing
machines,” Barry said, “and there were a few word-processing centers
around the bank where we could go if we wanted something done, but
essentially we were starting out from zero.”

The office included two hundred professionals and one hundred
secretaries and other clerical workers, and Barry’s task force
represented them in several ways. One was by job function; lending
officers were there as well as those overseeing the existing projects.
People also came from different parts of the office’s bureaucracy, from
different countries, and, obviously, from different job levels—everyone
from secretaries to division chiefs. Barry didn’t go out of his way to
pamper clerical workers in particular. He simply felt that like any
other bank employees, they should decide what tools they needed to get
the job done.

Secretaries, far from being anticomputer, asked for equipment to reduce
repetitive typing. Managers sought fast word processing, in different
languages, which complicated keyboard requirements. The secretaries
themselves wanted terminals with whose keyboards and screens they’d be
happy. In a microcomputer installation without separate terminals, of
course, there may be less choice.

It took a year for the task force to line up the equipment, and wisely
the actual equipment shopping came last. Instead, the task force focused
on what characteristics it wanted the gear to have. Then it learned what
was available—how products compared to the ideal system within budget.
As a result, the Eastern African region ended up with good, sharp
computer screens, ergonomic furniture from the very start, and a
lighting system fit for computer work. And Barry says the teamwork
helped promote ...

                          ... Good Job Design

A friend of mine, a mid-level manager, was almost salivating over the
economies of computerized word processing.

“You know what I’d do?” he said of an office where he’d worked. “I’d
take out just about all the secretaries and dump them into a central
office. I’d reduce their salaries. They’d be doing less demanding work
and should be paid less.” He wasn’t an ogre. He was reflecting the
thinking of a good many modern managers. It makes sense, doesn’t it,
turning offices into factories, which, indeed, might run twenty-four
hours a day, to make the best use of equipment?

Well, not quite. In fact, not at all. Nor should you try obnoxious
gimmicks like =computerized pacing=.

They’re all threats to good =job design=, which is nothing more than
sensibly deciding what each job includes and how the employee does it.

Consider typing pools—er, centralized word-processing operations. If not
passé, they at least deserve to be; most, anyway. Employees’ salaries
keep rising, even with slowed-down inflation, while the price of
computers is falling. By the end of this decade an average worker’s
salary may exceed $20,000 annually. And yet micros and dedicated word
processors will easily cost less than several thousand dollars. Even
now, for a typical business, Barry says, centralized word processing
simply doesn’t pay; it tears the employee away from his or her boss and
harms the managers’ own work. Executives must vie with other offices of
a company for the word processors’ time. They can’t effortlessly set
their own priorities. And quality is more of a problem, too, because, as
Barry notes, “someone in centralized word processing won’t normally get
hell for not catching an error. I expect my secretary to challenge
anything she’s not certain about. For instance, my secretary will come
in and say, ‘You left such-and-such person off the list of people
receiving the memo.’ Which matters. Often who a memo goes to matters as
much as what’s in the memo.”

And what about the question of knowing which calls to put through to the
boss? Around the time Barry and I talked, he was obsessed with a paper
projecting the World Bank’s office needs for the next twenty-five years.
He didn’t have to tell his secretary of the importance of any call about
the paper. She knew. For she’d been helping him put it together.

“It isn’t a question anymore of the efficient use of the machines,”
Barry says in recommending the traditional secretary over the pool
arrangement. “It’s effective use of the people. It’s like the phone.
Even if people use the phone just twice a day for business, we still
give them their own. We don’t put all the phones in one room, do we?”

You may disagree with Barry and still insist that central word
processing is the most efficient use of both equipment and people; and
maybe your company’s size, economics, or policy will allow nothing else.
But if so, be prepared for more job complaints. Shut off from the
outside world, perhaps in a windowless, poorly ventilated room, the pool
members may feel like Dickensian factory hands. And the claustrophobia
may not just be physical. With no one around but others in drudge jobs
and their immediate supervisors, the workers feel cut off from chances
for advancement. They become obsessed with their immediate surroundings
and may be more apt to notice shortcomings of their equipment. “You look
at studies of typing pools,” says Waters, “and you’ll find they may
actually get in the way of productivity. More workers hate their jobs,
and they’re more likely to dislike their equipment, feel backaches,
other pains.” He says that sick leave, deservedly or not, may increase.

A gray-haired word processor in Manhattan said she disliked even
“clusters,” which were smaller and presumably more pleasant than a giant
typing pool in a back room. She missed the “pretty cozy relationship”
she enjoyed as secretary to one executive.[35]

Footnote 35:

  The material on the Manhattan word processor comes from Barbara
  Garson’s article in _Mother Jones magazine_, July 1981, p. 32.

“He might send me uptown to return a blouse that didn’t fit his wife. So
he couldn’t very well tell me not to make personal calls. Not that I
stayed on the phone all day. My job was to get his work out, which
included staying late if I had to. He appreciated me. And I expected to
stay with him till he retired.”

Responding to consultants’ recommendations, however, her company one day
offered her three choices. She could work as a mere administrative
assistant, join a word-processing operation, or quit. So she forsook the
familiar typewriter for a Wang. “Ah,” she reflected, “when I think of
those years of correction tape, white-out, retyping!”

Then, continuing her remarks to writer Barbara Garson, she added: “I
want you to take this down: I love my Wang. It’s not the machine that
gave me the shaft.”

What, then, did?

“Straight typing, seven hours a day,” said the word processor. “That’s
the shaft.”

Like Barry, she criticized the quality of work from word-processing
pools—or the lack of it.

“The worst thing,” she said, “is when things come by me with wrong
spelling, wrong information. Sometimes I think I should correct it. I
did at first. But that’s not how they judge me.” It’s by the number of
keystrokes. “So why should I take time to correct their work? And why
should I stay two minutes past lunch if they’re timing me that way?”

Michael Smith, however, makes a good case for careful, sensitive
monitoring.

“Management would be foolish,” he said, “if they didn’t monitor
performance. It’s what you do with the monitoring that counts. If you
use it in a negative way, that hurts performance. It might improve it
for a minute or a half hour while you were watching them, but it might
hurt in the long run.” He recommends, instead, systems that give the
workers themselves “direct, immediate feedback. The faster the better.”

Joan’s old insurance company, shortly after she left in 1982, started a
monitoring system in offices across the country. Some of her
ex-colleagues found it more palatable than a simple keystroke count.

Every six months it adjusted their job levels and salaries. And
production—the number of health claims processed—was just 30 percent in
the formula. Accuracy was another 30. The remainder of the formula
plugged in attendance and supervisors’ observations on job knowledge and
the quality of correspondence. The employees weren’t just at the mercy
of a machine.

“It’s a more equitable system,” said a claims processor whose salary
leaped from $220 to more than $280 a week.

Still, the union claimed that most members weren’t so well disposed to
the new system. That may or may not have been true. Just the same, the
claims processor qualified her own enthusiasm. She wanted faster
feedback from the monitoring. “It would be constructive,” she said, “if
we got it at the end of the day or even weekly.”

The woman, too, hoped to know the exact math behind the salary system:
“I’ve asked my manager a number of times. She said, ‘You wouldn’t
understand it.’ I said, ‘Tell it to me, and I will understand it.‘”

Big questions persisted. Was the insurance company, for instance, really
crediting her extra for writing letters to doctors who haven’t submitted
diagnoses with claims? The company told her that it was—that it still
paid to handle such cases. But she wasn’t so sure. Management, she
claimed, had lied on other matters.

Another worker said the company did not audit enough forms to discourage
slipshod work from high producers.

Even in its first few weeks, with the normal start-up wrinkles, the
system did show some promise. Production was dramatically up. “If I was
a manager and my job was to get the maximum amount of work out of an
employee,” said a claims processor, a union member, “yeah—in that
position I’d use it.” But she worried, justifiably, about her own
future. “Maybe a person has been producing ninety claims a day. How much
more can they push them? They can’t push them past a hundred, so what
else is there for them to do?

“There aren’t many [promotion] opportunities here because supervisors
have been here for years and years,” she said. And she wondered: What
about turnover?

It was winter 1982. A depression or near depression was in full swing.
Would the system have worked well in normal times?

Moreover, how much of a trade-off existed between the claims processors’
productivity and health? NIOSH studied 130 occupations in the 1970s and
found that clerical workers were second highest in illnesses like
coronary heart disease. Also, many of the women in Joan’s former
insurance office had children and blue-collar husbands, and a
Massachusetts study showed that women in such families suffered nearly
double the heart-disease rate of their husbands. And in Joan’s office,
did health insurance claims—for her coworkers’ own ills—cancel out some
of the productivity increases? Moreover, how about the moral issue?
Suppose the monitoring system taxes the employees’ health for short-term
gains; isn’t it almost the same as if the company were belching
carcinogens into the air?

If you’re working in a low-level clerical job without control over your
fate, you’re a good heart-attack candidate, according to R. A. Karasek,
a professor at the Department of Industrial Engineering and Operations
Research at Columbia University.[36] He cites studies showing that
people in “strain occupations” may show twice as much “definite and
suspected myocardial infarction and angina pectoris.”

Footnote 36:

  See “Job Decision Latitude, Job Design, and Coronary Heart Disease,”
  by R. A. Karasek, who participated in a 1981 Purdue University
  conference on job stress. The Karasek findings appeared on pages 48-55
  of _Machine Pacing and Occupation Stress_, a book published in 1981 by
  Taylor & Francis Limited, London. In Karasek’s words, “Job-design
  strategies advocating limited skill usage and decision authority for
  the majority of the workforce appear to be associated with a host of
  undesirable, unintended consequences ranging from skill
  under-utilization (and consequent productivity loss) to increased risk
  of coronary heart disease.”

Computerized pacing can increase the stress and health risks. Smith says
it’s rarely if ever the answer in white-collar work, not even mail
sorting—nothing “involving letters, letters, and so on. It doesn’t
improve efficiency because there are a lot of errors.” Pacing isn’t just
monitoring, after all. The work is electronically moving past the worker
as if it’s on a factory conveyer belt. Think of all the lemons Detroit
put on the road in its eagerness for new production records. “With older
workers the error rate isn’t as high,” Smith says of white-collar jobs
paced by machines. “Maybe it has to do with the nervousness of young
people. Older workers always report more job satisfaction. They become
used to the drudgery. It’s a hell of a way to put it, but that’s what
happens.” Not that many older workers love machine pacing, either.

So, in a large, factorylike office, what’s a happy compromise between
lax discipline and mechanized martinets?

You might try =participatory monitoring=.

Hear employees’ suggestions for a fair monitoring system. You needn’t
agree. Just listen. Your people may know of complications you wouldn’t
consider in arriving at your production goals; and you may also get a
better inkling of how long it will take for people and machines to
adjust to each other.

Also, setting goals, keep remembering that tasks vary. Don’t let your
monitoring system penalize people, for instance, who fill out forms more
complicated than other workers‘.

Keep your commitment to quality. Be willing to give employees some time
away from arduous work at the tube. It’s a good way to reduce expensive
errors. And tube breaks might not cost you that much in the end. Can
you, for instance, design your people’s jobs to use them fully while
limiting their time in front of the screens? Maybe you can’t. Perhaps,
with thorough computerization, there aren’t many off-line jobs left. But
try. Maybe, for instance, some data-entry clerks, showing high
motivation, can work part time in low-level telephone sales. The clerks
won’t feel so trapped; and you may discover some top-flight talent.

Ask your employees for their ideas. Who says every tube break absolutely
has to be a _work_ break?

Plan, however, for breaks of one kind or another. NIOSH favors breaks
“of at least fifteen minutes every two hours” for moderately heavy
terminal work and the same breaks every hour for workers in the most
demanding, repetitive tasks. A British labor group even suggests
structuring the workday so that people spend no more than half of it at
the terminal. You might chafe under those restrictions—many American
companies would—but don’t scoff at your own people’s ideas on breaks as
long as they do the work.

Here again, think about the Canary-in-the-Mine Theory of Labor
Relations; do not tune out the complainers: do not misplace machismo.

                           Terminal Happiness

In the Dark Ages, the pre-VDT days of newspapering, I worked on a
rickety manual typewriter. How I envied Darlene at the desk behind me! I
was a reporter-feature writer, while she was stuck with grinding out TV
listings and obits; but Irving Leibowitz, the editor, had favored her
with a Selectric, and I demanded to know why.

“Well,” Leibo said, “she’s a neater typist.” It mattered. Darlene would
feed her Selectric copy to an =optical character reader=, which helped
convert the typing to newspaper print. “There’s another reason, too,” he
said.

“What?”

“Darlene has a lousier job than you do,” said Leibo, himself a manual
typewriter user, “and just as much typing to do. In fact, more.”

Budgeting for VDTs, you might keep Leibo’s wisdom in mind. He gave out
the best equipment not to his higher-ranking people but to those who
needed it the most.

I thought of Leibo and Darlene when I read of the Grid Compass executive
computer and its original $10,000 price. It might be a splendid machine,
but what a waste of money in many cases. The money instead might go to
buy the right screens and keyboards for subordinates. So often the
difference is just a few hundred dollars, if it exists at all. Don’t
give your employees a say in the selection of equipment and then
restrict their choices through unreasonable penny-pinching. If you can’t
do it the right way immediately, maybe you should wait before you
computerize.

Mind you, no terminal or micro is going to be ergonomically perfect.
“I’d flunk them all,” said Waters, and he started with the DEC VT100
terminal he was using on his job at the time. The display was plain, old
white on black, not the best ergonomically, and it was too dim for many
offices. Fortunately, the lighting in his room was subdued. The
terminal, however, had other shortcomings—for instance, the lack of
simple knobs to adjust the screen’s brightness and contrast. Waters
instead had to control them with a series of keystrokes that he was
always forgetting. His loudest groans, though, were over the numbers pad
to the right of the keyboard. “I count 1-2-3-4-5-6-7-8-9,” Waters said.
“I don’t want anything where I count 7-8-9-4-5-6-1-2-3.” That’s how his
numbers pad was; that’s how my machine’s is; that’s in fact how most
computer pads are.

“Well,” I asked, “isn’t that just like a calculator’s?”

“But,” said Waters, “isn’t it a little confusing to switch back and
forth between that arrangement and the numbers of a telephone? Which are
in the normal numerical order.”[37]

Footnote 37:

  Before Bell adopted the standard touch-phone numbers pad, it did a
  study showing the superiority of the 1-2-3-4-5-6-7-8-9 arrangement.
  The study had strong financial motivations. After all, the more wrong
  numbers people dialed, the greater would be the cost to the phone
  company, since Bell at the time probably wasn’t charging anyone for
  wrong numbers.

You may disagree with Waters, but his message comes through. Even
ergonomics experts can’t always end up in front of the terminal of their
dreams. What you and your people want, however, is a sensible
compromise.

Ideally, rather than simply seeking the biggest discount through the
most massive purchase, you’ll remember that different people need
different terminals. You may in fact save money that way.

An executive who hates to type, for instance, and who doesn’t have to,
won’t need the same keyboard as a data-entry clerk. It still should be a
good board in case he changes his mind, but it needn’t be the most
expensive. With a World Bank-style selection committee, you’ll be more
sensitive to the needs of different offices, different levels of
employee.

Encourage some committee members to spend at least two or three hours
with the equipment you’re planning to buy; they may change their minds
later—but that’s better than no tryout at all.

Testing my Kaypro at dealers, I wrote test letters, composed sample
articles, and tried as closely as I could to duplicate my routine.

Impressed by the low price of the Osborne 1, I gave the little keyboard
every benefit of the doubt. And yet, even after several hours, I simply
could not adjust. “Just a matter of operator retraining” was how one
saleswoman put it after I complained that I kept hitting the return when
I wanted a quote mark. And yet I wasn’t about to gamble $1,800 on a
machine with a keyboard I might forever hate. Ergonomically, I had an
advantage: I was buying just for myself. But a selection committee, made
up of different kinds of prospective users—clerks and executives
alike—is the next best thing to a lone customer shopping with only
himself in mind.

Avoiding the HAL syndrome, your committee should consider, among other
things, the following:

                               THE SCREEN

For heavy-duty viewing, a terminal or computer should have at least a
nine-inch screen and ideally a twelve incher. I emphasize the words
“heavy-duty.” An executive using a terminal half an hour a week
obviously has needs different from a clerk doing tedious data-entry work
most of the day. Even the executive, however, should have a screen big
enough for unexpectedly long sessions in front of the tube. On the other
hand, suppose a bank teller must view just a few columns of numbers
every now and then; he may never need a screen bigger than a few inches.
Too large a screen, in fact, even in heavy-duty work, may expose one to
glary reflections.

Size preferences can be quirky. I’ll make do for the moment with the
Kaypro’s nine inches, but I wouldn’t mind a bigger screen; another
writer once said he’d like to hook up the same model to a
twenty-one-inch monitor.

The next basic is the color. The two sexes have somewhat different
tastes. Men, says John van Raalte, an RCA scientist, are less sensitive
to colors in the reddish-orange range than are women. That doesn’t mean,
however, that, as a rule, women should automatically have reddish-orange
monitors. For men and women the optimum range of light sensitivity is
usually amber or green. Comfort is high in those ranges, too, at least
for most people.[38]

Footnote 38:

  For observations on the merits of various colors, see _Ergonomic
  Aspects of Visual Display Terminals_, edited by Etienne Grandjean and
  E. Vigliani and published by Taylor & Francis Limited, London, 1982.

Amber screens are popular in Europe, where one study showed a lower
error rate compared to green and other statistics said more users liked
amber.

American computer magazines have breathlessly praised amber. It’s as if
they were fashion publications thrilled by the latest from abroad. But
_some_ U.S. experts question the controls in at least one proamber
study—for example, the number of volunteers, fewer than two dozen. And
Bruce Rupp of IBM points out that it’s harder to produce a steady,
flickerless image with amber than with green. What’s more, an executive
with a company planning to sell amber terminals said screens of that
color burned out faster than did green ones.

Meanwhile, NIOSH says dark characters against a stable white background
are especially promising; and Etienne Grandjean, a leading ergonomist
with many admirers in the labor movement here and in Europe, agrees.

Perhaps there’s a less jarring transition when your eyes move between
the screen and the printed material you may be working with. It sounds
logical enough, and in fact that’s what the Macintosh and many other
computers use. That’s also the display style I saw in the Newspaper
Guild offices in Washington.

“Do you see any flicker?” asked David Eisen, the guild’s research
director, who, in the labor movement, is one of the best-informed people
on VDTs.

I studied the white background.

“The little lines,” I said, “seem to be rolling into each other.”[39]

Footnote 39:

  If you don’t want lines on a CRT to seem to be rolling into each other
  when you‘re using a bright background, you should worry about
  something called a _refresh rate_. That’s the number of times the
  picture “repaints” itself on the screen. Etienne Grandjean, the
  prominent Swiss expert on VDTs, recommends a rate of at least 80
  cycles a second; others say it needn’t be so high. The Xerox 860’s
  rate is 70 cycles, according to David Eisen, and that’s better than
  average. Still, I noticed the roll, anyway. In a letter to me in
  January 1983 Grandjean also recommended a slow phosphor for use with
  the white background. That means the images would take longer to
  vanish from the screen than they would otherwise—reducing the
  perceived flicker.

The machine’s regular operator also saw the roll but said the screen was
comfortable, anyway.

The Guild machine, moreover, a Xerox 860, had the ability to revert to
white letters against a black background, which would have eliminated
the rolling. Would that all screens be as versatile, especially those
used in many tasks or by people with different tastes.

No matter what the task, however, don’t get caught up in terminal
fashion. Stress the basics. Are the characters, for instance, shaped
well? How big? At least .12 inch and preferably .16? Is the =dot matrix=
at least seven by nine? Harry Snyder at Virginia Polytechnic Institute
found that seven-by-nine matrixes produced “significantly fewer errors”
than when subjects worked with those that were five-by-seven. If you
can’t find the information in a machine’s literature, you might use a
magnifying glass to count the number of dots making up the maximum
widths and heights of the characters. Trying the large “N” and several
more letters on my Kay pro, I learned that dot matrix was a mere five by
seven—the bare minimum for light use; for a writer it could be better.

You might also back off twenty inches to see if the dots merge almost
completely into the letters and numbers. Eisen suggests looking for
flaws like “flicker, character blurring at the edges of the screen, and
adequate space between the characters and lines.”[40] Eisen obviously is
looking at VDTs from the viewpoint of the union members. But unionists’
desire for comfort and ease of use often will overlap with employers’
desire for maximum productivity. Woe unto the employer who doesn’t take
advantage of the overlap. In fact, Eisen’s observations here on
keyboards and screens are within the ergonomics mainstream and shouldn’t
be dismissed because of his affiliations.

Footnote 40:

  Eisen’s advice on VDTs can be found in the booklet _Humanizing the VDT
  Workplace: A Health Manual for Local Officers and Stewards_, published
  jointly by the Newspaper Guild and the International Typographical
  Union (the price is $1.50 from the Guild, at 1125 15th St., N.W.,
  Washington, D.C. 20005).

“The two things you must remember,” sums up Waters, “are legibility and
comfort. You may think at first that a five-by-seven matrix is fine. But
after six months your eyes may say, ‘No, No!’—and you may get headaches
and feel you need new glasses. Actually, you simply may need a better
screen. You’ve just got to consider how often, long, and intensely
you’ll be looking at the tube.”

When shopping around, you also should ask, “How many letters and
numbers—how many columns—can fill the screen?”

For word processing you’ll normally want at least 80 columns across, the
standard. Some screens, like that of the Victor 9000 microcomputer, can
display 132, which can be just the ticket for spreadsheet aficionados
with the right software.

You’ll also want to know if you can highlight selected parts of the
screen, for instance, categories of information stashed away in the
computer. You might use =reverse video=—a light background and dark
characters if your normal background is dark—to keep track of columns
showing names and addresses. Not interested in phone numbers? Then those
columns for the moment would be the normal light-dark combination. In
word processing, reverse video could show you the blocks of texts that
you planned to move or erase or underline.

Two other amenities—more than amenities, in fact—would be easily
reachable and adjustable controls for changing brightness and contrast.
The Kaypro lacks a contrast control, much to my chagrin. At least I can
adjust brightness—a “must” normally and one still “mustier” for people
using antiglare filters, which reduce light from the screen.

Keep thinking what you or others will most use the computer for. Color
graphics? Fine. But your multicolor monitor won’t display characters as
sharply as a black-and-white or =monochrome= screen would, and the
screens might lose their crispness faster and add to the eyestrain of
heavy word processing. One-color screens, then, would be best for
typical writers and secretaries. On the other hand, if you’re an
executive or clerk working with many figures alongside each other, the
color monitor might help you and your eyes keep the numbers apart.
Might. Some people may object to color except for graphics.

Two kinds of color monitors are common. The =composite= monitor is
technically more like a home TV than the =RGB= or “red/green/blue” kind.
It’s cheaper. But colors blur into each other more than with the latter
type.

Whatever monitor you buy, keep the screen clean.

And don’t be surprised if, in a year or so, the characters start looking
a little fuzzy. Harry Snyder, a leading expert on the ergonomics of
monitors, says the half-life of a tube in heavy use is normally about a
year. Don’t stint on replacements and jack up your people’s error rates.

                              THE KEYBOARD

Remember Raquel toiling at a keyboard attached to her computer?

Maybe she’s happy. She may have a well-built back, a graceful, flexible
neck, wrists that don’t quit, or simply a body compatible with her
machine and furniture. But I still question the attached board for most
people.

Unless Raquel spent many hours on the machine before buying it, she
might not have known if she’d be comfortable.

The more time you spend at a keyboard, the more likely you‘ll end up
with the right one. Test keyboards thoroughly. If you‘re buying several
dozen, you or a staffer might spend a good three or four hours with the
machine you’re about to purchase. A difference of just 10 percent or so
in the number of keystrokes per hour per operator could mean thousands
of dollars annually to your business.

Even if you’re buying a machine just for your own use, you should still
put in a good half hour checking out the keyboard. That’s true with any
computer. But the odds are stacked against you if you buy one with an
attached board. In Norway, in effect, computer keyboards by law must be
detachable, and in Germany official standards require them in most cases
(an exception exists for, among other things, limited-use portables with
built-in screens and keyboards).[41] Increasingly, union people here are
raising the issue—and quite justifiably, considering the feeling of most
ergonomics experts. Detachable keyboards, in fact, were one of the
issues over which a California union struck the local Blue Cross-Blue
Shield organization.

Footnote 41:

  The German requirement for detachable keyboards appears in paragraph
  4.3.1 of Standard ZH1/618 of “Safety Regulations for Display
  Workplaces in the Office Sector,” as released by the Trade Cooperative
  Association, Central Office for Accident Prevention and Industrial
  Medicine.

“Well,” you ask, “what about keyboards on infrequently used machines?”

You might, however, end up using the keyboard more often than you
expected. So play it safe. Make all boards detachable. It won’t cost
that much more. Also, keep the cords at least four feet long. And
unstrap the keyboards from the VDTs in the first place—which sounds
insultingly elementary, except that I’ve heard of an absentminded
company that, until a labor dispute, had forgotten to do so.

Also, don’t let the best keyboards become status symbols in reverse. A
well-meaning but wrong executive on the West Coast brags he does _not_
have a terminal with even a good board. He’s a fast typist but thinks he
could spend his time better giving dictation. “An executive typing,” he
says, “is like hiring a brain surgeon to give out pills for a sore
throat. If you’re paying him $50,000 a year, why should he do a $20,000
job two hours a day?”

Most executives would agree. But this is rapidly changing; more and more
executives are tapping out spreadsheets and eventually will do their own
word processing. They may bat out rough drafts on computers or word
processors, then have secretaries whip the documents into shape
electronically without having to retype all of them.

Besides, you can learn typing at any age. And you needn’t be an
excellent typist for computers to help you; indeed, with mistakes easier
to zap, the worst typists will profit the most. Take a Maryland
architect-consultant named Jess McIlvain. Before he got an IBM PC, he
just couldn’t write or type at length—worrying that the result “looked
like the cat had walked over it.” Two years later he was cranking out
reports several hundred pages long.[42]

Footnote 42:

  The McIlvain example comes from _PC Magazine_, May 29, 1984.

The new breed of managers, of course, may feel at home on the keyboard
from day one. Some colleges even now require students to buy computers,
many of which they’ll almost certainly use for word processing. What’s
more, as you’ll read in Chapter 11, executive keyboards can ease the
transition in the future to telecommuting.

So don’t impose your own work habits on a junior executive with fast
fingers. Why shouldn’t he or she have a deluxe keyboard if it helps him
serve your company better? And you yourself shouldn’t feel awkward with
at least a good board for quick memos.

Mysteriously, IBM forsook the Selectric tradition in designing the
keyboard of its original Personal Computer, where the left shift key,
oddly, isn’t immediately next to the “Z.” The deviation left some
computer magazine editors flabbergasted. Companies even started making
keyboards for the PC—at several hundred dollars apiece—that retained the
traditional layout.

“They’re not like normal keys,” my consultant friend Michael Canyes
complained of the ones on the PC itself. “They click on and off like
switches.

“A good key,” he said, “gets stiffer as you press down. But the IBM’s
are either up or down.”

Some cynics have a theory. Maybe IBM didn’t want the PC to steal too
many customers away from the Displaywriter costing several thousand
dollars more. Yes, keyboards are a matter of taste, and unlike Michael,
I can stomach the switchlike =tactile feedback=. But the shift location
is inexcusable. IBM in effect admitted its goof; the IBM AT, a more
powerful cousin of the IBM PC and XT, appeared with a much-improved
keyboard.

At least the original IBM PC’s keyboard surpassed that of the tiny,
chiclet keys on the first PC_Jrs._ Reluctantly—after sales were
flagging—IBM replaced the chiclet-style boards with more conventional
ones.

Pity us “users.” Even terminals intended for mainframes and minis can be
turkeys. I actually favor my Kaypro board over a terminal—from Digital
Equipment Corporation—which Waters once was using with a big mini at
work. Blame the old-style programmers who didn’t grow up with word
processing. “Most can’t type like a secretary,” says Canyes, “so the
manufacturers often skimp on the touch.”

And isn’t it strange? You can buy an electric typewriter with adjustable
touch for $200 but not get it in a computer costing fifty times as much.

I asked David Eisen why he hadn’t raised the touch issue. Wouldn’t bad
keyboard matches hurt productivity?

“That’s more the companies’ problem,” he said. “We’re more worried about
health.” He can’t recall a flood of complaints from Guild members about
keyboards with the wrong touch.

Union people, however, have talked about another change, flat keyboards,
now popular in Europe. The tops of U.S. boards commonly slant at fifteen
degrees. And Waters tells of an experiment where, given the ability to
change the angle, most participants settled for the fifteen-degree one.
A caveat, however, is in order. Maybe the people ultimately would have
done better with a flat board and plenty of practice on it. Perhaps you
want an adjustable board. But for me, anyway, it won’t matter as much as
touch.

Another issue is the QWERTY keyboard versus the more modern layouts.

“QWERTY” means the first six letters found on the boards of nearly all
American computers and typewriters. It’s a nineteenth-century legacy—a
bad one. The early typewriters couldn’t keep up with the nimbler
typists, so the machines’ designers thwarted the humans. QWERTY isn’t
alphabetical, it doesn’t bring together commonly used letters like “t,”
“h,” and “e,” nor does it use finger muscles properly. The Dvorak board
and other latecomers should work better. In practice, though, they might
confuse typists, so here’s a solution. Let us old-fashioned people
QWERTY away. But think about buying machines you can switch over for
people trained on more efficient layouts. A program like Smartkey—which
electronically changes the keyboard—might be the answer if you also
relabel keys on machines used by Dvorak typists. The Apple II(c) even
has a switch on the top of the machine to go from QWERTY to Dvorak. Some
say the Dvorak improvement is dramatic. Waters isn’t so sure. He says
some studies have indicated that the Dvorak board offers as little as a
5 percent increase in speed and little reduction of errors. “So in the
end,” says Waters, “most people in the industry have decided not to
tinker with the key arrangement.”

No matter how they’re arranged, your keys shouldn’t be shiny; a matte
surface is good. So are neutral colors rather than black and white,
except, says Eisen, for function keys. My Kaypro sins. Its keys, like
those on Digital Equipment’s VT100, are a gleaming black, which,
however, doesn’t matter that much to me, since I can control my lighting
and normally don’t look down at the board when I’m typing. (Some other
Kaypros have black matte keys.)

Function keys—the ones that let the operator delete a word or add a
paragraph with a single touch—should ideally be a different color from
the main keyboard’s. The same for number pads. The function keys if
possible should have labels indicating their purpose. If not, a chart
near the function keys might show, for instance, that “P1” “Deletes
Word.”

Some people, however, say that function keys really slow you down, that
they make you take your fingers off the main keyboard. I basically
agree. The same would hold true for the use of Macintosh-style mice.

                       SPECIAL ERGONOMIC FEATURES

A dream VDT tilts. It swivels. It can move up and down on a pedestal. It
helps you avoid back strain, stiff necks, glare, and headaches. It
adjusts, so you don’t have to. A good VDT can help compensate somewhat
if you lack ...

                             Good Furniture

“People will adapt very nicely to automation,” an IBM official once
said, “if their arms are broken, and we’re in the twisting stage now.”

That was in 1975. Since then, however, in a literal way, some computer
makers have been gentler with people’s arms—and wrists and backs.

A variety of good computer furniture exists now, some in walnut, some in
formica. With all the trimmings, you can vary:

1. The heights of the keyboard and of the computer or terminal.

2. How far the keyboard platform protrudes from the platform on which
  the computer rests.

3. The tilt of the computer—a useful glare-reducing feature.

4. The angle at which the screen faces you. You can swivel away to your
  heart’s content to suit your posture or cut back on glare.

5. The height of your chair. You don’t of course need high-tech
  furniture to do that—just common sense. For a computer operator, says
  David Eisen of the Newspaper Guild, a straight-back chair can become
  “a ticket to the orthopedic ward.”

You might also shop for a palm rest and, if you’re short, a leg rest.

An easellike copy holder could help as well.

And so can enough desk surface, shelves, or file cabinets for your
paperwork. Why buy a detachable keyboard if you can’t move it around
because your desk is too cluttered?

Jon Ryburg, an ergonomics expert with the Facility Management Institute,
a Michigan think tank owned by Herman Miller furniture, says computer
gear may take up as much as 40 percent of a desktop. And yet does the
space requirement for paperwork decline by that percentage? Hardly. So
unless you enjoy seeing chairs used as desks, you’d better plan your
furniture well.

Not that all improvisation is bad, especially if you’re a professional
or small businessman working at home. My Kaypro, for instance, rests
atop an old carton from a toy store, and I’ve bought some little gray
legs, the color of the case, to tilt the screen back.

That takes care of my ergonomics. Of course, my requirements in this
case aren’t the same as those of a company with dozens of VDT users.

Joan’s old supervisor at the insurance company might scowl at this
haywire, but so far I’m comfortable. I would be much less casual about
buying furniture for others. For example, I’d make certain that the
chairs and tables would be not just adjustable but easily so—and
understandably so. Even an IBM salesman couldn’t puzzle out all the ways
to adjust the ergonomic furniture on which a Displaywriter sat. Despite
such a flaw, however, special computer furniture isn’t just a frill. An
ergonomic desk and chair might cost several hundred dollars more than an
ordinary set—even a lesser-known brand may—but your furniture could be
good for a decade. And just a 5 percent increase in a cleric’s
productivity may pay back the extra investment in less than two years.

At the least, buy an adjustable chair and, ideally, a table of variable
height. “A very short woman,” argues Bob Waters, “may sit with her eyes
almost a foot closer to the floor than a six-foot-two-inch man’s.” The
home-row keys on the keyboard—the row including the letters A, S, D, and
so on—could be twenty-nine or thirty inches above the floor in a
_typical_ case.[43] Other measurements? Upper screen-eye distance: 17¼
to 19¾ inches. Center of the screen: 10-20 degrees below the horizontal
plane of the operator’s eyes. Angle between upper and lower arms:
between 80 and 120 degrees. Wrist angle: 10 degrees or less. The
keyboard is at or below elbow height, and the table allows enough room
for your legs.

Footnote 43:

  The advice on keyboard height is from Military Standard 1472C, _Human
  Engineering Design Criteria for Military Systems Equipment and
  Facilities_, published by the army in May 1981 and summarized in the
  July 1982 _Popular Computing_.

Your goal, of course, isn’t to make anyone fit the charts showing
average distances. It’s just to keep people productive and comfortable.

Above all, when shopping around to do this, be skeptical. “A lot of
so-called ergonomic things,” says Waters, “aren’t ergonomic at all.” He
grimaces when he sees $300 wooden tables with fixed-level platforms for
computer monitors. They’re an expensive way to strain your neck. “The
normal line of sight for human beings is fifteen degrees below
horizontal,” Waters says. “People normally look slightly down even when
they hold their heads up.” Needless to say, you and your neck will come
out ahead if, using an old Apple II, you don’t set the monitor atop disk
drives resting on the computer. Ignore the ads showing this compact
pile. Their purpose is to sell computers, not save necks.

                                Lighting

Bright fluorescents are to computer users’ eyes what a _drip, drip,
drip_, is to the foreheads of Chinese water-torture victims.

They’re rude, persistent distractions.

And as with the water torture, the fluorescents’ victims may be captives
of sorts. How many people can dictate the lighting in their companies’
offices? Many. But not all. So the letters and numbers on their screens,
the facts they need to do their jobs, may compete with the glare beamed
off the glass.

What’s more, the culprit needn’t be just the fluorescents that light so
many American offices.

“The window with sunshine streaming in may still be a psychologically
gratifying link with the outside world,” says Eisen, “but it spells
plain eyestrain and perhaps headache for every VDT operator within range
of the glare.” Even brightly painted walls can sin here.

So can glossy paper. In fact, _any_ paper is bad in one over-powering
way. The proper lighting level for paperwork is much higher than for
computer work. And yet most computer operators have yet to see the
much-touted paperless office. How do you keep eyes comfortable with both
paper and computer screens?

Here are some _possible_ solutions to the lighting problem:

1. Removing half the tubes from existing fluorescent fixtures. You’ll
  want, however, to make certain that some areas of the room aren’t
  still overlit while others are light starved. Be skeptical. This is
  the miser’s solution. If you can get away with it, fine. But don’t
  count on it. Remember, the women at the insurance company in New York
  say they still suffered glare afterward.

2. Parabolic fluorescent fixtures with baffles to keep the light out of
  the places where it can cause glare.

3. Parawedge louvers, which, according to Eisen, “have been particularly
  effective on a number of newspapers.” Small plastic cells turn light
  downward, so that, ideally, you can barely notice it at desks just a
  few feet from the one you’re illuminating. “Light should be cut off,”
  Eisen suggests, “outside a line emanating at a forty-five-degree angle
  from the fixture.”

4. Desk and floor lamps. You might buy rheostats you can plug in between
  them and the outlet to adjust the light level. And be careful
  otherwise. Shield your lamps so they don’t glare off nearby computer
  screens. Properly used, however, they could be a godsend for people
  doing both computer work and paperwork.

5. Indirect lighting. The disadvantage is the expense. You may have to
  repaint walls and ceilings and pay for a consultant to select the
  right tones. Moreover, indirect lighting may be hard to install in
  rooms with ceilings lower than nine feet. Used well, however, this is
  one of the best solutions.

As a general rule, think about a lighting level between 300 and 500
=lux=—between 32 and 53 =footcandles=. A lux tells how much light is
hitting a certain area, and 9.5 lux would equal 1 footcandle. For rough
measurements you might borrow a good lightmeter from a photographer.
Don’t aim directly at the light. Sample, instead, desk and computer
surfaces, among others, though not the screens themselves. For more
detailed measurements and advice, hire a consultant or call your state
labor department. Make certain you‘re in touch with the consulting
rather than the enforcement branch. Yes, any contact with officialdom
has its risks. But they’re low here. And you’re strengthening your hand
in labor relations by documenting your concern for your workers’ eyes.

In fact, before you place your order for lighting, ask if your supplier
can run a test in your office. Or can you at least visit offices using
the product?

Also, all along, worry about glare as well as lighting levels. You might
try the mirror test suggested by a veteran ergonomics expert. Place a
mirror over the face of a computer screen. Then you can see where the
glare is coming from—which window, which lamp; for all you know, the
source could be a brightly colored painting or a glassed-in print.

Try to rid your office of glare instead of using a filter. “I believe in
avoiding a broken arm rather than putting a splint on it afterward,”
says Harry Snyder. If you need a filter, however, here are
possibilities:

1. Coatings or etching applied during manufacture of the video displays.
  They needn’t harm the viewing quality noticeably.

2. Coatings put on after manufacture. Generally, but not always, they
  don’t work out.

3. “Colored plastic panels and etched faceplates,” which, says Eisen,
  “have such damaging effect on brightness and clarity of the characters
  that they should be avoided.”

4. Micromesh filters, favored by German ergonomists. Eisen says U.S.
  opinion of them “is mixed. They do a good job of reducing reflections,
  but the mesh makes for a restricted viewing angle, absorbs some of the
  light from the display, and scatters some of the rest, degrading the
  image.”

5. Polarizing filters. They may reduce brightness and shorten tube life,
  since you must crank up the tube to compensate; at $100 or more, they
  are more expensive than the other add-ons. But they give you a better
  image than other filters. The contrast especially can be impressive.

                            Noise Reduction

Don’t just buy the fastest, the cheapest, printer. Look for one with
good manners toward the humans nearby—a _quiet_ printer.

A daisy wheel can be a real offender. What more can you expect of a
machine with a metal hammer constantly striking away? And dot-matrix
printers often make a higher-pitched sound that mercilessly cuts through
walls.

So ask your printer supplier for noise figures if you think this will be
a problem. Military standards say that for work needing heavy
concentration—in areas like libraries and conference rooms—the sound
level must be no more than 45 decibels on the dB(A) scale, which allows
for sensitivity of the ear at various sound pitches. Otherwise, aim for
a level less than 65 decibels. You may be able to rent the necessary
meter from a scientific instrument store. Measure the sound from the
distance someone’s head would be when he was working. Here again, you
might ask the supplier for a look-see at an existing installation.

Put your printers if necessary inside padded wooden boxes; carpet; drape
walls; install sound-muffling panels on ceilings and walls, perhaps.

The less echoey and factorylike your office is, the more productive it
will be.

                Air Conditioning, Heat, And Ventilation

Around the first week of January 1983, when _Time_ honored the computer
as the “Machine of the Year,” a Commerce Department computer
ungratefully stopped working and delayed the release of an important
government report.

The reported cause was nothing more than a dehumidifier motor out of
whack; perhaps the room got too moist for the computer sensor.

If so, I wasn’t surprised. Computers and related machinery can sometimes
be quirky about their surroundings. My old Anderson Jacobson daisywheel
printer, later sold, wouldn’t run unless the room temperature was above
fifty degrees. Since I was comfortable at seventy degrees, I obliged the
AJ.

In our attentiveness to machinery, however, let’s not forget the people
nearby.

“You can see the heat wafting out the backs of our VDTs,” said a woman
with the northeastern insurance office—and yet the firm didn’t turn up
the air conditioning. “What might happen,” said Waters about a hot
insurance office, “is the [overheated computers] may go down and they’ll
pay out extra money, anyway.”

Look inside a VDT and you’ll very likely find an orange glow in the neck
of the tube. The heat there may be no more than a light bulb’s, but on a
hot day, with more than one machine in the same room, you’ll want your
air conditioning to be up to the job.

At the same time, having a room too cool—even in just a few places—can
harm productivity. An employee in the insurance office said her
coworkers, when not using the terminals, sometimes wore gloves.

As for bad ventilation, it, too, can jinx production and add to sick
leave, and in recent years, especially, it’s been a problem, as
companies tightened up their buildings to save energy. People in
high-paced jobs or those requiring concentration may suffer the most.

                            Healthy Honesty

When Laura Moore was pregnant, she neither smoked nor drank—not even
coffee.

She did, however, operate a computer terminal for a telephone company in
Renton, Washington, near Seattle, and she was one of three VDT operators
there with problem pregnancies within a year and one-half.[44]

Footnote 44:

  The facts of the Renton, Washington case come from Laurie Garrett’s
  National Public Radio interview with Laura Moore, which aired August
  12, 1982.

Laura Moore, after nineteen hours of labor, gave birth to a son with a
birth defect called spina bifida. “We didn’t see it at first,” she said.
“We saw a larger head and a foot that was a little odd and distorted.
But when the nurse picked him up, then we saw this huge opening in his
back, which is a spina bifida.” Laura was “devastated. Just devastated.
We—I went through a severe depression afterward.”

Moore is just one of many people worried about VDTs. In Massachusetts a
pregnant journalist, fearing radiation, wore a leaded apron. (A leaded
apron’s weight on the mother might itself harm an unborn child.) At the
_New York Times_ two young editors developed cataracts and filed for
workers compensation, blaming their computer screens.

“We’ve heard of cases of everything from bad dreams of computers chasing
people to psychic distress where people have attacks of depression,”
says Michael Smith, the ex-NIOSH man. “But it can’t be linked
specifically to the VDT.” And yet NIOSH as of this writing was
continuing safety studies. “We might find that it has nothing to do with
the video tubes,” Smith says of problem pregnancies among terminal
operators. “It could be part of the circuitry.... It may be from job
stress.” Meanwhile, proven problems—like eyestrain—bedevil men and women
on the tube. When 1,236 secretaries and word processing-operators
replied to a survey done for a major disk-maker, almost 70 percent
worried about potential health complication. Some 63 percent told of
eyestrain, and 36 percent reported backaches. Almost 80 percent wanted
better lighting and more time to rest their eyes.

So, regardless of how your equipment supplier vouches for your
computers’ safety, keep two facts in mind:

1. There is a possibility, extra-slim, but still there, that
  low-frequency radiation from computers can seriously threaten the
  health of workers like Laura Moore and their unborn children.

2. More minor physical and mental problems from computers definitely do
  exist. You and your people, however, can either overcome them or at
  least live with them. Don’t shrug the problems off. If you do, you’ll
  only ruin your credibility when you and your employees discuss
  radiation and other possible hazards.

Most people, however, accept the inevitability of computerization.
Employees usually know you need your machines to keep up with your
competitors. So do unions. They have computers of their own. The major
labor-management issues aren’t over whether to computerize: they’re over
how to be safe and humane about it.

And often, by agreeing to requests like those for eye examinations,
you’ll be helping your company along with the workers.

Here is a summary of expert thinking about actual and possible health
threats of computers:

                               RADIATION

Could low-frequency radiation from VDTs indeed endanger the unborn? Or
might it cause cataracts? And what about x-rays?

A computer user sits much closer to the screen than most TV-watchers do;
might this increase the danger? After all, a typical computer, like a
TV, uses a cathode ray tube with a high-voltage charge. An electron gun
fires these subatomic particles toward the phosphor coating on your
screen. Toward you, in other words. Wouldn’t x-rays created by this
process be dangerous?

Well, throw away your $50 lead-impregnated acrylic shield! Experts feel
that x-ray are a nonissue here.

The x-rays aren’t strong enough; besides, there’s too much leaded glass
in the computer screen itself for you to suffer harm. I’d worry more
about the chemicals in my typewriter cleaning fluid than about x-rays
from my green screen.

Then again, some respected scientists _wonder_ about low-frequency
radiation given off by computer monitors. Until researchers can absolve
computers of blame in cases like Laura Moore’s, the VDT safety issue
will remain legitimate.

“The wild cards in the VDT debate are the eleven clusters of problem
pregnancies and miscarriages among women who work on or nearby VDTs,”
says Louis Slesin, editor of _Microwave News_ and publisher of the
sister publication _VDT News_.[45] Some computer industry spokesmen and
federal officials think the clusters show up by chance. Slesin, however,
while noting that the “normal” miscarriage rate in the U.S. is almost 20
percent, says: “The incidence of birth defects is harder to account
for.” And he says similar clusters haven’t popped up among women tapping
away on typewriters.

Footnote 45:

  The Slesin quotes come from his article in _Columbia Journalism
  Review_, November 1984. The _Review_ correctly says Slesin’s
  newsletter “has taken no sides in the VDT story while keeping up with
  all relevant developments.” It appears monthly. The _Microwave News_’s
  address is P.O. Box 1799, Grand Central Station, New York, N.Y. 10163.
  Subscriptions are $200 a year. _VDT News_, a bimonthly, costs $42 a
  year.

These clusters—found in widely scattered offices in the U.S. and
Canada—may result from causes other than radiation. Some VDT operators
feel less in control of their jobs than do traditional typists; and a
remote possibility exists that this additional stress could take its
toll on the unborn children. Slesin says fear of VDTs may itself
increase the stress—a Catch-22 if ever one existed.

Seeking a definitive answer on the birth-defect and miscarriage
questions, NIOSH in 1984 was planning a study of about 5,000 pregnancies
in a two-year period. Perhaps one-half of the women would use terminals.
And the study would tell if they had more miscarriages and children with
birth defects than did the other mothers. It would not pinpoint the
cause, however—justification for further study.

A possible culprit here is =very low frequency= (=VLF=) =radiation= from
the flyback transformer.

The transformer whips the cathode ray tube’s electron beams from one
side to the other of the phosphor-coated screen, then back again.
Typically a flyback transformer gives off radiation pulses at the rate
of about 16,000 cycles a second, far below the AM radio broadcast
band—hence, the term VLF. Could pulses at this frequency have biological
effects?

We don’t know about VLF. But a Spanish scientist named Jose Delgado says
even very weak pulses of =extremely low-frequency radiation= (=ELF=),
the term for below 300 cycles a second, have damaged chick embryos. Some
authorities question the “Delgado effect”; still, scientists in both the
U.S. and Europe are undertaking similar experiments. Trying to gauge the
possible risks from ELF, researchers may face certain technical
complexities. Some scientists talk about “windows” of power and
frequency. Just a slightly lower or higher frequency, for instance,
might mean the difference between safety and danger for expectant
mothers.

Like it or not, the jury is still out on the low frequency issue, and
some companies may want to protect themselves legally—just in case—by
transferring pregnant women from VDTs. Ideally you’d coordinate this
policy with those regarding maternity leaves and other health benefits;
then a woman would feel free to tell you immediately about her pregnancy
instead of disguising it for as long as possible.

Even if radio frequency radiation is a culprit, there is some hope.
Slesin notes that the flyback transformer is on the side or back of a
computer monitor rather than in the front near the operator. That isn’t
the best news for someone sitting near the flyback transformer of a
coworker’s machine, but perhaps the VLF threat isn’t so great to someone
without any other VDTs nearby. “With the right office layout,” says Mark
Pinsky, editor of _VDT News_, “you might be able to greatly reduce
exposure to VLFs fields. And obviously the risk to home computer users
might be less without another machine around.”

Although VDTs have yet to be proven free of radiation risks, please note
that groups like 9 to 5 and the Newspaper Guild have been using at least
a few computers in their offices for several years. Don’t lie to your
people that there’s nothing to worry about; do point out that the risks
are low enough to justify computerization’s benefits.

“Can computer screens cause cataracts?” some employees might also ask.

Probably not. A NIOSH study at the Baltimore _Sun_ found no greater
number of cataracts among VDT users than nonusers (although the
researchers noted that the employees on VDTs averaged less than four
years at the tube—perhaps not long enough to suffer the cataracts).

To be sure, strong microwave radiation indeed can lead to cataracts. But
VDTs don’t give off microwaves, and no one has suggested that ELF and
VLF are responsible for cataracts. Maybe there are other causes.
Regardless, a certain percentage of people, some in their 30s or even
late 20s, will always develop cataracts—whether or not they work in
front of a tube.

                       BACK AND MUSCULAR PROBLEMS

They _are_ common—because, as mentioned earlier, some terminals force
you to choose between the best hand-keyboard distance and the optimal
eye-screen one.

_And for the most part, the pains are avoidable._

Etienne Grandjean tells of a study in which 11 percent of fifty-three
people on data-entry terminals suffered neck problems; 15 percent,
shoulder troubles; 15 percent, problems in their right arms; and 6
percent, problems in their right hands. The study also included
fifty-five people in traditional office work. No more than 1 percent
suffered neck, shoulder, or right arm pains, and none had problems with
the right hand. Olov Ostberg and Ewa Gunnarsson, two other European
ergonomics experts, likewise documented the frequent muscular pains from
computer-related jobs. They found that almost two-thirds of some fairly
young clerks with a Scandinavian airline reported such problems. In the
United States, NIOSH, in its 1981 report, also said terminal users
endured more muscular and skeletal pain.

The outrage is that it’s unnecessary, almost always, now that ergonomic
furniture and detachable keyboards are on the market.

Don’t blame your people for their pain. Buy truly ergonomic products.

And don’t just buy for male executives or female typists, especially in
this age when more women are working.

                        PSYCHOLOGICAL COMPLAINTS

NIOSH’s 1981 report observed that VDT operators showed dramatically more
anxiety and depression than people not on the tubes. The researchers
qualified their finding, however. They noted that many terminal
operators were in jobs more routine than those of the non-VDT people,
increasing psychological problems.

Could the machines themselves, however, have made some work more
routine?

For me computers mean less typing and more writing. For a data-entry
clerk, however, they may mean becoming part of what Grandjean calls “a
man-machine-system.” Not all workers object. Some, as Grandjean says,
“are proud to be included in the new work of modern technology.” But
most people would still favor the human touch, with or without a
computer. “The computer,” it’s been said, “is the ultimate unsupportive
boss.” A Cleveland office worker observed that another woman was “fast
as the wind” on a computer keyboard after ten years at it. “But,” said
the worker, “it’s really affected her personality. I used to wonder if
something was wrong—she had no exuberance. Once she said to me, ‘Rose,
as soon as I sit down at that machine in the morning, I feel I’m going
to cry.’”[46]

Footnote 46:

  The quote from the Cleveland office worker and from the two examples
  immediately after it come from _Warning: Health Hazards for Office
  Workers_, published in 1981 by the Working Women Education Fund, 1224
  Huron Rd., Cleveland, Ohio 44115.

“You know,” said a worker at an accounting firm, “when the boss brings
new clients through the office to show them around, he’ll point right to
me working at the word processor and say, ‘Here we have our wonderful
new LEXITRON,’ and then move right on. He doesn’t bother to introduce
me—just the machine!” Mightn’t he also have bragged about the operator?
Can you dismiss her as a whiner? Is it any surprise that on most days
the woman and two colleagues suffered headaches, shaky hands, jittery
stomachs? “The place looks gorgeous,” said a worker, “and that’s where
the management’s priorities lie. They’re not really as interested in
efficiency as they are in using people up and pushing them out the back
door.”

According to Grandjean, psychological reactions to computers will differ
depending on:

▪ The type of work.
▪ The way the job is organized.
▪ The way it is introduced.
▪ Various personal attitudes.

To his list I would add “Surroundings.” A newspaper installed dark blue
panels, six feet high, around some VDT operators. The dark blue may have
cut down the glare, but at a cost. “All we see is the walls around us,”
lamented one, “and sometimes the supervisor. The isolation is terrible.”
Some employees might welcome isolation at times, especially a chance to
work at home; but here management seems to have unwittingly created
high-tech solitary cells.

                               EYESTRAIN

“I wore glasses before I came in,” said a claims processor with the
northeastern insurance office mentioned earlier, “and now I need a
stronger prescription. And I can’t even read a book anymore. Before I
used to enjoy reading,” she told me, “but now I can barely glance at
newspapers.”

Many computer-ergonomics experts would scoff at the idea that the
woman’s work is blinding her. No one has convincingly shown that the
terminals cause a permanent deterioration in eyesight. There is,
however, some uncertainty. “We don’t know,” said my ophthalmologist when
I asked during an eye examination about long-term effects—and also when
he prescribed new glasses.

Most ergonomics experts would be more reassuring. They would say, for
instance, that, first, people’s eyes weaken naturally as they age, and
you can’t automatically blame the terminals. Second, terminals place
more demands on your eyes than reading does. VDTs, however, don’t
permanently harm eyes, according to a twelve-member panel of the
prestigious National Research Council (NRC) which is connected with the
National Academies of Science and Engineering. The NRC study, released
in 1983, said no evidence existed that VDTs could cause “anatomical or
physiological damage ... to the visual system.” The panel felt that the
VDT controversy should be a productivity issue rather than a health one.
At the very least, however, it’s a comfort one. Harry Snyder, the
Virginia Polytechnic Institute expert, in 1983 said that three-fifths of
VDTs then on sale were not even reasonably comfortable. Just consider,
if nothing else, the resultant productivity losses!

Even if the computer isn’t permanently blinding the northeastern claims
processor, it’s in a sense shortening her life. She has less time for
the reading she loves. Presumably, she would agree with the findings of
a NIOSH-sponsored study of San Francisco clerical workers. Ninety-one
percent of the ones on terminals reportedly complained of eyestrain,
while only 60 percent of the nonterminal users did.

How to reply to such complaints? Follow the lighting and glare
suggestions outlined earlier and consider rest breaks or alternating VDT
and non-VDT tasks. And educate your workers—ideally before you hire
them.

Let them know you’re doing all you can to reduce the risks. “I have a
selfish interest in this, too, you know,” you can tell them once they’re
working for you. “The lousier your eyes get, the more errors you’ll
make. Which hurts _me_.”

Then hand them cards with a good ophthalmologist’s name on it—or perhaps
several possibilities—and say: “Make an appointment. We’ll pay for it.”
Why should a company invest thousands or millions of dollars in computer
maintenance without worrying about other work tools—employees’ eyes?
Have new employees’ eyes checked in these NIOSH-approved ways, among
others, during thorough examinations:

1. Refraction
2. Accommodation
3. Acuity
4. Color vision function
5. Degree of opacity of the lens
6. The possibility of a detached retina

Yearly, the doctor should test for refraction, acuity, and
accommodation.

Make sure your health insurance covers bifocals and other glasses that
your employees wouldn’t need except for your CRT.

                  CRTs: Should They Go Down the Tube?

Yes. Not immediately. But sooner or later. CRTs are harder on the eye
than the better flat screens will eventually be, and although scientists
haven’t proved that CRTs are a radiation threat, the small possibility
remains.

These bulky antiques, however, have been to the computer establishment
what gas guzzlers were to Detroit. The CRT isn’t the most promising kind
of computer screen—just the most entrenched.[47]

Footnote 47:

  Information on flat-screen displays comes from _InfoWorld_, May 7,
  1984, and other micro magazine articles; the _Washington Post_ of
  April 29, 1984; George Weiss, director of computer systems studies
  with Quantum Science Corp., New York; and Kenneth Bosomworth,
  president of International Resource Development, Inc., a
  market-research firm in Norwalk, Conn.

Admittedly, CRTs have improved to the point where some pocket-sized TVs
can use them. But in compactness and low-power consumption, CRTs will
never rival the flat-screen displays.

“People will begin using flat-screen portables as regular desktops,” a
New York researcher correctly says.[48] Flat-screen computers may not be
as viewable now as the best CRT displays, but this may quickly change.
What’s more, flat-screen machines don’t hog desks as the Kaypro II-style
portables can. After all, the flat screens are essentially—flat. They
don’t need hefty transformers, moreover, and don’t burn out like old
vacuum tubes. CRTs _are_ vacuum tubes. Low voltage is still another plus
of most flat screens. Not that CRTs are normally a shock hazard, but
you’ll presumably feel safer if you didn’t sit near a 20,000-volt gizmo
flinging electrons around inside some glass.

Footnote 48:

  The “people will begin using” quote is from a Weiss interview with
  _USA Today_.

Also, as David LaGrande, an official with the Communications Workers of
America notes, flat screens may “eliminate the radiation danger, reduce
the risks for pregnant women.” And unless you spray a flat display with
radioactive material, it just won’t give you cancer.

Again, no one’s proved that CRTs will turn people’s bodies into tumor
farms. But why gamble? Your caution won’t hurt labor relations.

Flat screens, also, don’t flicker tiresomely as many CRTs do, and
someday they may boast more fully formed images than those from the
CRTs. So you might make fewer errors reading material from the screen.

The word “might” is important. Many =liquid-crystal displays=—=LCD=s,
like the wristwatch kind—showed much cruder images in 1984 than did
typical CRTs. The broken-up letters might bother you just like those
from the cheap dot-matrix printers.

Also, some LCDs offered horrid contrast between the screen background
and your typing.

That was as of late 1984. Even cheap LCDs in the future could do away
with the breakup and contrast problems. Already the Japanese are selling
color TVs with LCDs.

Perfected, LCDs could make computerized offices brighter and cheerier.
They don’t glow. Rather, they reflect light, just like paper, so you
needn’t darken the office. In fact, light helps.[49]

Footnote 49:

  For a reminder of the advantages of LCDs in avoiding a dark office,
  I’m grateful to Bert Vorchheimer, a corporate communications
  specialist, who, as a sideline, wrote some farsighted articles on
  office ergonomics.

And if LCDs don’t fully pan out? There’s yet another
choice—=electropheretic= screens, which may offer decent contrast and
even beat CRTs’ sharpness. Here’s the theory. A magnetic charge pushes
tiny particles to the surface of the screens, and patterns of particles
form images.

These gizmos will tax your battery less than some other flat-screen
displays do. And listen to this: when you turn an electropheretic off,
it _remembers_. The images on your screen don’t vanish.

Now, combine that wrinkle with memory chips that use next to no power
and can be running all the time. And what do you have? A computer that
will automatically shut off without harm if you didn’t tap a key after a
certain stretch of time. Just like a calculator. So—battery makers,
beware!

There are still other alternatives to CRTs. One is the
=electroluminescent= screen—used on the Grid Compass portable—which
glows and is sharper than the LCD. Electroluminescents in 1984, however,
were far too expensive for the average computer buyer; the Grid was
selling for $4,250, and much of that was the cost of the display. A
second failing of electroluminescent screens is that they’re electricity
hungry. You can’t operate them with miniature batteries.

Another LCD alternative is the =plasma panel=, which glows with a gas
mixture consisting mainly of neon. Plasmas don’t flicker. The characters
are sharp; the contrast, excellent. But backup circuitry has been
expensive; and even small plasmas, with the accompanying electronics,
cost several thousand dollars in 1984—a far cry from a $150 CRT monitor.

To sum up, the main advantages of flat screens are their lightness, low
power consumption in most cases, safety, lack of flicker, and very
likely a better view in the long run. As of late 1984 the trade-offs (at
least in the case of LCDs) were:

▪ The broken-up, somewhat fuzzy letters and the low contrast between
  them and the background.

▪ The need to have the display at just the right angle from you to get
  the sharpest picture. This could get in the way if you were moving the
  LCD to reduce glare.

▪ The comparatively slow speed with which letters or numbers appeared on
  an LCD after you’ve typed.

▪ The general lack of full-sized 24-line screens with 80 columns. The
  Data General portable debuted with 24 lines and a screen measuring 11
  inches diagonally—a welcome exception, even if the quality of the
  characters still wasn’t good enough for heavy use.

Since many flat screens were on portables, there were other ergonomic
problems not related to the display technology per se. In late 1984,
most flat-screen portables lacked detachable keyboards. But the
limitations of LCDs were the main problems.

A reporter friend, banging out stories for his paper at times in the
field, told me he’s survived the 40-column, 8-line screen of the Radio
Shack Model 100 very well. But I’m not surprised. He’s also brooked that
clunky Select software, which gets in the way of corrections and
insertions. Gene, you see, apparently knows what he’s going to write—he
needn’t watch the screen as much. I wish I were as decisive. At any
rate, what was right for Gene wouldn’t necessarily be right for a clerk
who’ll be at the keyboard seven or eight hours a day.

No matter what hardware and software you end up with, don’t lose sight
of three goals, among others:

  1. Getting the most work out of your people
  2. Keeping them happy
  3. Guarding your electronic files

Sometimes, alas, the easiest-to-use computers may be the ones most
vulnerable to computer crime and loss of important information—the
subjects of the next chapter.

Backups:

◼ IX, Window Shopping, page 343.

◼ X, Of Mice and Men—and Touch Pads, Touch Screens Etc., page 346.




                         10 ❑ Jewels that Blip


The words have a nasty metallic ring, as if to suggest helmeted
policemen with black jackets and billy clubs. Watch out: the “data
security” troopers are at the front door.

But a small business on the East Coast nowadays wishes it had enjoyed
more “data security.”

A fire melted its computer disks into plastic globs. The firm just
missed bankruptcy after losing several hundred thousand dollars’ worth
of information—everything from accounts receivable to tax records.
Scrambling to recover, salesmen leaned on customers for copies of old
bills.

Arson? Maybe. A disgruntled worker _may_ have short-circuited some
tangled wiring. Proof never came.

Either way, however, the incident was a powerful argument for “data
security”—the right kind.

It’s nothing more than trying to make sure that your computer and its
information are safe. This isn’t to advocate overkill. Don’t overprotect
nonsecrets or facts that you can easily duplicate; for instance, instead
of buying costly fireproof cabinets, you might simply keep backup disks
at another location—perhaps a more secure approach, anyway.

Why, however, do I say “trying” to make your computer and its
information “safe”? An ex-hacker, Ian (“Captain Zap”) Murphy, now a
computer security consultant, wisely observes: “You’re safe from average
crooks—they don’t envision a nice, mild-mannered human being working at
anything more than a souped-up typewriter. But you can never, never be
able to 100 percent secure a computer system. Even the most trusted user
could say, ‘F— the damn payroll,’ and destroy your records.”

But in the best of all worlds, your electronic files are safe, accurate,
and if need be, tamperproof and confidential. The equipment is sound.
And so are you and others working with it. You’ve shown good judgment.
You’re ideally safe not only from crooks but also your own blunders. You
know you often can’t keep paper copies of all your electronic jewels,
your treasured business files, at least not without giving up the
conveniences of computerization. You have faith, then, that your green
screen, at your command, will display the right blips. I’m stretching
the meaning of the word “blips” to emphasize the transitory nature of
what you see on the screen. Without your stashing it away on a disk or
otherwise—and without your making an electronic backup—it may be lost
forever.

The unlucky owner of the East Coast company will never see his blips
again because he violated a major precept of data security. He stored
his original disks and his copies in the same room—the one with the
fire.

“The remark at all times in cases like this is ‘Why didn’t the dealer
tell me?‘” says Harold Joseph Highland, a top computer crime consultant
and author of _Protect Your Microcomputer System_ (John Wiley & Sons,
1984).

A store can only sell you a computer, not common sense. Nor can this
chapter impart it to you. It can, however, pound away at the elements of
data security—people, policies, hardware, and software. They go
together, these four. And so do the criminal and noncriminal parts of
data security. If you’ve lost control of your computer files and don’t
know what’s normal, you’ll hardly notice the abnormal. You’ll never
thwart a computerized embezzler, for instance, with a gun. You will with
good software. Buy it and errors in your electronic files may leap out
at you. May. Remember Canyes’s Law of Computing: “Sooner or later you’ll
feel like killing yourself.”

In other places I’ve written about good software and other mundane ways
to make yourself less suicidal. And here, too, you’ll read of everyday
calamities like coffee spilled on floppy disks. But this is also the fun
chapter, the one with the stories about errant whiz kids and a computer
crook who supposedly stole $8 million and got away with it.

Each of their sins met Harold Joseph Highland’s definition of a
computer-related crime. They were “committed using a computer as a
tool.”

“In other words,” explains Highland, who has taught computer science at
the State University of New York, “you use the computer to get to
financial records. Or to get to software if you’re illegally copying
software.”

Estimates of the size of the threat have ranged from the double-digit
millions up to over $5 billion a year. This uncertainty has sparked a
feud between the icebergers and some computer makers.

Highland is an iceberger. He says that reported computer-related crimes
are “just the tip of the iceberg,” that the annual loot is at least $750
million and more likely reaches the billions. Another expert wrote a
crime article livened up with a drawing of the _Titanic_. Meanwhile, the
Computer and Business Equipment Manufacturers Association pooh-poohs all
but the more conservative estimates. “Computer crime is not now, never
has been, and never will be out of control,” an association official
once said, “unless security is completely ignored. And that is not going
to happen.”

“If that’s your opinion, sir,” counters Captain Zap, the computer felon
now working as a security consultant, “why are fourteen-year-olds
getting on defense networks? And what about adult criminals doing their
thing on banks?”

Also, how about computer crimes against small business?

“No one’s going to find out why Joe Blow goes out of business,” says Ken
Churbuck, a New Hampshire lawyer and former computer engineer, who
believes that electronic crime may be the downfall of many more small
businessmen than supposed. “You think Joe Blow can afford an
investigation? You think anyone else wants to autopsy the corpse?”

Large business or small, however, don’t swear off computers and buy
quill pens for your accountants. You may or may not get robbed
electronically, but you’ll very possibly lose money if you cheat
yourself of the benefits of computerization.

Although computer crooks may be difficult quarry at times, at least you
can console yourself that they’re normally _not_ geniuses.

Consider a story from Highland. The law caught up with one
crook—presumably more knowledgeable about computers than banks—after he
asked a teller to cash seven identically dated checks made out to him.
The embezzler had simply learned how to take advantage of a feature in
the check-printing program. It allowed checks to be reprinted in the
event of mistakes; only his stupidity offset this programming error.

“You don’t have to be knowledgeable,” Highland says. “You can be an
absolute idiot and try a computer-related crime.”

Some of the victims, alas, show their own streaks of naïveté. One small
business lost thousands of dollars to a bookkeeper who funneled it to
relatives’ firms via phony invoices. Such crimes happen with or without
computers. But the company begged for trouble here by retaining an
accountant old-fashioned enough to have felt at home alongside Scrooge
and Cratchitt. Computers baffled him but not the embezzler, who knew of
this vulnerability.

Executives at big corporations needn’t be smug about such grass-roots
examples.

Many large companies, for instance, have reduced _the crooks’_ risks in
computerized crime by auditing samples instead of everything—pulling one
hundred checks, perhaps, out of a batch of four thousand. The young man
trying to cash his seven duplicates worked for a large West Coast firm
given to quick and dirty sampling; just tote up the odds of catching him
through an audit if he’d been smart enough to go to different banks.
Ideally, at least, your system should flag quirks like the seven checks.

You can also complicate life for computer crooks by studying classic
cases of the past.

Mostly the criminals sinned with or against large computers. And yet
eternal truths linger on even in the micro-mini age. In fact, some
mainframe cases may mean even more to the desktop crowd today, with so
many small computers hooked up as terminals on large systems. You might
also say giant machines are acquiring plenty of pygmy siblings—joined
Siamese style with them at the brains. And the big and small machines
aren’t just wired together by phone or otherwise. Increasingly,
mainframes are sending electronic copies to micros outside
data-processing departments. What’s more, in power and capabilities, the
pygmies are matching some big IBMs and Univacs of yore.

So whether you’re using a $1,000 Apple or a $100,000 mini, you’ll come
out ahead knowing about the Golden Oldies of computer crime.

Computer consultants, especially Donn Parker, a prominent expert with
the SRI think tank in Menlo Park, California, have labeled various
offenses.[50]

Footnote 50:

  The categories of computer-crime offenses, together with many
  examples, come from Donn Parker’s _Computer Security Management_,
  published in 1981 by Reston Publishing Company, Reston, Virginia.
  Another book for more information is Parker’s _Fighting Computer
  Crime_, published in 1983 by Charles Scribner’s Sons, New York, N.Y.

                             Data Diddling

When a time-keeping clerk hoodwinked a railroad, he committed the most
tried-and-tested computer crime: =data diddling=.

That’s just jargon for fiddling with data before or during entry into
the machine.

The culprit’s duties included filling out time forms for three hundred
employees, and he learned that someone had shown a fit of
absentmindedness in setting up a computer system storing pay and hour
records. The railroad put workers’ names as well as their identification
numbers into the computer. But the machine used only the numbers to
track down names and addresses to print on checks. Manually processing
the forms, however, humans normally ignored the computer numbers. They
actually had the gall to think of the workers just by their names.

Wheels turned in the clerk’s head. Why not sneak in overtime pay by
using other people’s names on the paper forms but _his_ own number for
the myopic computer? And so his income increased by several thousand
dollars each year.[51]

Footnote 51:

  The example of the railroad clerk is from a report Parker coauthored
  for the Justice Department, “Computer Crime: Criminal Justice Resource
  Manual.”

The clerk’s end came only when an auditor by chance looked over W-2
forms and asked why the railroad had been so generous toward the man.
Confronted, the clerk confessed. There’s a moral here: if you have a
timekeeping and payroll system, don’t rely on ID numbers alone. Attach
to them the first few letters of workers’ names. Also, include a
cross-comparison of names and numbers in your auditing procedure.

Today scattered terminals—or micros or minis used as them—make data
diddling as tempting as ever. A police officer in an eastern city told
me criminals had walked into the offices of used-car lots, sneaked in a
few minutes on terminals there, and altered financial records in a
credit bureau’s computer.

Forget about the mystique of computer crime. People have been diddling
credit bureau files for years by changing or deleting paper records.
Machines and lack of paper records in some cases just make their work
easier and faster.

                            The Trojan Horse

A comely woman at a New England firm was the victim of what might
loosely be called a computerized sex crime.

“She would be doing her electronic paperwork,” Tracy Kidder said in
_Soul of a New Machine_, “when suddenly everything would go haywire, all
her labor would be spoiled, and on the screen of her cathode-ray tube
would appear cold, lascivious suggestions.” Someone had electronically
wheeled in a =Trojan horse=—hidden unauthorized instructions in the
computer’s program.

The “sex crime” kept up daily for several weeks, leading an executive to
observe that the villain must have “the mentality of an assassin.” It
was unfair. Young computer whizzes at the company played horse pranks on
each other all the time. But this victim couldn’t strike back.
Gallantly, the woman’s bosses set electronic traps to learn from which
terminal the masher was mashing. The villain, though, was too nimble.
“At one time,” said Kidder, “he made his escape by bringing to an abrupt
halt the entire system on which most of the engineer departments
relied.” Finally, one of the woman’s protectors chatted casually with a
suspect about the computer’s wondrous vulnerabilities to pranks. The
obscenities and glitches stopped.

This Trojan horse was just a prankster’s, but the company may have
squandered thousands of dollars in human and computer time to kill it
off.

Consider, too, the company—Data General, the mini maker that Kidder
admired.

Imagine a serious saboteur wheeling his horse into the computer of a
company without the same knowhow.

It happens. Donn Parker says Trojan horse tricks are “the most common
method in computer-based frauds and sabotage.” A horse, in fact, may
have shown up in the first federally prosecuted computer crime in
Minneapolis in the 1960s. A programmer told an IBM 1404 to drop an
unflattering series of bytes about his personal checking
account—overdrawn.

Trojan horses are more of a mainframe and mini problem than a micro one.
Normally, professional programmers don’t run desktop computers.

But as computer literacy spreads, this might not matter so much, and
besides, unsecured micros make such easy nuts to crack. “They’re
peanuts,” Highland says, “not butternuts.” Most micro systems today lack
electronic console logs—requiring operator ID numbers—that some bigger
computers have to tell who did what on the machines. In other words,
there’s no =audit trail=. John Lewis, an FBI agent teaching a course on
computer crime, told me, “I can write a perfectly error-free payroll
program on a micro, load it in from a disk, and run it. But I modify one
or two lines in there, saying, ‘When you find John Lewis’s name, add
$1,000 to net pay.’” You can even have the program zap the evidence
immediately after the crime. Significantly, too, you can reprogram a
micro in a fraction of the time you’d need on a mainframe.

And in the future the micros, while retaining their ease of programming,
will develop more electronic nooks and crannies in which to hide horses.
And what about the micros already hooked in at times with the big
computers or using down-loaded data from them? If a saboteur or con man
is giving fits to the giant machines, then the pygmy machines may suffer
along.

                            The Salami Trick

You just can’t make sense of your savings account statement. No matter
what you do, it’s a nickel off. You don’t, however, pursue the
matter—not over five cents.

All over your city your fellow depositors are thinking similarly.

A computer crook, meanwhile, is growing rich.

The nickels, dimes, whatever, add up. He works at the bank and has
programmed its computer to round interest downward, for instance, rather
than upward. The sliced-off money goes into a dummy account. From
hundreds of cheated customers, maybe thousands, he’s amassing enough
over the years for a new Buick. He may even have told the computer to
steal prudently and not clip anyone more than twice a year.

It’s the old salami trick, an MO of countless embezzlers inside and
outside the computer world—ranging from pudgy, fat-bottomed drones to
glamour figures in Hollywood and on Wall Street.

An amusing salami tale comes from Thomas Whiteside’s brilliant _New
Yorker_ series on computerized crime. The name “Zwanda” did the crook
in.

Programming for a mail-order sales company, he rounded down
sales-commission accounts and diverted the loot to a dummy account for a
“Zwanda.” The “Z” name made sense. The computer worked alphabetically,
and he could more easily guide the money to the end account.

“The system,” Whiteside says, “worked perfectly for three years, and
then it failed—not because of a logical error on the culprit’s part but
because the company, as a public-relations exercise, decided to single
out the holders of the first and last sales-commission accounts on its
alphabetical list for ceremonial treatment.

“Thus, Zwanda was unmasked, and his creator fired.”

Could Zwandas show up in your company’s microcomputer—not just
mainframes? Perhaps. It’s no less likely than the micro case mentioned
earlier in which the bookkeeper was paying bogus bills from his
relatives’ firms.

Of course, in the case of a micro, the trouble probably will be not in
the way the program is written but in how it’s set. Most micros, after
all, use off-the-shelf software.

                              Superzapping

It’s named after the “superzap” program used on some large IBM
computers.

“Superzap” is known among the pros as a break-glass program, the kind
you use in emergencies to change or divulge the computer’s contents. It
can bypass all security controls. You can also think of =superzapping=
another way. The computer is a high-rise building, and this program is a
master key to all the apartments or offices inside. Pity the building
manager if a thief can counterfeit the key.

Donn Parker, the source of those comparisons, says a New Jersey bank
lost $128,000 to superzaps.

The crook was none other than the bank’s manager of computer operations.
He first superzapped legitimately to change errors in accounts as his
superiors asked. The main program wasn’t working—hence, the
superzapping. The bank was upgrading its computer system, the glitches
kept piling up, and the operations manager zapped again and again,
discovering the joys of ignoring the normal controls. The usual
electronic logs and journals just didn’t show his actions.

So, he decided, why not zap away the barriers to shifting the money to
the accounts of three friends?

The bank learned of the crime only after a customer saw that his own
money wasn’t adding up right.

Superzaps like this, of course, are simply special breeds of Trojan
horses, just as the salami tricks _can_ be. Like the horses, the zaps
aren’t so much a micro crime now. They’re more of a mini and mainframe
one, but watch out for the future when garden-variety crooks are more
learned and micros are more like the bigger computers.

                          The Trap-Door Trick

A =trap door=—or =back door=—normally is just a shortcut into the
program, bypassing the normal security systems, meant as a debugging
aid. Once the writers have a program up and running, they should get rid
of the door. Large programs are so complicated that programmers
sometimes leave the doors in as an emergency way for them to get back in
if the main passwords are lost or the computer “hangs up.” David
Lightman, the teenage hacker in the movie _WarGames_, used the trap-door
ploy to penetrate a Defense Department computer and almost caused a
nuclear Armageddon.

In a real-life example mentioned by Parker, some automobile engineers in
Detroit called up a computer service bureau in Florida, found a trap
door, and could “search uninhibitedly” for privileged passwords.

“They discovered the password of the president of the time-sharing
company and were able to obtain copies of trade-secret computer programs
that they proceeded to use free of charge.”

The electronic thievery didn’t stop until the company found out
accidentally. And it never learned how many other crooks were rummaging
around inside the computer.

Once again, this form of crime isn’t so much a worry for the desktop set
as for those using bigger machines. At least for now.

                             The Logic Bomb

Heard the old joke about the Washington speech writer at odds with his
boss? It’s a favorite story among journalists and other wordsmiths.

The aide was tired of drudge work for a dumb, lazy but electable
congressman who didn’t even read the immortal prose ahead of time.

One day the politician, a square-jawed, movie-actorish man, was
mellifluously speaking on the House floor. As usual, he was fresh to the
material. But his rendition overwhelmed everyone, from the pols to the
pages, to the tourists in the galleries. He _knew_ he was on his way to
the White House.

With actorlike polish he intonated through the third page, including the
last sentence:

“And now, let the words ring out, loud and clear, to all corners of the
earth—to our friends, to our foes, across every ocean, every mountain.
You purblind piece of excrement, I quit, and you’re on your own.”

The fourth page, of course, was blank.

Malicious programmers must nod and wink when they hear the story.

For the speech writer had just the right kind of temperament to hide a
=logic bomb=—a computer glitch that explodes, so to speak, only under
certain conditions.

The conditions in the Washington joke were clear. The congressman
mustn’t read the speech to himself beforehand—something inevitable. He
was dependably lazy. Nor must he understand the speech; no problem,
certainly, for he was dumb about everything all the time. Above all,
however, if this bomb were to “kill,” he must be embarrassable. And
that’s why the bomb in a sense just maimed him—because, like most
politicians, he never blushed.

In a real-life story told by Parker, a payroll programmer hid a bomb to
erase the entire personnel file if he ever got fired—that is, if his own
name ever vanished from it.

                        Simulation and Modeling

A crooked accountant embezzled a million dollars using =simulation=.

On his own computer he set up a mock version of the victim company’s
accounting and general ledger. Then he could figure out how his thefts
would show up on the company’s electronic books—and how to cover up the
crime.

                               Scavenging

A Texan ripped off oil companies through computerized =scavenging=.

He used a computer time-sharing service bureau, the same one as the oil
companies. This thief read scratch tapes—temporary storage tapes without
the safeguards protecting the main ones—by phone off the service’s
computer. He was stealing secret seismic information to sell to the
oilmen’s competitors.

Finally, however, the service bureau caught on.

A worker there had grown curious. Why did a red “read” light glow at
bizarre times? How come the customer was prowling through the tapes
before entering his own data? Parker says a “simple investigation” ended
the electronic scam.

Scavenging can be physical, too—nothing more complicated than rummaging
through old trash barrels for printouts.

                              Data Leakage

“Hidden in the central processors of many computers used in the Vietnam
War,” Parker says, “were miniature radio transmitters capable of
broadcasting the contents of the computers to a remote receiver.

“They were discovered when the computers were returned to the United
States from Vietnam.”

It was a =data-leakage= problem—defined by Parker and other pros as the
removal of data or copies of it from a computer or a computer center.
Culprits can even smuggle out secrets by hiding them in apparently
routine reports. “Data leakage,” he says, “might be conducted through
use of Trojan horse, logic bomb, and scavenging methods.”

You don’t have to be in the Vietcong or KGB, of course, to spy on a
computer by radio. Today a smart snoop can walk casually into your
computer area and leave behind a miniature transmitter—perhaps hooked up
to the maze of wires that snake under the floor of many modern offices.
“I could then find out everything that you were sending for a year,”
says Harold Joseph Highland, “which is the life of the unit I could
transmit with. I could buy it for

9.50 from any of the large supply houses. There’s one more expensive
that will transmit up to five miles away. With the forty-buck one I can
park across from the building and keep a tape recorder going.”

                              Wiretapping

Some say it’s rare in the computer world. The thinking goes, There are
easier ways to steal. Why tap when so often you can just call up your
victim’s computer and be greeted with a friendly electronic whine?

But don’t count on wiretapping not existing.

Your local radio store carries cheap equipment usable for tappers.

And electronic banking and new computer services will grow, making
wiretapping more tempting. A security consultant, J. Michael Nye, opened
an unlocked closet of the second floor of an office building in
Hagerstown, Maryland, and pointed to the telephone wires inside. “See
these?” he asked me. “They’re hooked up to a bank’s computer. If you
wanted to change the amount of money in a deposit, you could attach a
portable computer and no one might be the wiser.”

The wiretapping threat may increase because of the break-up of the Bell
system—as more and more repair people parade in and out of wire closets.

You might be able to get around the threat, or at least reduce it, by
electronically scrambling the messages you transmit over the phone
wires.

For the moment, don’t let fear of wiretapping obsess you unless, say,
you’re routinely transferring millions of dollars via computer.

                     Piggybacking and Impersonation

It’s bone cold outside, the stranger looks harmless, and you let him in
as you unlock the doors of your apartment building one night. The next
day all the old ladies in the lobby are talking about a burglary.

You fret. Rightly. You may have let a criminal succeed in =piggybacking=
his way behind you into the building.

It’s happening, too, in computer rooms, which crooks use similar tricks
to enter.

That’s physical piggybacking. The electronic kind, rare, can happen this
way. You punch in a password or key on your terminal and hook up with
the computer, unaware that the piggybacker has a hidden terminal
connected to the same phone line. Perhaps you haven’t signed off
properly. The computer keeps the connection going, and the piggybacker
“rides” on.

=Impersonation= is what it sounds like, and it can be physical or
electronic.

Leslie D. Ball, a Massachusetts consultant and college professor, once
illustrated computers’ vulnerabilities to such tricks. “Why is it more
difficult to rob a bank of $2,500 than to steal millions from its
computer?” he asked, and quickly answered the question.[52]

Footnote 52:

  All the Ball quotes and paraphrases in this chapter are from
  _Technology Review_.

“During a security consulting project at an Atlantic City hotel,” Ball
said, “I spent the evening with an associate in the casino. At about
eleven p.m. we headed for our rooms, but the elevator stopped where the
computer center was located, and we decided to look around. The door
marked ‘Computer Center—No Admittance’ was locked but had a bell beside
it. A computer operator opened the door when we rang, letting us in
without a word. For the next ten minutes we wandered through the center
without speaking to the operators on duty.” In effect, by acting as if
they belonged in the room, Ball and the associate were impersonating
authorized people. “Finally,” he recalled, “we said, ‘Thank you’ and
left. They were lucky we were not disgruntled heavy losers!”

A real impersonator, an ex-college professor named Stanley Mark Rifkin,
passed himself off as a bank branch manager to steal $10.2 million. He
bought diamonds in Switzerland. The law caught up with him only because,
like many bright, cocky computer crooks, he bragged. That wasn’t all.
“While awaiting trial,” Ball says, “he attempted a fifty-million-dollar
transaction from another bank. When apprehended, Rifkin told a reporter
that he thought he finally had all the bugs worked out.”

Rifkin was just another example of an ordinary man using legally
acquired skills to commit an illegal act.

However smart, and despite his background as a computer science
professor-consultant, he was hardly a _genius_. “Master criminal?” asked
H. Michael Snell, a publisher who’d dealt with him.[53] “I could sooner
imagine a smoking gun in the hands of Winnie the Pooh. In fact, Stan
resembled Pooh Bear: short, stocky, paunchy from too much good food and
wine, a deeply receding hairline above an intelligent, sloping forehead.
Quiet, unassuming, not the kind of guy who’d stand out at a cocktail
party.” Rifkin was good at puzzles, at problem solving, but as Snell and
others agree, that’s true of all talented programmers. You could say the
same, too, of first-rate accountants and engineers. Rifkin’s case made
me think of Hannah Arendt’s phrase about Adolph Eichmann, applied not to
the Nazis but to garden-variety crooks within the computer field: “the
banality of evil.”

Footnote 53:

  The H. Michael Snell quotes are from an article he published in
  _Computerworld_.

Rifkin’s take happened to be larger than most. But his mind-set was the
same.

Snell said, “He shared the dreams of many academics who feel blocked
from great success and wealth, and he loved ‘get-rich-quick’ stories,
such as a friend who struck gold in California real estate or the
Silicon Valley’s overnight millionaires.”

Greed, however, isn’t the only motive. “People who like computers are
games people,” John Lewis, the FBI agent, told me, “and they like
challenges. It’s ‘me against the machine.’ You give them a computer and
say you can do anything but that, and that’s the first thing they’re
going to do. You go back to the Book of Genesis in the Bible where God
said, ‘You can do anything in the Garden of Eden but eat from that
tree,’ and what’s the first thing people did?” We were in a windowless,
fluorescent-lit room at the FBI Academy in Quantico, Virginia, where
Lewis lectured on computer crime. He looked at a fellow instructor, a
tall, alert man who started out in the bureau not as an agent but as a
programmer. “I’ve seen Ken get ahold of material. Like this one program
that said it couldn’t be copied. Now he didn’t care what the program
did. The first thing he did was copy it. Because they said he couldn’t
do it. And he did it.”

I thought of John and Ken three weeks later when I picked up a copy of
_Technology Illustrated_ magazine.

A stranger in Quantico, Virginia, it seemed, was dialing up the
electronic bulletin boards on which computer pranksters sometimes left
messages. The bulletin boards were a form of electronic mail. Callers
could write out their thoughts for friends or anyone checking up on the
highest-numbered entries. The mysterious computer dialer from Quantico,
however, would just read, never send. Aware of the FBI Academy’s
location, one of the pranksters posted a friendly suggestion on a board.

He invited the Quantico caller to subscribe to the TAP newsletter—said
to be “to phone phreaks what the _Wall Street Journal_ is to
stockbrokers.”

TAP stands for a group named the Technology Assistance Program, a
successor to Youth International Party Line (YIPL), whose own radical
pedigree goes back to Abbie Hoffman’s Yippies. “Al Bell” and Hoffman
started YIPL. It was a high-tech display of Hoffman’s _Steal This Book_
philosophy, there being, however, a serious problem, one shared by
society at large. The technocrats usurped the politicians.

They were, reportedly, “more interested in blue boxing Ma Bell than in
pushing politics.” Cheshire Catalyst, who was editing the TAP newsletter
when I talked to him, said, “You don’t have to be a phone phreak to read
us—but it helps.”

Lindsay L. Baird, Jr., a tough, no-nonsense consultant with famous
corporate clients, told me TAP was a serious threat. “They’re now using
micro systems to test the 800 numbers methodically to see which ones
have computers on them,” he said of some TAP people. The corporate
computers whine their strange mating call no matter who dials up, saying
electronically, “I am here, I am a computer, I am ready.” You might say
they’re like an unlocked, unattended BMW left with the motor running in
New York City. And Baird claimed, rightly or not, that TAP has some
political zealots mixed in with the technocrats and that they could
indulge in large-scale computer zapping over the next few years.

The TAPpers’ side was this: they illegally logged on to networks like
Telenet and the feds’ because they couldn’t stand seeing expensive
computer time go unused. “Nobody wants to pool it as a computer utility
and make it available to everyone because it would probably not make a
profit,” groused “A. Ben Dump” in the newsletter. Cheshire portrayed TAP
to _High Technology_ as basically just pranksters, at least in his case.
“Good grief!” Cheshire once ghost-wired to a Telex machine; “I seem to
have reached Adelaide, Australia. This is just a computer hacker in the
United States out for a good time.” The TAPpers said they were against
the Bell bureaucracy, not America at large, and, in fact, censored an
article submitted to their newsletter telling how to build an H-bomb.
“Among other things,” Cheshire worried, “anyone using that technology is
going to take out the phone network.” I still wondered. Would TAP have
printed the article if a way existed to H-bomb the countryside without
toppling any microwave towers?

                            ■      ■      ■

  Hacking: An Addiction to Be “Squelched”?

  With _WarGames_-style break-ins in mind, someone once called hacking
  an addiction to be squelched.

  That’s wrong. Hacking is more an addiction to be tamed.

  The term “hacking,” perhaps born at M.I.T., just means someone who
  hacks away at computer problems until he solves them. Many hackers for
  some reason or another love Chinese food. Sooner or later a
  computer-crime expert will link computer addiction to ODing on
  monosodium glutamate.

  Cheshire Catalyst is a prototypical hacker in many ways. He’s a thin,
  bearded man in his twenties, extrapolite, who, when I saw him, was in
  Washington for an aeronautics and space gathering and wore a Space
  Shuttle tie and an Apple pin. His nickname indeed came from the
  grinning, vanishing cat in _Alice’s Adventures in Wonderland_. Proudly
  he told me how his clock ran counterclockwise. Cheshire said he hoped
  someday to meet another backward-clock buff, Grace Hopper, a
  distinguished military officer who helped give the world the COBOL
  computer language.

  Cheshire might find even more of a soulmate in Steve Wozniak, the
  Apple cofounder, who is perhaps one of the world’s leading hackers—in
  addition to having been a phone phreak in his time. “Woz” and a friend
  snooped on computers across America. The friend was John Drapper, a
  bearded, somewhat maniacal-looking man who earned the nickname Cap’n
  Crunch because he used prize whistles from cereal boxes to steal free
  long-distance calls by way of a tone at exactly the right frequency.
  Later, Crunch wrote the EasyWriter word-processing program used on the
  Apple and later the IBM PC.

  On balance Cheshire thinks that hackers do more good than harm. “Let’s
  say you have money in a bank,” he says. “Wouldn’t you rather that a
  hacker get into its computer than a criminal did? He could warn the
  bank. If I had money at a bank, I’d feel safer with hackers checking
  out security.”

  Well, it depends. Some hackers are nothing more than electronic
  vandals. Some are a privacy threat; they’re doing the equivalent of
  spying on mail and tapping phones.

  Still, talented hackers may become real assets to corporations.
  They’ll care infinitely more about your computer system—and all its
  quirks—than will programmers working nine to five for the money alone.
  Just a little oversimplistically it’s been said that you can befriend
  a hacker merely by supplying a computer with enough RAM,
  encouragement, a long leash, and lots of chow mein.

                            ■      ■      ■

The TAPpers, depending on your viewpoint, came across in _Technology_ as
reassuringly or distressingly middle class. Cheshire at the time of the
article was teaching computer skills at a large corporation.
“VAX-man”[54] worked as a computer programmer, “The Librarian” as a
systems analyst, and another was, of all things, a middle manager for a
defense contractor; indeed, every member reportedly boasted a technical
background. Most, I suspect, perhaps nearly all, didn’t see themselves
as criminals.

Footnote 54:

  Presumably VAX-man chose his name with both the VAX minicomputer
  series and the Pac-Man game in mind.

“We’re just an information service for the people,” said one.

Well, okay. Maybe it’s good that if G-men want to bone up on the latest
electronic tricks, they need only log on to hackers’ bulletin boards and
read the TAP newsletter. Still, how many crooks have the same idea?

TAP’s another indication that for the criminally greedy the “data cookie
jar,” as it’s been called, is out there.

Lindsay Baird scoffs at computer trade associations’ efforts to play
down the problem. And he fires back with statistics of his own. “I’ve
worked on thirty-five or forty cases,” he says, “and only one was
reported to authorities.” The loot ranged from $40,000 to $29 million.
And Baird, dismayed that some computer criminals’ sentences are more
shoplifterlike than adequate, jokes, “My wife tells me I ought to commit
a crime.”

“The security problems with computing systems in the 1960s was like a
balloon deflated,” he says, “and you could hold it in your hand. But now
it’s like a huge balloon inflated. Or a big bowl of Jell-O.

“You just can’t handle it now, and the manufacturers have got to be
concerned.”

Of course you should remember that most corporate data are far from
sensitive, that only the most self-important executive would view
everything as a national-security secret. Also, Baird is hardly hurting
his bank account in sounding the computer-crime alarm. Still, he’s
basically right in saying that computer buyers _with sexy data of
interest to thieves_ now may have three choices:

1. Burden programmers and others with electronic versions of heavy
  padlocks.

2. Keep their computer systems easy to use—and vulnerable. (“Then you’re
  going to get raped.”)

3. Compromise. (“You get half raped.”)

Baird doesn’t blame just the manufacturers for some computers’ sievelike
leaks. “Business isn’t willing to pay the price to secure systems,” he
says—a complaint echoed in effect by the Computer and Business Equipment
Manufacturers Association (CBEMA). It acknowledges the present clash
between security and ease of use of computer systems. “If a computer
could be designed with various levels of security as options, computer
security might well be a marketable commodity,” said a statement from
CBEMA to a trade magazine. In recent years there has been much more
research in this area, and when 32-bit micros become the norm, it will
be much easier to beef up security.

When crimes do happen on existing systems, they’re often covered up by
top executives panicky over going to court or jail.

How’d you like to be the chairman of a corporation faced with an ugly
data-security scandal—and the possibility of a stockholders suit? You
needn’t be in the scandal personally. Your stockholders could charge you
with malfeasance, if not misfeasance, for _letting_ it happen. So could
the Securities and Exchange Commission and other feds. When companies
hush up computer crimes, it’s not necessarily for high-minded reasons
such as protecting assets by playing down vulnerability to electronic
crime. Consider Baird’s experiences.

Called to a New England firm to do routine theft prevention, Baird
merrily put himself on the payroll—not to steal but to demonstrate
system weaknesses.

“I also,” he says, “nicked the vice-president for participating in a
$400,000-a-year kickback.”

At another company, an accounting firm did the books at year’s end and
had to make an adjustment of $1.2 million. “Then,” said Baird, “we went
in some more and really did a number on that company. And we came up
with $4.5 million in proven losses. And it all had to do with their
computer system.”

But, you’re wondering, how about that crook who stole $8 million and got
away with it?

The story—perhaps apocryphal but told in the sedate _Smithsonian_
magazine—is that bank officials confronted the thief in a restaurant
over breakfast.

He coolly confessed. If they tried to jail him, why he’d blow the
whistle on the bank’s vulnerable computer system. And it would cost more
than $8 million to fix.

So the bank officials just asked him to step down quietly.

Leaving the table, the crook smiled.

“I’ll keep the eight million,” he said, “but I’ll pick up the tab for
breakfast.”

Definitely, then, Donn Parker was on target when he once called computer
security “first and last a people problem.”

            People and Policies: Working with the Right Ones

Honest, loyal employees are more important than the latest security
gizmos. Use common sense. Beware of the $26,000-a-year programmer who
suddenly acquires a posh home and a sports-car collection. Don’t pry.
But don’t shut your eyes, either.

Start with a sensible hiring policy. Decide on the questions you want to
ask applicants and their references—about the prospective employees’
backgrounds and characters. Then bounce them off your legal department.
The rule of thumb is that you won’t get in trouble if the questions are
related to the job. IBM has said it doesn’t even ask applicants about
their ages or marital statuses. If there aren’t legal obstacles, you
might invest $25 in a credit-bureau check of a keypunch clerk but
perhaps several hundred dollars for a top programmer. Keep in mind the
notorious lack of reliability of many reporting services. Check for
criminal records when hiring for responsible positions. A Maryland
hospital didn’t. It hired a convicted embezzler, a computer operator who
later diddled $40,000 out of the system.

Granted, there are occasions when you might knowingly hire an ex-con to
give him a chance. But ask the normal questions. What’s he done to
justify your trust since his sentencing? What are your risks? How much
could he steal, and how?

Whomever you hire—ex-cons, Harvard grads, or combinations of the
two—know how to respond to the common criminal motives.

Jay BloomBecker, a top computer crime expert, sums up one of the main
motives by quoting the title of a collection of Doonesbury comic strips:
_But the Trust Fund Was Just Sitting There_.

Reduce the temptation. Let your people know there’ll be surprise
audits—and mandatory vacations. A thief busy slicing salami might be
loath to take too much time off, lest his or her replacement catch on to
what’s happening. Likewise, consider rotating duties every few months
and also divvying them. People who write checks with computers, for
example, ideally won’t be the ones approving them; in a small business,
of course, this might not be possible.

The old need-to-know policy, of which the military is so fond, may also
increase the criminals’ risks—by increasing the need for collusion.
This, too, isn’t always possible, and it could boomerang. If employees
aren’t supposed to know what their colleagues are doing, maybe a thief
would actually have less chance of being noticed.

Also, tell people that stealing—even small amounts from a large
company—_will_ hurt. If you can’t prove how it will hurt the corporation
noticeably, then you’d better make a good case that it will hurt them.
Pretend you’re a department store warning the nimble fingered: “All will
be prosecuted.” Well, within bounds. You needn’t fire and prosecute a
thirty-year man because he once used a company micro to calculate his
average golf score.

But do remind your employees of the applicable theft-of-service laws,
larceny ones, and others.

Not that electronic theft is your only problem. Whiteside tells of a
computer-ridden North Carolinian, working for an insurance firm, who
reportedly shot a handgun several times at the hated machine. And Harold
Joseph Highland offers another cautionary tale. Executives at an East
Coast firm fired a crabby woman, then returned the next Monday to find
its floppies sliced apart with a paper cutter. They never proved her
guilt. Regardless, _someone_ moved the blade up and down, costing the
company several hundred thousand dollars in time reentering the paper
versions of the records into the computer. And that doesn’t even include
the orders canceled by customers angry over the delay. In yet another
story, a disgruntled worker short-circuited a terminal by urinating on
it.

“Hire well,” says Jack Bologna, an expert on the “people” side of
computer security, summing up ways to avoid such traumas. “Pay fairly,
praise people for good work, give them opportunities for advancement,
and make them feel comfortable talking over their problems.”

Remember that the line can fuzz between outright sabotage and simple
sloppiness induced by poor morale.

If there’s a disaster and you’re not sure if it’s accidental or
deliberate, however, don’t be too quick to point your finger. You may
find it chopped off with a lawsuit filed by your suspect, perhaps for
less than $1,000, while your firm must spend several times that to
defend itself. Unjustified accusations, also, hurt morale and may even
add to security problems.

And if you do prove theft or sabotage?

Act. Don’t cover up. Rather, cover yourself—legally. Tell your boss what
happened. If you’re mum and someone else reports the crime, your
superior may consider you among the guilty. Also, don’t discount the
possibility that your boss may himself be either guilty or a part of a
cover-up because he fears a stockholders’ suit. You may have no choice
but to report him to _his_ boss. Press for an independent audit
committee if you’re powerful enough and if the size of the crime
justifies one.

Should you fire someone for a computer-related offense, do it artfully.

“If they’re in a critical job position, help them clean out their desk,
collect their ID card and any office keys, and walk them to the door or
to the personnel department,” says Timothy A. Schabeck, who edits
_Corporate and Computer Fraud Digest_ with Jack Bologna. The FBI’s Lewis
says as much.

If you do prefer instant firing, follow Schabeck’s advice to provide
counseling and severance pay. And soften the blow, too, by warning
everyone, when hired, that your axes are quick and sharp.

Mightn’t instant firing, however, be brutal, anyway? Well, it depends on
the amount of damage that a discharged employee could inflict and on how
vindictive you perceive him to be. Ideally, you could minimize the
damage by having backup disks or tapes out of the your victim’s reach.
Also consider how successfully you can keep the fired employee from
returning to your computer—by ruse or otherwise? Is your office
absolutely physically secured? Can you trust guards or janitors working
weekends not to admit a familiar face?

It’s all a part of bridging the gap between policy and practices.

Don’t just wait until a crime to make your staff security conscious.

Too often, warns James A. Schweitzer, a Xerox security expert, people
protect information only if it’s on paper. He says, “There have been a
number of cases where tapes and disks have mysteriously disappeared from
places like desktops.” If need be, designate an employee to make sure
others have locked up right by the end of the day. In less than a
minute, using a floppy disk, a thief may duplicate hundreds of times as
much material as he could on a paper copier.

Worry, too, about your people’s use of _modems_—the gizmos that
transform your computers digital output into a whiny sound for the phone
lines.

Don’t let them routinely keep sensitive material on disks that will play
back to savvy criminals who happen to dial in.

This especially applies to Winchesters. They’re the oxide-coated
aluminum disks that remain in the machine housing them, and they stash
away many times the amount of information on most plastic floppies. Now
imagine the delights awaiting a thief or snoop. Via your auto-answer
modem he could rifle thousands of pages of Winchestered documents. Such
electronic robberies needn’t happen, but until businesses get burned
this way, they will. So if you’re sharing an electronic spreadsheet or
mailing list with your branch office, do so if possible at a prearranged
time during business hours when you know who’s calling. Tell your people
to do the same.

You’ll also need a privacy policy—internal and external. Do you, for
instance, want salary information on a Winchester disk that any of your
company’s computer-users could read? And how about employees’ health
records? Good data security should protect your people as well as your
company. So limit your computerized records to the essential and tell
your executives not to use their home computers to bypass privacy laws.

Worry, too, about an external-privacy policy. Are you respecting the
rights of your customers, including those, who, by computer, may be
transmitting to your company _their_ electronic jewels?

It isn’t just decency you want; it’s also good protection against suits,
whether from people or client companies.

Here again, set a firm policy against your people misusing their
personal micros. Alan F. Westin, a Columbia University professor of
public law and government, correctly warned in _Popular Computing_, “A
financial officer of a bank might store information about the
life-style, habits, sexual preferences and other personal behavior of
large individual borrowers or key corporate executives.” The banker
might do this behind customers’ backs to help decide who was “stable”
enough for loans.

You’ll also need a policy covering employees who use your computers for,
say, maintaining their church’s bingo books. Why not let them? It isn’t
the worst public relations. Some companies even allow their employees to
play games after hours, tapping into company systems from home, and you,
too, might experiment with this, provided it won’t add to your
data-security problems. Better a fringe benefit than a crime.

On the other hand, you’ve got to draw the line somewhere. Can you
estimate how much this extracurricular use of your machines costs in
wear and tear—in, eventually, replacement costs? Feel your employees out
on this one if you’re running a small business or hold sway over a large
one. Would they rather enjoy computer privileges or better health
insurance? You might offer cafeteria-style fringe benefits, with
computer use as one of the options. Employees not selecting this choice
might have to agree to it, anyway, if you discovered them using a
company computer for personal purposes. This problem, of course, may
lessen as the prices of small computers plummet and their capabilities
grow.

Whatever the form of potential crime—theft or otherwise—keep remembering
one of the basics of data security: It should cost neither more money
nor morale than justified.

                         Hardware and Software

Now for advice on finding the _most_ crookproof computers and programs.

Buy a micro with 16- or 32-bit word lengths and RAMs of 256K or more.
Those specifications will let you use more elaborate codes to protect
information. What’s more, they might be less cumbersome than codes on an
8-bit machine. Look, too, for electronic design that lets your computer
establish privilege levels—reachable through passwords. That way, Sally,
the new secretary, can start out getting into the computer only for word
processing. Helen, the payroll clerk, can have access to confidential
salary information but not a top-secret budget that doesn’t give her the
raise she’s been pestering you about. Questions exist about the
effectiveness of passwords and codes, at least when the thieves or
snoops may be sophisticated, but that’s another story. Most experts will
tell you that anything that can be coded can be cracked. The trick is to
make it not worth the criminals’ time and resources. Of course, the best
safeguard is still the simplest: locking up the disks and computer after
you or your people are through.

New minis, by the time you’re reading this, may all be 64 bit or higher.
They adapt to codes—and fancy electronic logs showing the kind of work
done on them—more easily than do micros. And they might justify other
costly security measures. Suppose, for instance, you want to follow the
many government agencies’ examples and pen in the tiny radio waves that
computers emit so that eavesdroppers can’t pick them up with sensitive
receivers. A micro fortified this way might cost perhaps $10,000.
“What’s the sense of doing that for what’s essentially a throwaway
computer?” asks Harold Joseph Highland. The “throwaway,” be assured, is
an exaggeration, but his point comes through.

Of course, don’t forget the disadvantages of minis.

Most machines at the mini level or above need professional programmers,
and that’s bad news if you’re trying to stay in complete charge of your
business.

Also, minis, because of their expense, normally won’t pay for themselves
unless they have at least several terminals.

And the more terminals you have, the more “doors” through which crooks
can “walk.”

Still, you normally shouldn’t let security alone determine if you end up
with a micro or with a mini. Remember the warning earlier in this
chapter that security costs shouldn’t overwhelm you. How often, for
instance, is your information so sensitive that you’re worried about
criminals lurking in the bushes with the elaborate equipment needed to
make sense of the tiny waves your computer emits? Your data might not
even justify use of codes.

I myself haven’t the slightest need for codes, user-privilege levels,
anything other than locking up my disks, since I’m essentially a small
businessman who is the sole operator of a micro.

Even the FBI doesn’t really worry about security on some computers. At
the time I visited the agency’s academy in Virginia, several little
Radio Shack models were purring away there—the same kind you’d buy off
the shelf. The micros’ software had passwords, but some agents could
bypass them, anyway, which wouldn’t be necessary, of course, since, in
this case, the FBI _wants_ the machines to be used.

Before saddling yourself with fancy electronic precautions, do see if a
security service, a good, heavy safe, a locked room, or a burglar alarm
would work instead. And what about simply carrying home some duplicates
of your most important floppies? That possibility will become
increasingly attractive as the disks’ storage capacity increases. This
isn’t to say, however, that you should store Exxon’s major corporate
secrets in a dirty unlocked drawer next to old underwear. But a small
businessman might consider taking his backup disks home.

If you buy a safe for your office’s disks or tapes, think about fire
protection. Check with your fire department. What makes of safes could
be in the middle of the flames without the disks suffering temperatures
of more than 115 degrees Fahrenheit?

Investigating locks and burglar alarms, you’ll learn that your computer
may be able to protect itself. How? Some gadgets can let only
card-carrying employees—your people with magnetic cards—enter a room.
And they can tie into the computer to save you money. The same applies
to burglar alarms. Of course, you might want nothing fancier than a
strong lock bolting your computer to a heavy table. Don’t spend more
than the data are worth to replace.

You might also consider a guard service. The problem is that salaries
add up even for quick nighttime checks.

After a few months or a year, you may be well on your way to having
shelled out the cost of an elaborate electronic security system. Guards
normally would be more appropriate for users of large minis and
mainframes than for desktop types.

One advantage of physical security—most any kind—is that it can protect
the computer equipment itself, not just your electronic files.

You’ve undoubtedly read of theft of computer chips from Silicon Valley
firms. Now be prepared for reports of widespread computer theft,
eventually, as the market grows for both legally bought and fenced
merchandise. With computers shrinking in size, they may well be an even
hotter item for fences than stolen Selectrics. Even Apples several years
ago were too intimidating to a burglar, like the one who stole the
silverware of an acquaintance of mine but passed over his computer. Be
assured, though, that crooks are increasingly computer literate. There’s
even talk of the mob moving into computer crime, raiding government
files, and, presumably, engaging in less challenging illegalities, like
setting up computer-fencing rings.

With computer crooks in the future being smarter and more organized, you
should think hard before depending on simply passwords or codes to
protect you.

First, assume that at least some people may try to unravel your puzzles.
A whole generation of prodigies right now is practicing by copying the
supposedly uncopyable computer games on disks. In effect, notes
Churbuck, the New Hampshire lawyer, each disk provides two puzzles. One
is the original game. The other is the puzzle of figuring out how to
make illicit copies. And at the University of Western Ontario, Prof.
John Carroll surveyed students in two advanced computer courses and
found that one-third had sought free, illegal computer time. It’s been
pointed out that the very best, the very brightest, students have too
many legitimate opportunities—on large systems—to worry about pillaging
small computers. And that may be true. But by the late 1980s or early
1990s, some journeyman criminals may develop among the second-raters.

Second, don’t shrug off a warning from R. E. (Bob) Kukrall, author of
the handbook _Computer Auditing, Security and Controls_: “Cracking a
computer system’s defenses may be about as difficult as doing a hard
Sunday crossword puzzle.” He says that thieves managed in minutes to
call up computer files that were protected by a five-digit code number.
They just programmed the computer itself to try each of 100,000
combinations.

“In effect the speed and capabilities of the computer were used to
violate its own security,” Kukrall said in _TeleSystems Journal_.

                            ■      ■      ■

  How the _National Enquirer_ Gets Some Security along with Bargain
  Communications

  Some _National Enquirer_ reporters send in stories via computers, but
  there’s little danger of rival tabloids spying on the computer
  collecting the articles.

  The reason? There’s no receiving computer, actually—just an
  auto-answer modem rigged up to a dot-matrix that spews out paper
  copies at several hundred words a minute.

  The modem and printer can’t send messages or relay stories elsewhere.
  But who needs that—not when some computer-smart _National Star_
  reporter might give his eye teeth to find out what the competition is
  up to?

  To be sure, the scheme has some problems:

    ● The _Enquirer_ can’t transfer the reporters’ stories to a computer
    there for editing, since they are on plain old paper but not in an
    electronic format. Editors, however, heavily rewrite the original
    stories. Capturing reporters’ key-strokes for the typesetter
    wouldn’t help as much as at an ordinary newspaper.

    ● Theoretically someone could still steal the hard copy (just as he
    or she could sneak off with a floppy disk).

    ● The system isn’t secure against telephone tappers who could
    translate the modem whines.

    Still, the system is dirt-cheap. If knowledgeable, you could
    probably replicate it for less than $500 for the printer and modem.
    And you could send to it with just a $400 lap-sized portable.

    Beyond that, the _Enquirer_’s arrangement may be safer than leaving
    an unprotected computer on the phone to collect unencrypted files.

                            ■      ■      ■

Then there’s the Dalton school case in New York City in which the four
culprits, age thirteen, violated silicon sanctity hundreds of miles
away. The feds caught up with them before they could steal Pepsi Cola,
by coaxing an order out of a warehouse. But another computer didn’t fare
so well. The thirteen-year-olds destroyed more than one-fifth of the 50
million bits in the machine’s memory, inspiring a magazine writer to
call them “electronic Huns.”

More recently, the 414 Gang out of Milwaukee—named after their telephone
area code—broke into computers across the country. These half-dozen or
so high school students, tapping on home micros, broke into more than
sixty computers and among other things they:

▪ Hooked up with a VAX 11/780 at Sloan-Kettering Cancer Center in New
  York. Eighty hospitals across the U.S. were using the computer to help
  treat hundreds of radiotherapy patients.[55]

▪ Broke into an unclassified computer at the Los Alamos nuclear
  laboratory.

▪ Penetrated a Security Pacific Bank computer in Los Angeles. That may
  not have been so much a challenge. The account name and password both
  were “SYSTEM”—a word that many computer manufacturers routinely put in
  new machines and that their customers often forget to take out.
  “TEST,” “DEMO,” and “MAINTENANCE” are other old standbys.

Footnote 55:

  The 414 invaders fortunately didn’t alter radiotherapy information.
  But they reportedly did zap a file used to bill customers a total of
  $1,500 for computer use.

If teenagers can wreak Attilan havoc and snoop on a bank computer, then
think of adults.

So use passwords and codes, knowing their vulnerabilities. Try, anyway,
to give computer crackers a good challenge by avoiding use of obvious
passwords like street names or those of wives or children. Consider a
two-level password; also, maybe one with two words of pure gibberish;
that’s what CompuServe does. And, obviously, purge the computer of
standard passwords in the “SYSTEM” vein.

If your system permits dialing in through a modem, see if it can limit
the number of tries that people can make before the modem hangs up the
phone. Your dial-up computer should send its name until the caller has
given the right ID. Be careful of overly helpful =prompts= that lead
callers on to the next step. “A prompt saying, ‘Hi! This is the Last
National Bank Disbursement Department,’ sort of gives the game away,
doesn’t it?” says a _Creative Computing_ article laying out precautions.
Also, change passwords regularly. And if an employee’s leaving? Change
the access codes.

Here’s what I’d ponder if shopping for a password or encryption system:

1. How hard, exactly, would it be to puzzle out? Just how many
  combinations would a computer cracker have to try? Could he easily do
  this through his own machine—or yours? You might want to consult a
  cryptography expert to learn how much of a challenge _this_ particular
  program would be. You’d be surprised. You may see the manufacturer’s
  claims instantly deflated.

2. How compatible is the program with your computer? If security is so
  important, choose the protective software first, then the
  hardware—assuming, of course, that it will run your applications
  programs.

3. Is the security program easy to use? If it’s too hard, it’ll be
  self-defeating. “Ease of use” would include how much time the security
  software adds to your normal tasks.

4. Are you certain the program won’t jeopardize the accuracy and
  completeness of your files by making you more accident-prone?

5. Should you expand your system, will the security software be able to
  grow along?

6. Do you want a =public key= encryption system? It works this way. You
  pass out a code that people can use in sending messages to you. Only
  you have the means to unscramble them, though.

7. Will your code be based on the =Data Encryption Standard= (=DES=),
  published by the U.S. government and repeatedly tested by the National
  Security Agency (NSA) and the National Bureau of Standards? To this
  day the rumors persist that NSA has built in a trap door to snoop on
  DES-style codes. True? I don’t know. Captain Zap says, “I don’t trust
  it. I don’t think NSA would have approved it if they couldn’t crack
  it.” NSA-approved codes are overkill in all but the most sensitive
  systems.

Telenet has a special interest in encryption software. It is the network
into which thousands of computer users dial to reach other machines and
services like The Source.

In 1984 Telenet claimed to be the first public network offering
encryption software—a package for the IBM and clones that uses the
public-key method and sells for somewhere under $600.

“You have a directory that has all the public keys in it,” said Claudia
Houston, Telenet public affairs manager, explaining the Phasor
software’s operation. “You look up the guy’s key that you want to send a
message to. You punch that key and your message gets encrypted.”

For a two-page message, a Telenet man says that might take thirty
seconds. Then you’re ready to send over the phone lines. Even if someone
wiretaps you, theoretically, he won’t be able to puzzle out your
secrets.

MCI Mail also offers encryption—through a customized version of a
popular communication program—and other electronic networks will
undoubtedly follow suit.

“Black boxes,” or hardware that scrambles messages, might likewise help;
the topic is too complex for me to cover here in the detail it deserves.
This equipment usually costs well into the thousands. One security
expert, J. Michael Nye, even puts out a consumer’s guide to black
boxes.[56] A good black box could be just a special modem with
scrambling circuits built in. “If no one else produces a good, low-cost
modem with encryption,” says Nye, “I might start doing it myself.”

Footnote 56:

  After writing a draft of this chapter, I helped Nye prepare a section
  of his black box guide.

  I find it to be useful, but overly technical for some lay people.

  Nye may be reached at Marketing Consultants International, Suite #214,
  100 West Washington St., Hagerstown, Md. 21740. Call 301/791-0290 for
  the latest information about the guide’s price and other details.

                            ■      ■      ■

  Captain Zap’s Wisdom on Protecting Your Dial-up Computer

  The Captain and friends stole—via computer connections—over $100,000
  in goods and $212,000 in services, including a $13,000 Hewlett-Packard
  minicomputer. He received a $1,000 fine and two and one-half years’
  probation, with fifteen hours a week community service.

  Far from being 100-percent antiestablishment, however, Zap is a
  Philadelphia Republican fond of wing tips. (“They show good
  breeding.”) And a computer security consultant, a client, praises him
  as “a damn good technician.” A computer-crime expert named Jay
  BloomBecker isn’t so keen on the use of e×-criminals in security:
  “There are a lot of people just as bright who have stayed within the
  law.” Regardless, Zap has some good tips for security-minded computer
  users, especially those with dial-up machines. Among them:

  ▪ _Don’t think of computers as gods._ “Remember, there’s just another
    human at the other end.”

  ▪ _Spread out your computer numbers; you might even use different
    telephone exchanges._ Don’t have numbers adjacent to each other—like
    555-1212 next to 555-1213. If you do, your computers will be easier
    targets for hackers with _WarGames_-style dialing programs that scan
    local exchanges for computer numbers.

  That’s good advice from Zap. In the same vein, even if you have just
  one micro, you might consider trying to get a phone number in an
  exchange miles from your actual location. You might even want to use a
  tie line to another city. It all depends on whether you think the
  costs would justify the added protection; for many businesses they
  wouldn’t.

  Also, you might keep your modem number secret from people who don’t
  need to know. A Hollywood director, fearful that computer-smart
  science-fiction fans might tap into his dial-up machine, used such a
  precaution. Only he and his regular callers knew the number. His
  super-secretive approach obviously wouldn’t have worked in a typical
  business, especially one with many phone lines coming in. Also,
  nothing’s foolproof; suppose an electronic snoop unlocks your
  building’s wire closet.

  ▪ _If possible, use modems faster than 1,200 baud._ Then, says Zap,
    “most hackers’ modems can’t keep up.” Most small computers’ modems
    transmit at 300 baud, about 300 letters or numbers a second.

  ▪ _Remember that hackers can be ingenious._ “Don’t be smug just
    because you have a dial-back modem. That’s a device that makes
    callers tap out a special code, and then it rings them back at their
    authorized location. You can get around it by tying into the central
    office and setting up a three-way call—without anyone hearing you. I
    know hackers can set up three-way calls. I’ve done it myself.”

  ▪ _Protective devices, however, are better than nothing at all._
    “Despite their limitations, I’d still install a call-back
    arrangement or a device that asked you for a code—or maybe a
    combination of the two. A combination usually would be much better.”

  ▪ _Don’t get hung up on protecting your dial-up computer with just
    hardware or just software—use both._ “Black boxes can help keep the
    wrong people from breaking in. But you also need good security
    software to control _how_ deeply even authorized people can get into
    your computer. You want some people—like customers—to have only
    _partial_ access to the goodies inside your system.”

  ▪ _Watch what you throw away._ “Some hackers can log onto your dial-up
    computer after first poking through your trash—for printouts with
    passwords and similar material.” Another hacker jokingly refers to
    “The Dempster Dumpster Library.”

                            ■      ■      ■

Don’t lose track of security threats around your office itself while
worrying about modems and encryption. Would you believe that you can’t
absolutely erase an electronic file—say, a letter or report on your
disk—just by following the directions in your software? A snoop might
recover the information with a special program like Disk Doctor.
Luckily, however, you can zap a sensitive file by magnetically “writing”
over its part of the disk. Say you want to wipe out a letter 500 words
long, File A. Well, do the following:

1. See if your disk has a file at least 500 or 600 words long. If so,
  make a copy. If not, type out a file that long. I’ll call this new
  file “B.”

2. “Write” File B’s contents under A’s name. “Overwrite” in other words.

3. Erase A.

To _really_ erase an entire disk? Well, don’t depend on your computer’s
“copy” program or “format” program. Instead, just sweep a magnet over
it—within a quarter inch or so.[57]

Footnote 57:

  My thanks to J. Michael Nye, for calling my attention to the problems
  of incomplete erasures. Ed Bigelow, of Adevco, a Pennsylvania company
  selling networks to link computers in the same office, also was
  helpful.

So much for the James Bond kind of data security. Now on to coffee
spilled on floppy disks.

Whether it’s coffee or Coke, unless you’re careful, you’re possibly
going to be your own biggest data-security threat. Just ask people like
Betty Cappucci, a quality-control manager with the Dennison Kybe
Corporation in Kopkinton, Massachusetts. “Most of the time,” she says of
returned disks, “it isn’t the disk—it’s spit or fingerprints. All you
have to do is look at offices with people eating their lunch near their
computers.”

“We see disks coming back with cigarette ashes and coffee stains,” said
Jack Fitzgerald, who at the time was a field engineer with another disk
maker.

And it isn’t just the very smallest computer users who abuse their
disks. “The big problem in computer facilities,” he says, “often is
cleanliness. I’ve been to a large investment firm in New York City and
seen apple cores on the floor, Big Mac containers near the disks. And
yet they were complaining of data-loss problems.

“This was a major investment firm with all sorts of ads on news programs
and football games about how carefully they protected your money,” says
Fitzgerald. “No investor lost money in this case because the firm at
least had backup disks. But the company itself lost thousands of dollars
of processing time—money they could have spent helping their investors
earn more.”

A programmer with a Florida accounting firm, however, didn’t even have a
backup when his disk crashed on a large computer.

“He was actually crying on the phone,” Fitzgerald recalls. “He had lost
two disks. And he was willing to pay $20,000 to get data off them. His
job was on the line.

“I’ve had disk crashes myself,” Fitzgerald says, discussing his
off-hours work on his micro. “I was developing a small game similar to
Space Invaders. I lost power on my computer and about three hours of
work. I ignored one of my basic rules, which is to back up about every
20 lines—make a copy on a second disk.” Captain Zap’s rule is, “Every
fifteen minutes, save on both disks.” That’s extreme. Like all forms of
security, apply this in relation to the trouble it would take to recover
a loss.

Even Paul Lutus, famous in the industry for his work developing Apple
software, has a scary crash story.[58]

Footnote 58:

  The Lutus story is from _Popular Computing_.

He’d toiled to develop a new program, of which he took two copies to the
company. An electronic glitch cost him one of the copies. The sun melted
the other. It seems that Steve Jobs, an Apple cofounder, had put the
disk under the windshield of his car. “I ended up very carefully prying
apart the case of Jobs’s copy and switching the floppy disk inside to
another case so we could recover the programs,” Lutus says. “I haven’t
always been so lucky.... For me the biggest drawback to personal
computing is the quality of the mass storage. I dislike floppy disks
intensely.”

Here’s how you can help your floppies and data survive threats more
immediate—sloppiness and stupidity:

1. Zealously enforce a no-drinking, no-eating policy around disks, at
  least if trouble develops.

2. Remember the Rothman Dirt Domino Theory. Dirt, dust, and grease often
  can sneak up on your floppies indirectly, in stages. You start with
  clean hands. Then, however, they fall domino style when you touch a
  dirty table or one with your office mate’s submarine-sandwich
  drippings. You return to your own desk briefly before you yourself
  leave for lunch. You don’t work with floppies then, and you wash your
  hands after eating, but during your brief stop at your desk before
  lunch, you’ve already left a trace of grease behind, anyway. Your disk
  box picks it up when you set it on the wrong spot on the desk. Then,
  working with the floppies, you lay one atop the box. Now the disk
  itself fails. Alas, most disk failures aren’t gradual like a recording
  that gets progressively noisier until you can’t stand to listen to it
  anymore—they tend to be sudden and total.

3. Realize that floppies don’t always mix well with office materials
  that correct errors the old-fashioned way—erasers, for instance,
  white-out fluid, or that unavoidably flaky correction tape.

4. Know about other natural enemies of floppies or at least of the data
  on them. Beware of airport metal detectors. A disk maker says this
  isn’t a problem; but don’t gamble, since a magnetic detector,
  misadjusted, might still mush your data. Beware, too, of telephones
  atop disks: the magnets in them are powerful.

5. Don’t even let your floppies rest against your computer’s screen,
  which, like a television’s, can be full of static electricity,
  attracting dust.

6. Remember that the more information you can pack on a floppy, the more
  vulnerable it may be to damage from dirt, fingerprints, magnetic
  fields, and other causes.

7. Clean your disk heads. Don’t use rubbing alcohol. “Try something like
  a Freon-based material with 91 percent pure alcohol,” Fitzgerald says.
  “You can get it at some computer stores.” Or, after every twenty hours
  of operation, use a cleaning diskette, three of which typically come
  in a $15 package. Each disk, says Fitzgerald, will last about thirty
  cleanings.

8. Have head alignment checked, to reduce disk errors. With heads out of
  whack, your machine may be the only one that can read your disks—not
  even identical machines. A crude way of assuring proper alignments, in
  fact, might be to see if other machines can read disks written on your
  micro.

9. Buy quality disks. Of course, the more you spend on disks, the more
  expensive your backups become—discouraging you from making them. Find
  a balance between cost and convenience that suits your security needs.

Timing—that’s the secret to saving your electronic diamonds or
rhinestones on your floppies, whatever the quality.

In the past, working just with paper, timing meant to me nothing more
than the Rothman Chronological Method. The newer the document on my
desk, the closer it would be to the top of the file. It wasn’t the most
efficient way. But I rarely lost material, just temporarily misplaced
it. Computerizing, however, I worried.

“Floppies are treacherous,” my friend Michael Canyes said like a John
Bircher discussing commies. “They always trick you when you least expect
it.”

“Thanks,” I said. “The way you’re encouraging me to computerize, I’m
beginning to think you actually want to sabotage me. Help me lose my
manuscripts and all that.”

“Just back up your copy page or so,” Michael said.

“Isn’t that a lot of trouble?”

“Maybe twenty seconds. Then you’re protected if the power fails. Or
maybe your computer. You can’t afford to have your material stored just
in on your chip. It’s just temporary. You cut off the current a fraction
of a second, it’ll forget everything. You’ve got to get your stuff on
the disk ASAP.”

All right, I supposed my creative juices wouldn’t dry up during the half
minute the disk drive was whirring.

“The ‘Save’ command on WordStar is =KS=,” Michael said. “Just hold down
the ‘Control’ button on your computer while you’re doing that. Then
you’ll hear a whir and the disk drive clicking away.” Somehow my Kaypro
was coming across as an animal to be fed during training; the clicking
could be the sound of a dog chomping up candied biscuits after a
successful lesson.

“You’re also going to make backup disks,” Michael said. “Sort of like
electronic carbon paper.”

“I don’t have time,” I said.

“You’ll find time. You can do it in just a minute or so. You can even
use a scratch disk to be safe.”

“What’s a scratch disk?”

“Suppose the power failed or something went wrong with your machine
while you were making your copy,” Michael said. “Then you could be up
the creek without a paddle. You might lose both the original and the
copy.”

“So?”

“That’s why you have a scratch disk. You copy on it first. If something
goes haywire, then you’re still safe. Because, during your last work
session, you made a backup.”

“Theoretically,” I said.

“And if something goes wrong while you’re recording on your permanent
backup disk, then you can just work from the scratch disk. It’s just
what it sounds, sort of a scratch pad.”

“Oh, I’ll use paper, thank you,” I persisted. “The best backup yet.
It’ll be years before it falls apart. And who knows? Maybe by then the
Library of Congress will be preserving my manuscripts.”

Michael withheld a guffaw.

“Well, I can type a mean streak on my Selectric,” I said. “I can get my
stuff back into the computer in no time.”

Always the patient teacher, Michael didn’t argue.

Presumably, however, another writer nowadays would have agreed with
Michael immediately. His editors had been looking forward to having the
printer set type from the disk he’d submit with the paper version of his
manuscript—a crowded floppy storing every single byte from his toil.
Then the editors could bring the book out six or eight weeks faster,
with the disk in the printer’s hands. But in this unlucky man’s case the
disk never reached the printer’s hungry computer—he hadn’t, alas, made
an electronic copy. A case of hubris if ever there was one.

You might avoid such traumas by following the Rothman Chronological
Method II (RCM II), a lazy man’s form of data security for those with
fast printers:

1. Every five minutes or so, type out the “KS” or an equivalent and dump
  your work of the moment into the disk—for, ideally, permanent
  preservation.

2. Every half an hour make a printout of your recent work. With a fast
  printer, that’ll still be faster than messing around with an
  electronic copy at this point. Remember, you still have the backup
  disk from your last work session. So even if the original fails,
  you’ll need to reenter just the newest material.

3. Every day make your backup floppy. You might forget about the scratch
  disk and make two copies.

What about working with hard disks? Well, Winchesters are more
dependable than floppies. On the other hand, they commonly store many
times more material than do the soft disks—meaning perhaps a fiftyfold
increase in your agony if one fails.

“Always try to use an uninterruptible power supply with your
Winchester,” warns Fitzgerald, whose former company produces hard disks
as well as floppies. Some manufacturers say their hard disks don’t need
this protection. But, in general, it’s a good idea; here’s why.

Normally, the head picking up the magnetic patterns is only ten or
twenty thousandths of an inch from the oxide-coated disk. The disk is
aluminum—and shear-prone in the event of a crash. Instead of the typical
soft whirl, you’ll hear an ear-piercing squeal like a car brake out of
adjustment, except that the aftermath will be more costly. Repairs may
run into the hundreds of dollars, not to mention the loss of data.

Not every power failure will produce a disk crash. But why gamble with
your Winchester and its data?

An uninterruptible power supply will protect them by pumping out juice
long enough for you to know something is amiss and shut the disk down.
It sells for several hundred dollars, commonly, and is normally worth
it.

“Also,” says Fitzgerald, “be sure the drive is grounded and shielded as
the manufacturer recommends. If not, power surges could cause it to lose
track of its data.”

He suggests one more precaution. Since the disk and the head are so
close, why not warn furniture bangers? This could change. Hard disks are
shock mounted in some portables nowadays, so that the equipment isn’t
quite _that_ delicate. But I’d still try not to be too klutzy around
it—and to be careful in other respects.

You can back up a Winchester in one of several ways:

1. Dumping to floppies. It’s cheap but slow. Then again, you can speed
  up the process by updating only the files you’ve been working on. You
  just “write” over them.

2. Transferring the Winchester’s contents to a special tape drive large
  enough to hold them. This method is fast but may cost you a good
  $1,500.

3. Dumping to an ordinary videocassette recorder. Although slow, it’s
  okay up to around 100 megabytes or so, and you can set the VCR timer
  to “watch television” off the Winchester at night when you’re not
  using it.

“Interesting,” you say, “but how about the lap-sized portable I’m
considering? How do I protect the information inside that?” The best
way, of course, is not to lose the memory and the rest of the portable;
as a well-practiced raincoat forgetter, I’ll never be the ideal owner of
a lap-sized portable.

Common sense, too, suggests that you not store a lap-size portable
inside a car with the sun blazing down—bad news for heat-sensitive chips
and other parts.

If your portable uses a =bubble memory=, your data-security problems are
milder in some respects than with other kinds. The bubbles are tiny
magnetized areas inside a small metal container. Magnetized “north,” a
bubble might mean a bit specifying “one.” Magnetized “south,” it could
mean zero. (You’ll recall that bits form a byte standing for a letter or
number.) Magnetic bubble memories aren’t that much faster than disks,
but they _keep_ remembering forever—unlike the CMOS (Complementary Metal
Oxide Semiconductor) RAMs used in many portables.

An RAM will develop amnesia if your power fails, and a CMOS RAM is no
different. It’s just that the CMOS keeps the power requirements extralow
so small batteries can dribble out the needed juice after you’ve
“officially” switched your machine off. This “hibernation” may last
weeks or months. (Check your instruction manual.) You’re in great shape,
however, only as long as your batteries are; the Eveready commercials
may talk of nine lives, but your data may have only one. Someday your
care may count more than ever. Low-cost CMOS RAMs may eventually store
thousands of pages on one chip; and power failure might not be the only
risk.

Imagine. You can tap out a chapter of your 1,000-page great American
novel some bitter winter night, lazing on the rug by your fireplace.
Your lover is stroking your back and—ZAP! Since CMOS RAMs are such
low-voltages devices, think what thousands of volts from static can do.

Here’s one solution to the portables’ static problems. Before computing,
you might discharge yourself on a nearby vent or anything else that’s
grounded. You can also spray your home and office rugs with Static Guard
or its equivalent. And you also can use a static mat—cheap at your local
computer store—if the zaps persist.

What about a plane thirty thousand feet up? Then you might try
discharging yourself against a metal ashtray before using your portable.
If it’s all plastic, with no metal parts, by the way, your risks are
much less than otherwise. But they’re still there.

Whatever style portable you’re using, remember the importance of
backups—however inconvenient or costly. Through a cable called a =null
modem=, you can pipe valuable reports from your portable to a larger
computer a few feet away. You may want to do this, anyhow. Your
lap-sized computer simply may run out of storage room much more quickly
than a bigger machine and may lack floppy disks to spread those bits and
bytes around. So make sure your portable software lets you zip material
back and forth between machines.

“And in the field? What backup technique, then?”

Well, you’re often stuck with slow, tape-style storage. And mini-disk
drives may be expensive and take up room if they’re not already in your
portable.

But why not see if your company will let you send valuable reports over
the phone for temporary storage in its big computer? You can also stash
them away inside a desktop computer hooked up to the portable the same
way. And there’s yet another answer. Rent electronic storage space on a
commercial computer network like The Source of CompuServe.

In the future, maybe computer memories—on little portables and desktops
alike—won’t be so temperamental. Perhaps there will be superreliable
CMOS RAMs. Or how about practical, low-cost disks that you use lasers to
“read” and “write” on? Dreams, dreams!

Meanwhile, most of us struggle along with floppies and must keep
thinking, Backup! Handle carefully! Clean! Maintain! and How often? In
summary, keep asking yourself:

1. How much time or money does it take to enter your data or set up your
  computer equipment?

2. How easily could you duplicate or replace it?

3. How much time or money do you have for copying, cleaning,
  maintenance, whatever precaution you’re taking?

Do keep data security in perspective. Remember, even if you must be a
zealot at times, it’s just part of surviving with your computer. Harold
Joseph Highland, a data-security stalwart in his work—a believer in two
backup disks of book manuscripts—tells of people who make out very well
with far less copying. They are students at the University of Minnesota,
computer-science majors, and they trudge through snow and ice carrying
unbacked-up floppies in their books. Their professors are tolerant. If a
disk fails and a student’s assignment is late, they understand. The
students can’t afford too many floppies, and some just don’t have the
time for backups. It’s the same, perhaps, at countless other colleges,
and maybe that’s only right for twenty-year-olds who’ll learn soon
enough about disappointments beyond the campus.

But you’re in business, perhaps, without a friendly professor ready with
a sympathetic nod. Your making regular backups is just plain good sense,
and if you don’t, you deserve what’s coming to you.

Isn’t that what data security should be about?

It needn’t be Orwellian at all. If anything, in fact, Winston Smith had
more of a data-security problem than Big Brother. Privacy, certainly, is
an important data-security element, as is what the jargonists call
=integrity=—accuracy and completeness of files. Think of Winston Smith
and his appreciation of history and Big Brother’s propensity for
tampering with the contents of back issues of the _London Times_! Even
if “1984” has already become a year, the number, to true believers in
data security, remains a warning.

This will be especially true as more and more machines swap secrets over
the wires between home and office.




                           11 ❑ Wired to Work


John Fuller’s daughter is grown now, and he’s taken over her room,
cluttering it with computer and boating magazines and his Heathkit
micro. At first glance it looks like the computer room of any of
thousands of hobbyists. You may, in fact, catch whiffs of smoke from
Fuller’s soldering gun.

It’s an unlikely setting for a working office of the U.S. Navy.

And yet that’s exactly what it was when Lieutenant Commander Fuller
responded to my notice on an electronic bulletin board asking if anyone
at home was hooked up to his boss via computers.

“I’ve been getting away with it for six months,” Fuller drawled proudly.

On the verge of retirement from the navy, he was determined to
telecommute in civilian life, too, perhaps as a management consultant,
his military job. “It seems foolish for me to get in a car to go to an
office,” he said, “if I can go to that office by phone. I’m much happier
not having to get into traffic for forty-five minutes each morning. I
can have coffee and read the _Washington Post_, and I’m not tense. I
work fewer hours. But I don’t have five or six guys to talk to about
ball scores, either. The government’s getting a better deal from me
working at home.”

In fact, Electronic Services Unlimited (ESU), a research firm in New
York City, found typical productivity increases between 15 and 20
percent.

So it isn’t surprising that at least 250 firms, including some big names
like American Express and McDonald’s, were allowing work at home as of
1984. Many more companies might be. They might have kept quiet, however,
fearing either (1) union resistance or (2) pressure from employees who
wanted to telecommute before management was ready for them to do so.

“I look outside my Manhattan window and think some cities are going to
be transformed—streets will be empty,” _InfoWorld_ quoted an ESU
official.

That might have been stretching it. In 1984 only several thousand people
were full-time telecommuters on a payroll. But Jack M. Nilles, coiner of
the word “telecommuting,” said the number may have reached twenty
thousand if you included other people.[59] Lone individuals,
stockbrokers, even a software house organized “on-line,” were trying it.
And Nilles, a future studies researcher at the University of Southern
California, was predicting perhaps as many as ten million wired workers
by 1990. He said most of the ten million would telecommute only part
time. Still, that would be a huge number, perhaps one-fifth of the
information workers in the United States.

Footnote 59:

  Nilles is in a position to keep track of statistics associated with
  telecommuting. He has done numerous telecommuting studies as a senior
  research associate with the Center for Futures Research at the
  University of Southern California. Nilles has written an important
  pioneering work in the field—_The Telecommunications/Transportation
  Tradeoff: Options for Tomorrow_.

  In this chapter I am indebted not only to Nilles but also to work that
  the Stanford Research Institute did. SRI’s three-part study, completed
  in May 1977 for the National Science Foundation, appeared under the
  main title _Technology Assessment of Telecommunications/Transportation
  Interaction_. The first part is _Volume I: Introduction, Scenario
  Development, and Policy Analysis_, by Richard C. Harkness, available
  for $17.50 in paper and $4.50 on microfiche as PB-272-694, from the
  National Technical Information Service, U.S. Department of Commerce,
  5285 Port Royal Rd., Springfield, Virginia 22161. The second is
  _Volume II: Detailed Impact Analysis_ by Harkness; $70 in paper and
  $4.50 on microfiche, PB-272-695. The third is _Volume III:
  Contributions of Telecommunications to Improved Transportation System
  Efficiency_ by A. E. Moon and J. M. Johnson, E. P. Meko, H. S.
  Proctor, and C. D. Feinstein; $14.50 in paper and $4.50 on microfiche,
  PB-272-696. Needless to say, Alvin Toffler’s _Third Wave_ (New York:
  William Morrow, 1980) contributed greatly to popular interest in the
  subject of telecommuting.

You might beat the crowd in the most obvious way—by becoming a
do-it-yourself telecommuter, perhaps without even leaving your present
job. “Wired to Work” will explain. You’ll also learn how your company
might benefit from large-scale telecommuting. Even small firms can come
out ahead. A growing translation service in Washington, D.C., squeezed
into the basement of the owner’s home, lends tiny Radio Shack computers
to workers.

Telecommuting may very well help your firm reduce real estate costs;
hire better people, clerical and professional; and get a head start on
your competitors, mixing high tech with decency and managerial common
sense. No, I’m not going to suggest putting a “For Sale” sign tomorrow
on your corporate skyscraper. Telecommuting isn’t for every worker or
every company. American bureaucracies, however, public and private, are
not yet tapping the full potential of telecommuting. As far back as 1970
Commerce Department statistics showed that half of American workers
dealt in information, whether it was travel agenting, technical writing,
or filling out 10K forms.

Match those statistics with Jack Nilles’s estimate that more than 2.5
million nonfarmers in the United States already work at home, and you
can appreciate telecommuting’s prospects.

Fuller’s case, in particular, shows how countless Americans might leap
at the chance to telecommute.

His employer was a bureaucracy, a huge one, hardly a trendies’ citadel,
lacking an official telecommuting program, and yet he carved out his own
niche as a wired worker. The Navy allowed a few other men from his
office to write and think at home. But the resourceful Fuller went a
step beyond; he took the initiative of hooking himself up
electronically. And he told me, “I’ll never again work where I don’t
want to be.” It seemed so logical. Now that telecommuting was
technologically possible, why shouldn’t employees _ask_ for it? Why
shouldn’t telecommuting be a grass-roots movement among professionals in
large organizations, not just the province of corporate planners and
rich escapees from Wall Street? Moreover, with his down-to-earth wisdom
expressed plainly in a Georgia accent, John Fuller couldn’t be shrugged
off as a dreamy hacker.

The purists might not have accepted Fuller into the telecommuting fold,
since he was still spending at least one-quarter of his forty-hour week
in other people’s offices. To me, though, he was all the better an
illustration of how people and companies could gracefully change over.

As an in-house consultant, Fuller went from office to office, telling,
for instance, how the Naval Academy could set up a cost-analysis formula
for its laundry or how a base commander could consolidate two computer
systems. His “clients” were not completely “on-line.” And he appreciated
the value of face-to-face meetings where he could smooth ruffled
feathers with southern humor. “I may look like another alligator,” he
would tell bureaucrats intimidated by the presence of a management
consultant, “and I may be taking you away from your work, but I need
information from you to help you do it better.” Fuller would also stray
into his boss’s office from time to time for library research and to
remind people he was still breathing.

Every few days he reminded them in other, more meaningful ways. He would
load up his little Heath computer with disks containing the report he
was working on and a communications program. The computer would then
pipe the output to his modem, which sped the results to a Wang word
processor in his office—well, his former office.

A secretary would capture the information on a disk, watching in
appreciation as Fuller’s work flashed across the Wang’s screen at
several hundred words per minute.

“The secretaries don’t admit to being threatened,” he said. “They’re
still busy transcribing the stuff the other guys bring in. And if the
others were transmitting it like me, they’d still need to do the final
formating, editing, the modifications required of these things.

“Besides, there’s got to be someone there who answers the phone.”

Baby-sitting a computer by the phone doesn’t sound like the most
challenging task, but one day many of the secretaries themselves may
work at home.

Granted, some management-level workers worry that telecommuting would
lower their own job status by forcing them to work keyboards. “If I were
a civilian at some companies and I sat down at a keyboard and composed
my day’s work,” Fuller admitted, “a clerk or administrative-type person
might complain to the personnel office that I was clerical rather than
professional and should be demoted.

“As the younger generation of managers grows up with keyboards and rises
higher in the power structure,” Fuller said, however, “you’ll find the
stigma fading.” By century’s end, moreover, a voice-controlled computer
might sell for less than $1,000. Good-bye, typing! You may still use a
keyboard, actually—but just to clean up sentences where the computer
confused “sleigh” with “slay” or muddled similar combinations.

Should you, then, even today, follow Fuller’s example and make yourself
a telecommuter?

Consider:

_1. How much public contact does your job require and in what form? And
  how much contact do you have with your coworkers?_

    Fuller didn’t need to have strangers passing through his office. His
    job, rather, called for him to go to “clients.” Also, he was working
    on his own projects, not entangled in office-wide activities, and he
    didn’t need constant feedback from his boss.

_2. Does your job require much office politics, and how secure are you
  in it?_

    John Fuller was about to retire. Had he been a young manager
    fighting for a promotion, he might not have chosen to remain most of
    the time out of his boss’s sight. Then again, he did have the
    benefit of a superior more enlightened than many. His boss wanted
    results, not mere attendance.

    Margrethe Olson, an associate professor at New York University’s
    business school, warns that some telecommuters may suffer at
    promotion time. She correctly wonders about “the long-term career
    potential of an employee in an environment where visibility is still
    critical to promotability.” In a 1982 paper Olson observed: “Some
    form of management by objectives, either informal or formal,
    generally needs to replace ‘over the shoulder’ supervision, in
    spirit as well as in fact.” As she once said, “Culture changes more
    slowly than technology.”

    Keep in mind the experiences of a vice-president of a New York
    consulting firm who telecommuted from Florida.

    When the _New York Times_ interviewed him, he insisted that he
    remain nameless, lest the wrong people in the firm find out about
    the arrangement.[60] “I still think there’s a mentality around there
    that people who work at home are not working,” he said, adding,
    however:

    “I like to have uninterrupted periods of work alone. If I have to
    stop and go to a meeting for two hours, I lose more than two hours.”

Footnote 60:

  The example of the Florida-based telecommuter is from “Rising Trend of
  Computer Age: Employees Who Work at Home;” _New York Times_, March 12,
  1981, p. 1.

_3. What becomes of the clerks and secretaries whose work your
  telecommuting may change or reduce?_

    Fuller’s “disappearance” from his regular office didn’t put anyone
    out on the street. It merely lightened the secretaries’ work loads.

_4. How expensive, and how much trouble technically, would telecommuting
  be to your company and to you?_

    In Fuller’s case it was relatively easy. His office already had the
    word processor, and as a computer hobbyist he already owned the
    Heath micro. Ever ingenious, he devised an easy way of entering data
    so the Wang, which justified margins by the paragraph, could
    function with his home system, which did so by the line. (See Backup
    XI, “The Micro Connection: Some Critical Explanations,” for more
    tips on links between your own micro and the office’s.)

    John Fuller’s electronic hookup cost next to nothing. A modem like
    his—the device allows a computer to talk over the phone—would sell
    for about $100 today. Faster modems may cost $300-$600.

    It pays to check out technical specifications and shop around. The
    old compatibility rule applies here: don’t believe that any
    combinations of equipment will work together until you’ve actually
    tested them out. Obtain a store’s promise that you’ll win a refund
    if the systems won’t talk to one another electronically. You’ll also
    need to make sure that the computers have communications programs
    that function together. A good communications program for a
    micro—one that’s easy to use and lets you store information to be
    transmitted—can cost less than $150. Even free software may work for
    you. I didn’t pay a cent for my MODEM7 program, which the writers
    placed in the public domain.

    Normally, as a do-it-yourself telecommuter, you should favor micros
    over “dumb terminals.” At least make certain you can easily
    accumulate large masses of material to shoot out over the phone
    lines. That way you’ll conserve your company’s phone and computer
    resources. Suppose, however, that somehow they’re both unlimited and
    you don’t mind a phone line being tied up while you’re dumping
    material into the big corporate computer. Then maybe you can get
    away with a dumb terminal costing just a few hundred dollars.

_5. How do you normally gather information in your job? By phone? By
  looking over written material? By tapping into your company’s
  computer?_

    If facts normally reach you by phone, you can install a special
    business line and tell your colleagues that, no, they won’t disturb
    you at home—that your work is what the line’s for.

    Written material is trickier, of course. One answer may be a
    facsimile machine, which could cost more than your computer but may
    be justified if drawings are part of your work. In the future, even
    cheap personal computers will have attachments to scan written
    documents and zip the images over the phone lines. Already some
    expensive Wangs offer this feature.

    Meanwhile, like Fuller, you may want to catch up with written
    material by visiting your office every few days, or you may try a
    formal or informal messenger service—perhaps a coworker.

    If you must tap into your company’s own computer, make certain you
    can do so without any data-security complications. And consider how
    accessible your corporate data base is to begin with. Maybe there
    aren’t ways of conveniently plugging in—in which case you’d better
    rid yourself of plans for do-it-yourself telecommuting.

_6. Would your family leave you alone while you telecommuted?_

    You must work out a deal with them that includes a place to work
    without interruption, rules for phone messages, and so on.

_7. What about potential marital problems?_

    “If you work in your employer’s office, your spouse doesn’t show up
    very often,” says Walter I. Nissen, Jr., a programmer-consultant
    who, off and on, has been telecommuting in various jobs since the
    late 1960s. “But if you’re home, your spouse can get angry at you,
    face-to-face, right there.” He finds telecommuting to be easier with
    his wife now working as a social worker.

_8. Do you have the drive to do your job alone?_

    “I’m not a Theory X man,” says Fuller, referring to the school of
    management that says people work best with the boss peering over
    their shoulders.

    Don’t mess with do-it-yourself telecommuting if you aren’t a
    self-starter—a useful trait even in corporately initiated programs.
    Don’t recommend it to anyone lacking this trait.

_9. Can your boss measure your performance objectively? This isn’t
  necessary but it helps._

    Michael K. Caverly, a recently retired captain and John Fuller’s
    former supervisor, couldn’t give any precise figures comparing the
    overall quality of the telecommuter’s work to earlier times. But
    Caverly was plainly delighted. He believes that Fuller performed
    better without having to worry everyday about the horrors of rush
    hour. “I almost feel guilty about it,” he said of Fuller’s
    diligence. “He would rework a problem all night long, and I’d feel
    almost as if I were taking advantage of him. In our office we did
    thirty-three studies one year, and John’s studies were the only ones
    that came in on time all the time.”

Jeremy Joan Hewes is also sold on telecommuting. “Can you work at home?”
Hewes’s own boss asked when he hired her for _PC Magazine_, an
independent publication for owners of the IBM PC.

“That’s where the computer is,” she replied happily.

It made sense. Hewes had her North Star micro there, after all. What’s
more, she’d written a book on “worksteaders,” as she called them, and by
her late thirties had worked at home most of her professional life. So
why not use her North Star there and modem her stories in? She might
even edit others’ articles sent over the phone lines. The magazine
wouldn’t have to jam another human sardine into the cramped offices it
then occupied above a restaurant in northwest San Francisco. She could
work better alone. The pay would be the same for her hundred hours a
month. And she could enjoy tax breaks on computer equipment, supplies,
even some of her rent.

The magazine, in return, ended up getting more than five thousand words
a month from her, sometimes double that amount, while, at the same time,
as an associate editor, she regularly oversaw at least one other writer.
She also did additional work for which she was paid beyond the hundred
hours.

“It’s a lot less chaotic at home,” said Hewes, who also was writing
books. “I don’t have to dress up. I normally wear jeans or corduroys. I
can start work at dawn in my bathrobe and answer the phone that way if
it rings while I’m headed for the shower. I don’t have to drive through
traffic jams every day. Or stand up for twenty minutes on a bus, hanging
on for dear life to a pole, jolting along the street. I work in
surroundings I’ve created.”

She created them with both the IRS and aesthetics in mind. Her
apartment, near the Golden Gate Bridge, was on the second floor of a
seventy-year-old house with high ceilings and leaded bay windows. A
bookshelf and wooden cabinet set the computer area apart. Her keyboard
and video screen were atop a custom-crafted table with fruitwood edges;
she can work alongside her cocker spaniel-poodle, and through the bays
she could see a doll-repair shop. It was vintage San Francisco. No
matter that neighbors’ punk-rock music once besieged her ears or that
practice pitchers sometimes thudded tennis balls against the house or
that apartments cluttered what once were sand dunes. Several times a day
she switched on her answering machine, a device she deemed necessary for
worksteads. Then she’d swim laps at a nearby pool or walk her dog amid
cypress and eucalyptus trees, perhaps with friends, perhaps alone,
perhaps mulling over future articles for _PC_, where she once warned
would-be telecommuters of the need for “regular breaks from the
concentration of work.” At the same time she lectured herself and others
on the need for self-discipline. She trained her friends to realize that
she was earning a living, not goofing off—a confusion that may fade as
telecommuting becomes a more mundane pursuit.

She kept her sanity and a schedule—well, a writer’s equivalent of a
schedule—by remembering how she had promised to research X material by Y
date and how she _would_ complete an article on time. “I go to an
editorial meeting,” she said, “and I say, ‘Here’s what I want to write
for the March issue.’ They say, ‘Oh, gosh, someone else is doing that,’
or, ‘Why don’t you do this?’ or, ‘Fine, hand it in by the fifteenth.’”

“Rarely,” Hewes said of her editors, “can I imagine them calling me at
eight in the morning to transmit a story in an hour.”

Mostly, in fact, she sent in her stories at night through her computer.
Her IBM—she loyally bought one to replace the North Star—talked over the
phone to the magazine’s machine with an automatic-answer modem. She
could tell the office computer to save her copy on a disk. Except for
light editing and formating, no human normally needed to type another
keystroke; _PC_’s computers tied in with the printer’s.

It sounds HALish, depersonalized, but like Fuller, she and others at the
magazine tried to infuse their work with as much warmth as they could.

No one at _PC_ was leaving martinetlike orders—unaccompanied by
conversation, phone or otherwise—on the green screen. And Hewes
painstakingly consulted over the phone with her writers. Moreover, while
Hewes worked from home at least seventy of the hundred hours, she was at
the _PC_ offices several times a week to socialize, pick up mail, and
swap ideas. And she would have come in, occasionally, anyway, even if
she lived fifty miles from the magazine. (Also, she was in the field for
face-to-face interviews, just as Fuller, working for the Navy, would
visit his “clients.”) As the telecommuting movement grows, workers and
supervisors alike should remember to _see_ and _speak_ to others, not
just key to each other.

Whatever the case here, both Hewes and _PC_ were tickled with her
telecommuting arrangement. “We’re not paying for office space,
electricity, desk space,” said David H. Bunnell, then publisher and
editor in chief. “She even provides her own coffee.” An office for her
might have cost the equivalent of $1,200 a year. More important,
however, Bunnell happily noted the thousands of words she writes for
each issue: “She couldn’t be more productive, and she does her research
conscientiously. Like the article she did on printers. It was obvious
she’d surveyed twenty or thirty manufacturers in the field.”

Close to a year later, Hewes told me that she was no longer
telecommuting regularly. Bunnell had been so happy with her work that he
had appointed her editor at the book division of _PC World_, which he
had started after leaving _PC Magazine_. Hewes still loved the concept
of telecommuting. But she understood its limits better. “When I was an
associate editor of _PC Magazine_,” she said, “I was actually more of a
writer than an editor, and I didn’t have to be as much a manager as I am
now. But now I have to juggle ten book projects and do budgets and go to
several meetings a week. My ideal thing would be to go to the office two
days a week and work at home the other three. I figure I’ll work on that
for next year. Now all I’ve got to do is get everyone I need to see to
come in the same two days that I do!”

Bunnell himself offers another qualification in praising
telecommuting—not everyone has the needed discipline—but he says
telecommuting can work especially well for people who write or sell. One
New York magazine publisher, in fact, developed a special computer
system for handicapped people, featuring written prompts to keep sales
pitches consistent. And Bunnell thinks that telecommuting can work for
executives, too, with the right system, taking advantage of computerized
records of the words they keyed in.

Can clerical-level workers, however, also telecommute happily?

A South Carolina case illustrates both the blessings and _potential_
pitfalls of telecommuting for clerical people.[61]

Footnote 61:

  The South Carolina facts come from “Rising Trend of Computer Age:
  Employees Who Work at Home,” the _New York Times_, March 12, 1981, p.
  1; “Computers Turn Dens into Offices,” _USA Today_, May 9, 1983, p. 1;
  and “Home Computer Sweatshops.” _The Nation_, April 2, 1983, p. 390.
  In addition, I talked to Ann Blackwell and her husband, Tim, assistant
  vice-president of basic and major medical claims at Blue Cross-Blue
  Shield, in South Carolina.

Blue Cross-Blue Shield there says it isn’t running an electronic
sweatshop. The telecommuters’ rewards are roughly comparable to those of
the regular office workers, and some cottage keyers can actually come
out far ahead. The program has been going on for years. And there’s a
long waiting list.

Ann Blackwell, one of the keyers, transmits her work back to Blue Cross
at the crack of dawn; then she can fix breakfast for her two children
and take breaks for household work and lunch. “I’d rather do this than
go to the office,” she said. “I don’t have to dress. I don’t have
someone looking over my shoulder all the time to see if I’m working.”

In a typical day a “cottage keyer” processes 360 claims forms from
doctors. The pay is sixteen cents a claim, or $57.60 for the 360, minus
a levy of $10.20 for equipment rental, meaning that the worker ends up
with $47.40 before taxes.

That’s $2.18 more a day than full-time employees at Blue Cross receive
for similar work, if you consider the full timers’ benefits like
holidays, sick leave, vacation, and disability and health insurance. A
good clerk could earn some $12,000 a year. And $12,000 is nothing to
sneer at in South Carolina where many living costs are low.

However:

1. The cottage keyers are paying more than $2,600 a year to rent their
  machines. Doesn’t this smack of company-store tactics in a mining
  town? Why not finance the purchase of the worker’s own machine, which
  he or she might pay off in a year? Blue Cross official Tim
  Blackwell—who has given his company some useful feedback based on his
  wife’s experiences—defends the steep charge for the machines. He says
  it’s actually an incentive. The more a cottage keyer works and earns,
  the smaller will be the percentage of her income going to pay for the
  terminal cost.

2. The telecommuters don’t get the security that full timers do.

3. Likewise, the cottage keyers lack the normal fringe benefits. The
  program could delight a wife whose husband holds a steady job with
  good health insurance and other benefits. On the other hand, the
  arrangement could be bad news for a worker depending on the
  telecommuting for his or her main income. Significantly, women head
  most single-parent households.

4. The keyers may not be sharing the experiment’s rewards fifty-fifty.
  Excluding minor administrative expenses, the telecommuters’ services
  cost the firm $47.40 a day on the average, minus whatever profit the
  company may make off the terminals it rents to the workers. Let’s say
  the final expense is $45. By contrast, the regular workers cost at
  least $50.52 a day if you include vacation, fringe benefits, and the
  $5.30 that the firm pays for a terminal lease. Missing, however, are
  the expenses of office space. Also, the company’s getting slightly
  more work from the telecommuters with only about 12 percent as many
  errors!

Could an antitelecommuting backlash develop as workers catch on to the
economics?

Already the American Federation of Labor and Congress of Industrial
Organizations and the Services Employees International Union have
proposed the outlawing of computer homework. Given the political climate
of the mid-1980s, that seemed unlikely. This could change, however. Gil
Gordon, an ex-Johnson and Johnson personnel man turned telecommuting
consultant, correctly warns against using telecommuting to bargain down
workers’ pay or bust up organizing drives.

“There’s nothing new about shift work, piecework, which is what pay per
line of information is,” says Karen Nussbaum, president of 9 to 5, the
National Association of Working Women. “Or pay by keystroke homework.
That’s a step back into the Middle Ages, if you ask me, and into the
cottage industries.”[62]

Footnote 62:

  The Nussbaum quotes are from “9 to 5 President Raps Office Automation,
  Says It Deskills, Devalues Office Jobs,” _Computerworld_, May 3, 1982,
  p. 53.

A difference exists, after all, between creative jobs, like Hewes’s, and
those that, in any setting, will be drudge work. The question is Where
will the typing, the data entry, the other labor, be more palatable—home
or normal office? And ideally that’s a worker-by-worker,
company-by-company, decision. Perhaps some workers will eventually
strike for the _right_ to telecommute. In fact, Glenn E. Watts,
president of the Communications Workers of America, while frowning on
electronic scabbing, once said that telecommuters might even plug into
union gatherings. Union opposition to telecommuting could very well
change. The big variable is whether companies will follow Gil Gordon’s
wise advice not to use telecommuting as a union-busting ploy.

Of course, presently, home work isn’t for all. Today a telecommuter
can’t make steel, cars, or refrigerators by remote control. He or she
can’t cook a Big Mac, sweep a floor, run a supermarket checkout, or load
a truck; for telecommuting is now strictly the province of white-collar
workers and professionals. Indeed, companies in predominantly
blue-collar fields may decide that certain office jobs just defy wiring
in. Suppose an auto worker suffers a series of late paychecks. Will a
payroll clerk sitting in a comfortable suburban home be as responsive as
he might be dealing with the man face-to-face?

Even in basically white-collar fields, some bosses and employers may
look askance at universal telecommuting.

Some, for instance, may miss the hints of body language, the blink of an
eye, the tapping feet, the little, subtle signs that many people feel to
“read” friend and foe. Others simply miss _seeing_ people hard at work.
A Seattle hospital administrator, a telecommuter supervising two others
working at home, says: “It ultimately comes down to an honor
system.”[63]

Footnote 63:

  The Seattle example is from _Business Week_, May 3, 1982, p. 66.

So if you don’t trust your underlings and can’t objectively measure
their output, you’d better keep your workers at the office and watch for
eye blinks.

Not that every employee will want to telecommute, anyway. Management
Recruiters International, Inc. asked six thousand people if they’d be
willing to telecommute several days a week. Only 36 percent said they
would. That’s still an impressive percentage, and it will grow as more
people appreciate telecommuting’s virtues and it becomes more socially
acceptable, but there’ll always be skeptics like Jack Smith.[64]

Footnote 64:

  _USA Today_, March 28, 1984, p. 3B, reported Management Recruiters’
  telecommuting survey.

He’s a columnist with the _Los Angeles Times_, which once freed him of
his commute. After six weeks, however, his granddaughter broke his
typewriter, and he temporarily returned to the newspaper, where he
rediscovered the joys of face-to-face contact and decided to remain. His
columns perked up. He had missed “the friendly faces, fresh in the
morning; the clothes; the gossip; the flirtations; the benign
conspiracies; lunch-hour expeditions; the open forums on war and peace,
Reaganomics, and the Rams quarterback controversy, none of which could
be examined with such reckless spontaneity by anything canned for
consumption on your home computer.”

“He realized that he really came back to the office not just to write
but to renew his interaction with human life,” says William Renfro, a
Washington consultant.[65]

Footnote 65:

  William Renfro’s comments appeared in _The Futurist_, June 1982.

Then again, Maxine Messinger, a gossip columnist with the Houston
_Chronicle_, writes happily on a computer at home and brags that she
hasn’t been to the office in years.

“For a long time it’s been far more efficient for me to work at home,”
says another confirmed telecommuter, Hollis Vail, a part-time management
consultant with the U.S. Geological Survey.

“I use my computer for writing, reports, and sending reports and
messages,” he says, “and I can get all the data I want from the system.”
The U.S. Geological Survey has thousands of people using electronic
mail, and Vail can even hold conferences over the wire and record the
results on his computer disks. Then he can sum them up. In fact, he can
electronically cut and paste to produce policy documents reflecting many
viewpoints.

David Snyder, now a professional futurist and consultant, fondly
remembers the computerized conferences of his days as an Internal
Revenue Service official. “I wrote a book with eight other people,” he
says, “and we didn’t meet until it was written. It was a much better
product because we could work that way. The travel would have been too
expensive. And the mails would have been too much of a delay.” The
coauthors left their contributions in each other’s electronic mailboxes
for perusal and change. Back then Snyder was on a government computer,
but later he hooked up an Apple in his Maryland home; he was planning to
connect with aunts, uncles, and other members of his extended family,
nationwide, who, together, do consulting and produce films. “You can’t
have a mom-and-pop steel mill,” he said. “You can have a mom-and-pop
information factory.”

Rank Xerox, the office equipment giant’s joint venture in England, is
helping to pave the way for Mom and Pop.

It’s letting managers and other professionals telecommute. They’re no
longer salaried, and they give up pensions and perks like company cars;
but the “networkers,” as they’re called, normally sign two-year
contracts guaranteeing them work at least two days a week. Business with
other companies may take up the remaining days. In a sense the Rank
Xerox program could be a large corporation’s version of the
hundred-hour-a-month arrangement that Jeremy Hewes worked out with the
computer magazine.

“Clearly,” says Derek Hornby, staff support director and a member of the
Rank Xerox policy committee, “we need and will always have a ‘core’
staff within the head office for day-to-day management. Many functions,
however, can be fulfilled by networkers.”[66]

Footnote 66:

  The Xerox example comes from correspondence, interviews, and the
  _Financial Times_, London, July 20, 1982.

Computer work, pension advising, management training, even putting out
the company newsletter, are some of the tasks with which the networkers
may help core staffers. Who qualifies for the program? Someone the
company wants to keep but whose services it needs only part time. The
first networker, Roger Walker, a former personnel manager in his late
thirties, helped cut costs in the most direct way, eliminating his job.
He was planning, anyway, to venture out on his own. But the Rank Xerox
program eased the transition.

“What do you answer,” I asked the company, “when people say, ‘Isn’t this
really just an outplacement scheme?’”

“The rough cost of someone going networking,” said Phil Judkins, a Rank
Xerox spokesman in London, “is approximately three times the cost of
their compensation if they were simply declared redundant by Rank
Xerox.”

More than a year into the program, how were the volunteers doing?

“Extremely well,” said Judkins—all of them. He said two networkers
seemed “well on the way to one-million-dollar turnover companies.”

And Rank Xerox, needless to say, didn’t supply all that business.

Along the way the corporation was benefiting from the useful business
contacts that the new entrepreneurs were making outside the company.
Sensibly, it discounted its model 820 microcomputer for the networkers.
They could not only do their normal work but help show off a company
product.

Runaway expenses, though, especially rent, were the real spur behind the
experiment.

The rent on Rank Xerox’s international headquarters, in London, had
doubled in just two years. Small wonder, then, that Rank Xerox wanted to
trim every speck of gristle from its headquarters budget. And by late
1983 the knife seemed to be slicing well. The forty-three networkers
were helping Rank Xerox save a third of a million dollars a year in
office space. Judkins said: “We have rid our books of this sterile
expense.”

In the United States, Mike Bell, Xerox real estate executive, is busy
toting up the advantages of another form of telecommuting—moving some
corporate operations out of expensive downtown areas.

“Why should a company have row after row of workers taking up desk space
in back rooms in large cities,” he says, “when it could modernize its
office machinery and farm them out to offices in the suburbs? An average
office worker and his desk take up 200 square feet at $20 a foot in big
cities. That’s $4,000 a year just for rent. Suppose you could move him
to a suburb with rent at $12 a square foot. Then rent would be only
$2,400 a year.”

If the employee was in a suburban office tied in to headquarters via a
computer-telephone hook-up, you might save as much as $3,000 over five
years—even if you counted expenses like equipment costs.[67]

Footnote 67:

  Thanks to Mike Bell for helping me obtain figures comparing
  telecommuting costs to alternatives. And the editor has simplified the
  numbers presented.

And you might save $8,200 per employee over a five year period if the
workers were at home.

The chart below assumes that (1) each employee takes up 200 square feet,
including corridor, aisle, and file space, (2) the downtown rent is $20
a square foot, which is perhaps half of some Manhattan rents, (3) the
suburban rent is $12 a square foot, (4) you pay home workers $4 a square
foot in rent, (5) your investment in equipment for each telecommuter is
$4,000, (6) the effective tax rate is 35 percent, (7) you’ll receive a
tax credit of ten percent of the computer gear’s initial cost and (8)
depreciation is straight line over five years. Yes, $4,000 is more than
the computers might each cost; the inflated figure helps fudge for
miscellaneous expenses like moving expenses and phone bills. As for tax
laws, they can change. But the credit—as distinguished from
depreciation—accounts for only a tiny fraction of the money you’re
saving. One last point: the chart below doesn’t consider interest on
what you’d be saving in rent.

Large companies, of course, could mix different forms of telecommuting
and employment arrangements. They might even let some workers shift back
and forth. Some employees, some of the time, anyway, would work at home,
while others might be at companies’ regional or neighborhood
telecommuting centers of one kind or another.

Jack Nilles’s kind of neighborhood center—at least one of the kinds he’s
proposed—would be organized by corporate function. One center would
bring all the accountants together, for instance,

  ───────────────────────────────────────────────────────────────────
              A COMPARISON OF OFFICE EXPENSES PER WORKER
  ───────────────────────────────────────────────────────────────────
  CASE 1: DOWNTOWN OFFICE
  _Years_               _0_    _1_    _2_    _3_    _4_    _5_ _Total_
  ───────────────────────────────────────────────────────────────────
  Rent                    0  4,000  4,000  4,000  4,000  4,000 20,000
  Tax Reduction at        0 -1,400 -1,400 -1,400 -1,400 -1,400 -7,000
  35% Rate
  Total Expenses          0  2,600  2,600  2,600  2,600  2,600 =13,000=

  CASE 2: SUBURBAN OFFICE
  _Years_               _0_    _1_    _2_    _3_    _4_    _5_ _Total_
  ───────────────────────────────────────────────────────────────────
  Rent                    0  2,400  2,400  2,400  2,400  2,400 12,000
  Tax Reduction at        0   -840   -840   -840   -840   -840 -4,200
  35% Rate
  Investment          4,000      0      0      0      0      0  4,000
  Tax Credit           -400      0      0      0      0      0   -400
  Depreciation            0   -280   -280   -280   -280   -280 -1,400
  Credit
  Total Expenses      3,600  1,280  1,280  1,280  1,280  1,280 =10,000=

                          CASE 3: HOME OFFICE
  _Years_               _0_    _1_    _2_    _3_    _4_    _5_ _Total_
  ───────────────────────────────────────────────────────────────────
  Rent                    0    800    800    800    800    800  4,000
  Tax Reduction at        0   -280   -280   -280   -280   -280 -1,400
  35% Rate
  Investment          4,000      0      0      0      0      0  4,000
  Tax Credit           -400      0      0      0      0      0   -400
  Depreciation            0   -280   -280   -280   -280   -280 -1,400
  Credit
  Total Expenses      3,600    240    240    240    240    240 =4,800=
  ───────────────────────────────────────────────────────────────────

and another would house a company’s public relations department. This
idea does have the important advantage of, say, letting accountants pore
over their electronic ledgers in each other’s company. Yet what about
the unlucky ones who lived in suburbs across town?[68]

Footnote 68:

  Nilles may have been the first to envision neighborhood centers for
  telecommuters.

They would prefer, presumably, the kind of center propounded by Richard
C. Harkness, a former professor at the University of Washington who
later joined Satellite Business Systems.

Under the Harkness plan, an employee would go to the center closest to
his home. “He might even walk there,” Harkness says. According to him, a
large company might have as many neighborhood centers as elementary
schools—leasing offices for individual workers or small groups. Imagine
a professional building with a real estate agency next to a stockbroker,
a doctor across the hall from a commodities trader. Well, that’s how it
would be in a building housing neighborhood centers, except a sign
outside a suite might say “General Motors” rather than “Dr. Pearlman.”
Of course a company might instead have fewer centers and lease whole
floors. Stepping off the elevator, you’d see the foot-high letters
reminding you you were in GM territory. Workers would benefit from the
companionship of perhaps several dozen colleagues, quick access to
secretarial and copying services, and similar support.

“My way is more radical than locating people by jobs,” says Harkness,
“since an accountant could be in one place and his boss in another.”
Computer networks would maintain entire organizations; a whole new
branch of management science would develop to hone procedures to manage
telecommuters. Perhaps the day will come when IBM will endow Harvard
Business School with a telecommuting chair.

A third form of neighborhood center would be a munytel, as I’ll call
it—a municipally or privately run center with terminals capable of
linking up with many companies’ equipment. Individual employees, not
companies, might rent munytel offices.

Munytels would not bolster employees’ corporate loyalties; but some
companies wouldn’t care, favoring other ways.[69]

Footnote 69:

  The 1977 Stanford study discusses the neighborhood-center concept in
  depth and describes a number of possibilities, many of them
  overlapping with my “munytel” idea. The term “munytel” is mine.

Munytels, moreover, could be ideal for free-lance telecommuters who
valued a clear line between home and office. Workers would be at these
neighborhood centers all the time or whenever they preferred and space
was available. Fed up temporarily with toiling alongside a sullen spouse
at home? Then you’d flee to a munytel, unless your free-lance work
involved confidential company information; in which case you might drive
to a GM or Prudential suite with a spare terminal.

Neighbors with similar or complementary skills might gather at munytels
and pool resources to seek contracts from large companies. Why not use
computerized lists to bring together people in the first place?
“Neighborhood work centers could themselves become employers, selling
clerical or professional services to other organizations,” said one of
the consultants working with Harkness on a landmark telecommuting study
for the Stanford Research Institute in the late 1970s.

Munytels, in addition, could be drop-off points for messengers from
corporations’ headquarters. They would deliver printed material—books,
for instance—that companies couldn’t flash across the screens of
telecommuters at home and munytels.

Also, and perhaps just as important, munytels could serve as informal
neighborhood clubs.

They could offer food and drink and a chance to mix electronically
transmitted gossip with the face-to-face kind. “Meet me,” a stock
suggestion might go, “at the munytel.”

Moreover, for telecommuters unable to handle their children and jobs
simultaneously, the munytels might provide child care. And in poor
neighborhoods, the munytels could combine work facilities with training.

The prefiasco Continental Illinois Bank in Chicago, despite its bad luck
with “problem loans,” did some enlightened work in this field. It
experimented with a word-processing center twenty-five miles away at a
community college. The bank used it for both training and actual bank
work, a logical combination; the students have learned on equipment
similar to what they would use on the job, not simply the obsolete
machinery that many schools must skimp along with. Corporations,
encouraged by tax breaks or government subsidies, might together
establish munytels in poorer neighborhoods.[70] They would provide the
businesslike surroundings that some workers might prefer over home
offices in slums or public housing projects.

Footnote 70:

  Elizabeth Carlson of Continental Illinois said the community college
  had ended the experiment after buying its own equipment. But the bank
  feels the arrangement was successful. In fact, it set up a satellite
  word-processing center in a shopping center near the college.

Munytels would be _one_ response to some thoughtful criticisms of
telecommuting made by Janice C. Blood, 9 to 5’s information director.

“If you’re a secretary earning $11,000 a year,” she says, “will your
employer build you an addition for your computer room? Even a small
Apple wouldn’t be too attractive an addition to my living room.”

Blood is also worried about the cost of the equipment itself, asking,
“Should someone get a cut in salary just because her boss gets [her] a
new typewriter?”

More likely, however, clerical workers instead would receive _some_ more
money for turning out a lot more work. Whatever the case, munytels could
be a solution to the equipment issue—in addition to the obvious one of
company-supplied computers in various cases.

But workers should still be free to use their own terminals. Remember
Hollis Vail’s preference for _his_ printer?

He’s right. I could never stomach working all day on, say, one of the
older Apple IIs, which some companies may still use as their universal
microcomputer. My Kaypro’s keyboard has a silkier feel. The screen is
more viewable than many Apple monitors, and I’m a confirmed WordStar
addict. Even if voice commands become the norm, I may well be among the
last of the keyboard diehards. And yet, were I telecommuting, it
wouldn’t matter. A corporate computer would care about the right series
and speeds of bytes, not how they originated. So I might be able to keep
using my electronic equivalent of a buggy whip.

Just about anybody, moreover, will be able to afford a _useful_ small
computer before the end of the century—because sooner or later one will
be cheaper than today’s typical TV sets. Flat screens and keyboards will
sell for a pittance as mass production and robotics drive down costs. So
much for that one of Blood’s arguments.

As for her fear of an Apple system cluttering up her living room—well,
the home computer of tomorrow will probably be smaller and better
looking. Or it’ll be part of your TV. If not? You may hide your
equipment in a handsome, wooden cabinet that will convert to a genuinely
ergonomic table of adjustable height. No, I don’t know of a product like
that now. But already stores in trendy Yuppie areas are springing up
with names like “Computer Support,” and some of their offerings may be
as fit for your living room as for your office.

Less easily answered, however, is Blood’s worry of “a Mae West
employment profile”—broad at the top, narrow at the middle, wide at the
bottom. That is, there might be lush job opportunities near the top
around the equivalent of Mae’s bust. A few senior managers could
electronically monitor the masses toiling at home—could count and time
their keystrokes.

But between the top people and the ones entering the data, companies
would need many fewer run-of-the-mill supervisors.

And that would pinch off some promotion opportunities for the clerical
workers.

In some ways, however, companies might make nonsupervisory work more
palatable. They might, for instance, pay clerks not by individuals’
keystrokes but by those of small “telegroups,” where peer pressure would
keep every member productive.

Also, companies might follow the example of Volvo, the Swedish
automaker, and rotate some workers’ tasks. Some numbers crunchers might
swap assignments with word-processing people. Indeed, companies could
pay extra for versatility. Word-processing work today is sometimes more
complicated than regular typing; but that might not always be so, and
corporations could relieve some of the boredom of repetitious jobs
simply by letting employees exchange them.

Still another legitimate worry is the distribution of the economic
benefits of telecommuting. What’s to prevent employers from abuse of the
piecework payment system if the government lets it become the norm?
Could piecework be just a gimmick to help impersonally squeeze the last
drop of blood from the clerical telecommuters? Is telecommuting a
mean-spirited or enlightened response to the day-care problem? I suspect
some companies _are_ mean spirited. Not all. But some. Ideally, however,
this won’t deprive society of telecommuting’s benefits. Munytels, after
all, could help solve the child-care problem, and changes in the labor
laws could guarantee the fairness of the piecework system for all.
Existing ones do cover clerks doing piecework. They must, for instance,
keep time records to show they’re collecting the equivalent of the
minimum wage.

In a related matter, a controversy was swirling in 1984 around a
42-year-old federal ban on commercial home knitting—an issue of interest
to companies considering telecommuting. Unions were fighting for the
ban; the Reagan administration, for courts to overturn it.[71] Perhaps
the Reaganites would want _no_ restrictions on corporate use of
telecommuters, which is unfortunate considering the opportunities for
electronic sweatshops, of which the sleazy will certainly want to avail
themselves. Ideally, either (1) I’m wrong about the Reaganites or (2)
future administrations will take a more enlightened attitude.

Footnote 71:

  In November 1984 the Labor Department released a rule that allowed
  people to knit sweaters and hats at home for sale to manufacturers.

Telecommuting also has energy implications—good ones. With widespread
telecommuting, oil price increases would no longer be so scary if
another energy crisis threatened the United States.

Jack Nilles once calculated that the typical computer terminal uses less
than 125 watts, and a phone line takes up no more than a watt. Then he
matched those figures against a private automobile’s typical energy use
during commutes, and he found that telecommuting would have a
twenty-nine-to-one energy advantage. Compared to mass transit systems
loaded to capacity—a rarity in most American cities—it would still enjoy
two-to-one superiority. With ten million telecommuters, the country
might save three-quarters of a billion gallons of gasoline a year.[72]

Footnote 72:

  Nilles’s three-quarters of a billion estimate is reported in
  _InfoWorld_, April 23, 1984.

“At least in the United States,” notes Richard Harkness, “commuting
accounts for 35 percent of all auto and truck fuel consumption.” Much,
maybe even most, of the thirty-five percent would be trips to jobs
convertible to telecommuting.[73]

Footnote 73:

  Harkness’s remarks are from his speech to the Seminar on
  Communications, Brasilia, Brazil, June 1982.

Ticking off statistics, Harkness illustrates the profligacy of American
energy consumption. “The average U.S. worker commutes about twenty miles
each day. Eighty-four percent of those commutes are by automobile, 65
percent with only the driver. Two hundred and twenty million Americans
consume 18 million barrels of oil per day, roughly 30 percent of the
world’s supply.” He also notes the cost of America maintaining forty
thousand miles of superhighways and 4 million miles of streets and
roads. “It has been estimated,” says Harkness, “that 248,500 U.S.
bridges need major repairs at a cost of $47 billion.”

And beyond the energy and financial prices, what about the psychological
ones? Even part-time telecommuters can greatly reduce the stress on
their nerves and schedules, perhaps lowering medical costs for society.
“An employee who drives an hour to work would save sixteen hours in
commuting time each month, or the equivalent of two eight-hour workdays,
by working at home two days a week,” says Frank W. Schiff, a Washington
economist.[74]

Footnote 74:

  Frank Schiff, _Washington Post_, Outlook Section, September 2, 1979,
  p. C1.

Even battle-scarred urbanites with short commutes might relish the
chance to work at home two days out of five. Skyscrapers and their
occupants keep hogging downtowns, aggravating congestion and tension;
and a taxi trip of just a dozen blocks in New York City can take a half
an hour at lunchtime.

In Houston, meanwhile, some gun-toting commuters are literally murdering
each other, saying in effect: “Your right of way or your life!” Jon
Verboon, a _Houston Chronicle_ reporter who has worked the police beat,
told me, “It’s not uncommon for shots to be exchanged between motorists
who are hacked off at each other”—sometimes over right of ways. An
accident needn’t have occurred.

Motorists killed more conventionally on the way to work, of course, are
a hefty percentage of the fifty thousand yearly highway fatalities. But
how could a telecommuter die? Electrocution? Cutting his wrists on a
broken video tube? Forgetting about the rather unlikely radiation
risks—which flat screens would reduce if these dangers existed—computers
needn’t be lethal like cars.

By converting to telecommuting, then, companies in the end might save
employees’ lives as well as energy and money.

Firms making the transition would do well to consider what will be in
the data base into which the telecommuters would tap. The range of
requirements is as wide as the range of business activities. A good data
base for telecommuters, however, isn’t that different from the ones that
some managers are already using by way of terminals on site. Here are
the traits:

1. Ease and speed of use. You needn’t be a computer expert or wrestle
  with inconveniences like dialing fifteen-digit numbers to reach the
  main computer. The system explains itself on screen if you want it to,
  though experienced users can switch off the menus when they’re ready.
  You ideally don’t have to wade through an instruction manual. The
  system tells you when you’re tapping out wrong commands. Also, it’s
  fast. You can start using it in a hurry, and you don’t have to wait
  more than a few seconds at the most for it to respond to your
  commands. And you constantly feel in control. You can easily search
  through the data base for the information _you_ want.

2. Friendliness. A good system isn’t just easy to use; it’s also boy
  scout polite, sprinkling its prompts with “Thanks yous” and avoiding
  intimidating terms like “illegal information request.” Commit a
  careless mistake on some data bases and they’ll throw back lawyerish
  words suggesting you’re on the verge of a jury indictment.

3. Reliability. The system doesn’t lose information.

4. Confidentiality. Clerks aren’t privy to the same information as the
  company president.

Indeed, basically, the same traits would be ideal for some other kinds
of software, especially the kind governing the operation of =networks=.
That’s the term for the hardware and software that lets machines talk to
each other. A network can be a =local network=, linking machines within
the same office, or it can be national or even global. Someday, if they
haven’t already, Bell and other companies may develop software
especially meant for corporate networks of telecommuters.

While widespread telecommuting isn’t yet a reality, Peter and Trudy
Johnson-Lenz have come as close as anyone to realizing its full
benefits. They live in Lake Oswego, Oregon, and as they’re fond of
pointing out, “We don’t commute. We telecommute.” They communicate
routinely with business associates around the country and find
electronic mail a boon to late risers on the West Coast with contacts
and friends back East. By the time I reached them, they felt liked caged
animals inside a media zoo. The papers had leaped at the opportunity to
write about a certified electronic cottage. Peter and Trudy had even
ended up in a BBC documentary on computers and the future—a vivid
contrast to besuited, tied scientists shown in antiseptic laboratories.

“We’re the hippie couple,” joked Trudy. “Peter’s the one with the
beard.”

But they’re hardly refugees from the old Haight-Ashbury; Peter is a
former statistical analyst, and Trudy helped run a rural education
program after a few years as a high school teacher.

Today they’re hooked into the Electronic Information Exchange System
(EIES), a national computer network set up by Murray Turoff, one of the
world’s leading experts on networking. Through EIES they’ve done
research on telecommuting for projects funded by the National Science
Foundation. They help colleges, nonprofit organizations, and others set
up computer networks. Indeed, “on line,” they even met partners in the
business they started to refine and promote a new software system called
MIST. That stands for Microcomputer Information Support Tools. One of
MIST’s many features can help your computer stay in touch with
others—send electronic mail, for instance, or pick the brains of a micro
with a big data base.

“P + T,” as they sign their computer messages, had been on line since
1977, and it seemed right to ask them for advice on making small
business contacts through networks. Peter couldn’t talk that evening,
the victim of a temperamental printer, but Trudy offered these
suggestions, among others:

_1. Whatever network you’re on, see if there’s a directory grouping
  subscribers by interest. Which match yours?_

    “You can send a hello message saying, ‘This is who I am. Now tell me
    something about you.’” This electronic mail could simultaneously
    reach a number of selected subscribers. Then, for instance, two
    stockbrokers, in New York and Washington, could exchange financial
    and regulatory gossip. Other small businessmen might simply discuss
    common problems. The Source and a rival network, CompuServe, each
    boast well over sixty thousand subscribers; so, obviously you do
    have a good chance of reaching the right people, at least if they’re
    professionals or well-off. With customers typically earning $50,000
    or more, The Source isn’t the way to catch up with welfare mothers.

_2. “You must take risks,” Trudy warns. “You must be able to ask_
  _strangers if they can help you. There are different levels of getting
  to know people for business purposes.”_

    If you’re looking for a business partner for a major venture, for
    instance, don’t rely just on electronic communications. Talk on the
    phone before you team up; meet him. But Trudy says networks are fine
    for minor transactions. “We’ve written papers with people we’ve
    never met,” she says, “and we worked with Turoff for two years
    before we met him face to face.”

_3. Tap out your messages knowing that people cannot see your expression
  or hear inflections in your voice._

    “You may even want to type ‘Chuckle,’” Trudy says, “if it’s
    something where you’re being sarcastic or ironic.” Of course the
    written word has advantages. “You can ask people questions and say
    things without confronting them directly,” she says. What better way
    to brainstorm wildly?

I’ll add other advice: try electronic bulletin boards. They work,
believe me, at least on computer-related topics. Jeremy Hewes, for
instance, reached me through The Source, which, at my request, had given
me a demonstration account, a blush, electronic equivalent of a press
junket.

“Hello,” she tapped out after seeing my note on a bulletin board for IBM
owners. “Here are a few thoughts for your book on telecommuting and
related matters.”

We followed through by phone—but The Source paved the way.

And we could just as well have been those two stockbrokers swapping
gossip electronically. It’s a distinct possibility, since half The
Source subscribers use the service in full- or part-time occupations.

Don’t, incidentally, give up making electronic business contacts just
because you can’t afford The Source or other brand-name services.
Discount, no-frills networks will be springing up without, say,
stockmarket reports. Check out prices. Experiment. Get on a service for
a trial if the connect charges aren’t formidable and see if you’re
meeting your kind of people. A network, in that sense, is just like a
bar.

Also consider local boards for which you don’t even have to pay
long-distance charges.

John Fuller phoned after I “tacked up” a notice on a board for Heath
owners around Washington, D.C. Rainer Malitzke-Goes, an employee with a
large communications satellite company and an invaluable source of
technical information, reached me through another local board. Our
computers, however, can also talk directly, without a board or network,
so I’ll check some technical details in this chapter by zipping it to
him electronically.

Besides helping you make business contacts, your computer can ferret out
facts in a hurry.

Want to see if anyone else has started a dog kennel specializing in
Afghans? Well, a magazine article or abstract, stashed away in a
computer two thousand miles away, may tell you. Just dial up the right
information service. For a listing of data banks by subject, consult
_Information Industry Market Place_, published by Bowker, 205 East 42nd
St., New York, N.Y. 10017.

People living in small towns without good libraries will find electronic
data bases especially useful.

A Tennessee doctor, Frederick Myers, spent two and one-half hours on the
road when he periodically went to a medical library sixty miles away.
Now his microcomputers bring him Medline. It’s one of the hundreds of
data bases available through Dialog, the giant information service in
Palo Alto, California. Myers told _Personal Computing_ that Medline let
him “do in ten minutes what it would take me hours to do at the library
going through the hardbound indexes.” His patients have benefited. While
a patient in the emergency room lay with stabbing wounds in his stomach,
Myers ferreted out relevant abstracts via Medline.

Electronic data bases don’t just save time. With them you can pick up
odds and ends of information that printed indexes might not bring out.

Suppose you want to know which celebrities have endorsed electric
toothbrushes on television and, searching manually, you don’t find
anything in the toothbrush articles. What next? Well, the data banks’
indexes might cover even one-paragraph mentions of electric
toothbrushes—little references in articles about advertising or about
the VIP toothbrush endorsers.

But beware. Electronic information services and data bases can cost up
to hundreds of dollars an hour to use. You need to know what to tell the
data bases to spew out the facts you need. And that can take time.
Luckily, some companies have developed programs that let you map out
your strategy off-line instead of giving commands while the ticker is
running. One, called In-Search, runs on IBM-style micros, and can save
you thousands of dollars over the years if you’re a heavy Dialog user.
Even at $399 In-Search would seem worth it.

I can appreciate this all too well, having squandered $35 in a few
minutes trying to tap Dialog for my “Jewels that Blip” chapter. An
experienced librarian at a public library operated a terminal for me
there. And yet at the time even she could find next to nothing on crimes
_against_ microcomputers. In-Search might have saved much—and maybe even
most—of the $35.

Under the circumstances, in fact, I would better have spent the $35 on
long-distance calls to the right authorities, which is what I did.
Information services aren’t panaceas. Most of this book comes from
old-fashioned print and interviews.

My work habits will change, however, as more people tap into data bases
and the costs decline; I’ll be very selfish and put in a good word for
Dialog and the rest, hoping eventually to share these economies of
scale!

                            ■      ■      ■

  Of Packets and Freight Trains

  =Packet switching= lowers the cost of computer communications nets and
  information services, making it possible for you to send 1,000 words
  coast to coast for as little as $1.

  The technique, developed by the military, lets many machines jabber
  away at once on the same phone line.

  To tap into a packet-switching net, you typically dial local numbers
  or 800 ones reachable nationally. Giant networks like Telenet and MCI
  Mail use many different phone lines, but that’s still a fraction of
  what they’d need without packet switching.

  Just imagine each of the nets’ phone lines as a rail line. Many trains
  (=packets= specifying the starts and ends of extrabrief computer
  transmissions) can zip over the tracks at once if you keep them from
  crashing into each other. The trains carry freight (bits and bytes of
  information). Electronic labels assure that the cargo reaches the
  right destinations (the gizmos that forward the information over the
  phone line to the receiving computers).

  Naturally, the use of common trains and rail lines (a
  =packet-switching network=) is more efficient than replicating the
  arrangement for each cargo recipient (each computer).

  This explanation, though simplified, sums up the technique according
  to Vinton G. Cerf, a top packet-switching expert.

  Incidentally, packet-switching techniques can also increase the
  efficiency of networks connecting computers in the same office.

                            ■      ■      ■

Even now, if you can pin down your topic by name, you can pay next to
nothing to use electronic data banks and similar services on occasion.
You needn’t even cough up a fat subscription fee. Through MCI
Mail—$18-a-year basic charge—you can use the Dow Jones News/Retrieval
Service. It’s one way to watch companies of interest. Regularly, during
the writing of this book, I would ask Dow what Kaypro was up to. I
merely typed “.KPRO” and a carriage return, and the computer spewed out
the latest Kaypro news; even at 300 baud the bulletins took less than a
minute or so to reach me. My cost? Maybe forty cents a shot. Just before
Ballantine wanted the final version of this manuscript, I learned of
stockholders suits against the Kaypro—facts that I might not have known
in time without the Dow Jones wire.

My experience illustrates the speed with which the information services
can update their indexes and articles.

The _New York Times_ index at your local library, for instance, may be
weeks out of date. Without a computerized search you’d better either
read “All the News That’s Fit to Print” every day or be willing to flip
through perhaps a month’s worth of papers.

You can even read condensed articles daily from major papers on
line—long before they thud against your door, which they may never do if
they’re in cities a continent away. CompuServe offers the _Washington
Post_, for instance, among others, plus the Associated Press, the major
American wire service. The Source flashes bulletins from United Press
International. And there are electronic editions of specialized
publications like the _U.S. News Washington Letter_.

“Buy stocks now,” the _Letter_’s first electronic edition said
presciently in 1982.

“The very next day, August 17,” gloated a news release from The Source,
“the stock market went through the roof.”

Not surprisingly, big newspaper and magazine companies are tinkering
with electronic information services. Often, rather than home computers,
the services use Teletext (using cable television lines or broadcast TV)
or Videotex (phone lines).

Of course lines may fuzz between technologies. Television-based systems
are growing cheaper; and someday your portable TV may have a built-in
computer, a socket for a keyboard, and a flat, high-resolution screen
fit for word processing and electronic mail. Call it a Vu-Write. Make it
a first-class color television. But also a computer suited for clerks
and professionals alike. Give it a memory system less quirky than floppy
disks. Develop idiot-proof software selected by simple switches.
Mass-produce a Selectric-style keyboard, detachable, or, eventually, a
good voice recognizer. Throw in artificial speech, too, once it’s
perfected, and include a built-in, high-speed modem or the equivalent.
Sell the Vu-Write for $200 at the local Sears. Or perhaps to companies
who can recruit clerical telecommuters by in effect offering free TVs.

Somewhere in Silicon Valley, a savvy company may be at work on a
Vu-Write now; and if it succeeds, maybe mass telecommuting will be with
us sooner than anyone thought.

No matter what, Vu-Write or not, energy crisis or not, think about
telecommuting and related innovations before your competitors do. One
intelligent step would be the use of electronic mail where appropriate.

Backups:

◼ XI, The Micro Connection: Some Critical Explanations, page 349.

◼ XII, MODEM7: An Almost Free and Fairly Easy Way to Talk to Other
Computers, page 354.

◼ XIII, Why Not an Electronic Peace Corps?, page 366.




  12 ❑ How I Found “God,” on MCI (and a Few Other Odds and Ends About
                          Electronic Mail)[75]

You won’t find the Devil listed on MCI’s electronic mail network. But
you’ll find “God,” William F. Buckley, Jr., musician Peter Nero, IBM,
other Fortune 500 companies, me, and at least one hundred thousand more
subscribers, including a Western Union official who’s keeping up with
the competition.

Footnote 75:

  Some of the material in this chapter originally appeared in an article
  I did for _USA Today_. I’ve also made use of facts from the _Wall
  Street Journal_, March 16, 1984, p. 29.

“God” is a man in Morgantown, West Virginia, and his listing popped up
when, out of curiosity, I typed “God” after MCI’s “To:” prompt.

I don’t know if “God” is a preacher or a businessman whose company has a
distinctive name or initials. I’m happy to see him registered with MCI,
however. When I went looking for “God” earlier on the net, the computer
said in its literal way, “God not found. Enter a postal address or TLX
(Telex address).”

I still can’t scare up “Satan,” at least electronically; but MCI’s reply
to my last “God” entry showed both the breadth and versatility that MCI
and other systems may acquire if E-Mail boosters are right. The devil
actually may be on MCI any day now. Several hundred thousand Americans
are hooked up to one mail net or another, and more than five million
should be tapping out messages that way by the end of the decade. In
Virginia a financial planner has used E-Mail’s speed to save a $300,000
deal threatened by a legal deadline.

With E-Mail you can:

● Send messages computer to computer within an office or around the
  world. At their convenience recipients can flash messages across their
  screens or print them out.

● Use a computer to zip messages to special centers near recipients. The
  centers print the messages, then deliver them by courier or local
  mail. That’s how you can overcome one of the original drawbacks of
  electronic mail—the other person’s lacking a computer on the same
  network.

● Send and receive messages via the Telex network—which, of course, is
  why MCI Mail politely asked for “God’s” Telex number.

“E-Mail can be nothing more than the computer equivalent of a
telephone-answering box ... storing messages for people to read when
they have a chance,” says Steve Caswell, a consultant who edits
_Electronic Mail & Micro Systems_, a leading industry newsletter.

“At its most complex level, it’s a very intelligent ultimate
communications device.”

Electronic mail’s roots are in the telegraph, Western Union telegrams,
and Telex machines. Computerized E-Mail has sprung up in the past two
decades; it grew in the military and academic communities and spread to
government agencies and high-tech companies like Texas Instruments.
Within the past few years, thousands of home users and other businesses
have jumped in.

Competition is keen. The Western Union man is on MCI because he wants to
see how it stacks up against his company’s own E-Mail operation,
EasyLink. GTE Corporation and International Telephone and Telegraph
offer E-Mail service. So does The Source, which lets companies set up
their own E-Mail networks without investing in giant computers. Instead,
they piggyback on The Source’s computer bank in the Washington, D.C.,
area. Users can dump messages into The Source’s computers over phone
lines or log in to see what messages await them.

Anchor Financial Services, in Phoenix, Arizona, used The Source to rig
up a network it hoped would lead to well over $1 million in annual
commissions. One hundred financial planners were on line, and Don De
Young, senior marketing vice-president, expected some fifteen hundred by
1985. They’d be able to place mutual-fund orders for clients, conduct
other transactions like placing insurance and annuity orders, and pick
the brains of Anchor’s financial experts.

One planner, Joe Schopen of Norfolk, Virginia, already has used Anchor’s
E-Mail to save a $300,000 cable TV-related deal. Ten investors wanted a
tax break, available only if a Virginia agency approved their
partnership documents before the end of the year. At the last minute,
Schopen learned of additions that would be required; E-Mail gave him the
speedy delivery that he needed for the investors to sign the legal
papers in time.

“Without electronic mail,” he says, “we very likely would have lost
those sales.

“I’ve heard we’re getting a 10 percent increase in productivity because
of our faster turnaround and because our clients can electronically
learn when other people receive messages for them.”

Some other advantages of E-Mail are:

1. Lower phone bills. In a Midwestern office of the H. J. Heinz Company,
  a secretary says the CompuServe network had cut her phone time by 80
  percent. Using electronic mail, for instance, Sue Clark can send a
  memo to dozens of offices at once.

2. Elimination of telephone tag. “We can type a memo at the end of our
  workday and have a response [from the West Coast] by the next
  morning,” says Philip Selden, an Ohio-based executive with
  Owens-Illinois Inc., who is using Western Union’s EasyLink service.

3. An end to garbled messages. Errors and misunderstandings decline when
  people can write electronic messages.

4. More efficient sharing of ideas. =Computer conferencing= is an
  example. A group of people with similar interests can keep a running
  record of their electronic conversations.

  Say you’re an oil company with dozens or hundreds of offshore rigs.
  How to share ideas on efficiency, safety, other related topics? Well,
  via radio-telephone link in some cases, your rig people might log onto
  an electronic network. There they might read and add to the remarks
  left by other people in this ongoing conversation.[76]

  Now let’s say somebody wanted to “speak” to only one other person on
  the network. He could do it.

  Likewise, he might form a subgroup—say, one of people interested in
  helicopter safety.

Footnote 76:

  The example of computerized conferencing comes from Participation
  Systems, Inc., a Winchester, Massachusetts, firm that provided the
  software for computer conferencing on The Source.

E-Mail also is a boon to travelers using portable computers. Peter Nero
says that while on the road, he often must reply quickly to proposals
for concert appearances. So he taps out letters in midflight on a
lap-sized Radio Shack computer, then zips them over hotel phone lines to
his office. In Los Angeles a machine prints them for his secretary to
mail.

There are other virtues of E-Mail—MCI can even arrange to print letters
on your letterhead. A ten-year-old drew his own Bucky Beaver logo for
letters to Grandma, and a Chicago bank follows up with laser-printed
letters to impress the millionaires its sales reps call on.

E-Mail also can add new wrinkles to old friendships, business and
private. Two and one-half decades ago, an elementary-school pal named
Geoff Fobes moved to India with his parents, and we started scrawling
letters; I even fooled myself into thinking I could learn Hindi from a
book he mailed. Not long ago I introduced Geoff—by now in North
Carolina—to MCI Mail. “Well,” he typed, “it seemed only karmically
fitting to be writing you first. Many glorious surprises when your
letter began to appear. My father was dazed and said this was a historic
moment. Seems melodramatic, but then he is an old State Department
manual typewriter man.”

Electronic mail, of course, also has its negatives. Take Nero. He might
have used direct phone hookups to his office computers many times, or
perhaps other networks; but as of spring 1984 he was far from a regular
on the MCI network. Months after I “mailed” a message to him, I hadn’t
gotten an electronic receipt confirming that he had read my “letter.”
And I’m still waiting for “God” to reply. As of early 1984, MCI had
picked up sixty-five thousand of its subscribers from the Dow Jones News
Retrieval Service and the Bibliographic Retrieval Service. And many had
not logged on even once. Some registrants—including “God”?—didn’t even
know the E-Mail service existed.

So MCI was flooding subscribers’ mailboxes—the paper kind—with brochures
telling them of IBM PCs and other goodies awaiting people if they signed
on electronically to enter drawings. “God” theoretically might have won
“a luxury vacation in Hawaii.”

“Since the programs were announced,” said the _Wall Street Journal_,
“weekly [electronic] volume has risen 20 percent.” MCI in late 1984
boasted 150,000 subscribers.

By now it may have another feature. Pay extra and a _computer_ will ring
you up and read you your message. And eventually—maybe even right
now—you’ll be able to pay bills and see your bank balance via the
network.

Still, fearing loss of privacy, some people won’t use MCI Mail and
similar services.

“Electronic mail,” said my literary agent, Berenice Hoffman, ever
vigilant about her clients’ privacy, “is for letters addressed
‘Occupant.‘”

Perhaps for this very reason, MCI Mail’s bills don’t list the recipients
of messages unless you want. In that limited sense MCI is more private
than the telephone system.

You shouldn’t use E-Mail for confidential correspondence, however, if
you can’t protect your message with electronic scrambling.

Ian (“Captain Zap”) Murphy, whom MCI Mail lists under his real name,
really bought that point home. “Any easy way to get into MCI’s operating
system?” he asked.

“Come on, Ian,” I said. “Let’s not court temptation. That would be like
giving an alcoholic a bottle of Jack Daniels.” We joked over it. He said
_those_ days were behind him. And yet I wondered whether, even now,
hackers were unraveling the security of the MCI net.

E-Mail had and has other drawbacks. High-tech intimidates some
executives; others see typing as a threat to the executive image.

Then there are technical glitches. Gil Gordon, the telecommuting
consultant, gave up MCI Mail in disgust because for some strange reason
he had trouble getting his micro to show new lines on the screen
properly when he was typing letters.

Also, even though MCI ballyhoos itself as a link between many kinds of
machines, you normally can’t underline something on your Xerox 860, say,
and have it show up right on someone’s IBM running Perfect Writer. MCI
strips the special characters for underlining, boldfacing, and several
other typographical trimmings. (Among word processors, there are no such
standard codes for such features.)

“MCI’s using us as guinea pigs,” complained Peter Ross Range, a
Washington writer whose double-spaced letters were turning single-spaced
when MCI printed them. That happened with WordStar, the popular word
processor. MCI put out a detailed explanation of how to avoid such
problems, and I passed on the basics to Peter, who said, “What’s the
point if it takes that long and I can just call a messenger from an
express service?” Peter also found that on some days MCI Mail just
wouldn’t work at times; I myself noticed that, too. And some people’s $2
MCI letters, passed on to the U.S. Postal Service for delivery as “hard
copy,” were taking several days to arrive. Still other MCI messages,
hard copy or electronic, never reached their destinations at any time.
Service to New York seemed the worst but was better to medium-sized
cities, especially in the Midwest. Those are all issues crucial to
business.

MCI Mail dates back only to late 1983, and by now maybe things are much
better. Perhaps software makers and MCI and rivals will cooperate in a
big way someday so that you routinely can get boldfacing and other
“luxuries” if you stick the right command in your electronic file.

Glitches and all, MCI still works out for budget-minded writers and
consultants. A “mailbox” is just $18 a year, and if you can dial up MCI
locally as people in most large cities can, you pay a mere $1 to send
1,000 words computer-to-computer in the U.S.—including Hawaii. Indeed,
Jim Fallows says he and some other _Atlantic Monthly_ writers routinely
use the service for trying articles out on each other.

In addition, MCI offers some neat little wrinkles for heavy-duty
corporate users. Companies with in-house systems can set up bridges
between the MCI and their existing electronic mail nets. As the MCI
bragged in its on-line newsletter, you can simultaneously “send a
company-wide memo electronically on your internal system; copy your
attorneys, who subscribe to MCI Mail; copy your vendors with
laser-printed, first-class letters,” and “deliver the boss’s copy the
same day at his conference in Dallas.” If the boss is in London, a
letter written on your computer can reach him by courier after a machine
prints it out. What’s more, for a fraction of the cost of Telexes, you
can directly reach business associates’ computers in England or a number
of other countries.

Of course, especially if you’re a business, do look at the other E-Mail
networks, too. I’ve written much here about MCI simply because it is one
of the largest networks and I’m most familiar with it.

All the E-Mail services, at any rate, offer the same advantages over
conventional letters: speed. Even skeptics see the potential. Peter Ross
Range, the man with the WordStar-MCI woes, says, “I want the day to come
soon when I won’t have to lick another stamp.”

Some of the most useful electronic mail can go from person to another in
the same building or complex—a capability made possible through local
networking, discussed in the next chapter.




                             13 ❑ Net Gain$


Back in 1983 a young CPA named John Madden came to work as information
systems manager for Carsonville Metal Products in rural Michigan. He
found just two computers there—an IBM mini and an Apple III.

Like most computers, they were loners. The IBM, used for accounting,
didn’t pass its figures on to the Apple to be put in reports or maybe
spreadsheets. The Apple didn’t talk back.

Today, though, Carsonville not only owns more machines; they’re more
sociable. Its twenty-one Kaypros speak to each other through a =local
area network=. That’s gobbledygook for nearby computers swapping
electronic files or programs—and sharing goodies like printers.

People, too, are communicating better. They needn’t swap floppy disks as
often or fight their way through as much paperwork. Thanks to the
computer network, Madden says, Carsonville may enjoy $1,000 a year more
in _effective_ work time from each office staffer. That’s not all. Sales
normally are around $12 million a year; Carsonville competes in the
dog-eat-dog areas of defense and auto-parts contracts; and the network
may help win millions of dollars of new business. With facts handier,
the executives can more easily submit low but realistic bids.

The secret is simple: The WEB network, which in late 1984 was listing
for several hundred dollars per computer.

The WEB’s price sounds outrageous. It isn’t. Had Carsonville used
Ethernet or another of the much-touted networks, it might have spent
well over $1,000 to wire in _each_ computer—perhaps several thousand
with all the trimmings included.

Instead, Madden went by the philosophy of this book. He shopped around
for the least costly gizmos that could do the job well.

Souping up the IBM mini wasn’t the answer. It offered 64 megabytes of
storage, the equivalent of 32,000 double-spaced typewritten pages. But
Madden worried if it could run programs fast enough with a number of
people tugging at it simultaneously. “We had five terminals, and we
dropped it to four,” he said, “because our mini slowed down horribly
even with five.” Going the mini route, Madden would also have had to
spend perhaps $30,000 on at least twenty more terminals without the
brains of a full-fledged computer. In addition, he’d have had to buy new
software and other hardware, so the final costs might have totaled up to
$100,000. Besides, Madden cherished the notion of a “democratic” system.
Machines at all locations should boast plenty of power; then people
would feel more in control, and the whole system wouldn’t fall apart if
a Big Brother computer broke down.

Madden might also have gone another route, buying a =multiuser-system=
micro—one computer and a number of dumb terminals, somewhat like the
mini arrangement.

That, too, however, wouldn’t have been “democratic.”

And with too many people piled on the supermicro, it might have run
programs at the pace of a crippled snail.

UNIX, the software system developed by Bell Laboratories, was good for
multiuser arrangements and allowed much more speed—but few computer and
software companies had UNIX offerings out yet.

Madden, anyway, wanted his machines to run proven CP/M programs like
dBASE II and WordStar; he felt they were powerful enough for the jobs he
required; he needn’t mess with the more fashionable 16-bit, IBM-style
micros. Hard disks would help, though. “I’d been a partner in a public
accounting firm,” he said, “and I’d picked up a hard disk for myself,
and it ran much faster than floppy disks, and I didn’t ever want to go
back to floppies.”

So he set his sights on Kaypro 10s—with hard disks built in—and began
mapping out his networking scheme.

With twenty-one Kaypros, each offering around 10 megabytes of useful
storage, his company’s computers could stash away over 200 megabytes, or
more than three times the space on the IBM mini.

“I don’t think people appreciate the power of micros in a network
configuration,” he said.

But which network to buy?

“We were just looking at the ability to share and update the files on
our disks from any location,” Madden said. “And we wanted the ability to
share equipment like printers. We didn’t need an elaborate electronic
mail or message system. We already had intercoms. And we also didn’t
need the ability to transmit graphics.”

From the start Madden knew he hadn’t the slightest use for a deluxe
network, such as one called Wangnet, which could transmit voice and even
TV pictures but didn’t come in a version working with the Kaypro.

Well, how about Xerox’s Ethernet? Xerox was hoping that Ethernet would
become an industry standard, and some users loved it. “Ethernet has been
very good for us,” said a computer man with the Kentucky state
government, a test user; he told _Computerworld_ of “excellent
productivity gains.”

Ethernet, though, like Wangnet, didn’t run with the Kaypro at the time
Madden was shopping, and it also had too much capacity for him.

What’s more, a version of it crashed during a demonstration when two
people were trying at the same time to read an electronic file. Madden
moved on. Reliability counted most.

Speed mattered, too, and he tested The WEB to see how fast it could move
files from one Kaypro 10 to another.

“We set up machines A, B, and C,” said Madden. “We had machine A giving
the commands for a file to be copied from machine B to machine C. At the
same time, we had C transfer a file from A to B, and we had B transfer a
file from A to C.

“People at all three machines hit the return keys at the same time”—to
give them commands—“and then we watched what would happen.

“We found that the machines copied the files without errors in maybe one
minute.” And the files were about 100K long, around fifty double-spaced
typewritten pages.

Madden also tried another test to see how much The WEB would slow down
the speed at which people could run programs. He compared:

1. How long a Kaypro took to sort dBASE II files electronically while
  not hooked up to the network.

2. How long it took while connected to the network.

3. How long a second Kaypro needed to sort the dBASE files in the first
  machine via the network.

“In each case,” said Madden, “there was an increase in time, but it was
still acceptable.”

So Carsonville bought The WEB and saved a pile compared to doing it with
an old or a new mini.

The Kaypro 10s cost $2,750 each, which, multiplied by 21, came to
$55,000, and The WEB in a test version was $250 per machine for the
software and a circuit board. That was just about everything but odds
and ends such as $80 for 1,000 feet of telephone-style wire. Total
expenses? Much less than $70,000. And even with The WEB’s list price of
$350 per machine, Carsonville’s costs still were _at least_ $30,000 less
than those of souping up the mini system or buying a new one.

Later, Madden discovered a glitch. The WEB let people flash short
messages across each other’s screens, a feature called “flash,” and it
crashed dBASE II.

He felt his people wouldn’t need that wrinkle, however, and they could
avoid the problem just by disabling “flash.”

Ed Bigelow, president of Adevco, Inc., which made The WEB, said that if
Carsonville had wanted “flash,” then Madden could have had the network
or dBASE II modified to snuff out the glitch.[77]

Footnote 77:

  Bigelow’s company, Adevco, Inc., 2145 Market St., Camp Hill,
  Pennsylvania, manufactures The WEB equipment under a license from The
  WEB’s designers. That’s Centram Systems, Inc., P.O. Box 511, Camp
  Hill, Pennsylvania, which also sells to manufacturers to add to their
  computers. A California company, Trantor Systems, likewise makes a
  network called WEB: this may or may not mean a name change for the
  Centram technology. At any rate, Adevco itself may abandon the WEB
  name for other reasons. “We may drop the name and market the product
  with the same technology in a different version under a number of
  names,” said Bigelow. “If we enhance the product enough, I may want
  more Adevco identification.”

Whatever the case, the little dBASE II problem showed the importance of
prospective customers putting networks through their paces with various
programs—ideally, _before_ buying.

Here’s a summary of questions to ask in setting up a network:

                            Do You Need One?

Don’t be expensively trendy. You have just three other people in the
office, and the paperwork isn’t piled that high? Then you might be much
better off trading floppies.

But if you’re a busy law office, you might want to get a lot of
standard, boilerplate paragraphs from a hard disk shared via a network
or multiuser system.

Especially you might consider a network or multiuser system where more
than one person is constantly dipping into the same data base. Suppose
Production wants to know five times a day how many widget parts
Inventory has left in fifteen categories. Then a network could help. The
Sales Department, after all, may want to use the same computer to find
out how many finished products are in stock.

Of course, if there are five hundred people dipping into a data base, a
mini or mainframe would be the ticket.

Also, even Bigelow warns against bringing networks into companies in
which people won’t be willing to keep their electronic files in order.

He recalls one office in which “people had been using electronic
typewriters and they’d switched to micros recently and were careless
about where they put their disks. They even left magnetized scissors and
paper clips on them.

“People didn’t trust each other’s diskettes—or diskette habits. And on a
network you can’t be sloppy. You could destroy everything if management
hasn’t set up the system well. Even on some good networks people can
wreak havoc on each other’s files by overcrowding disks with
information. There can even be network saboteurs.

“You can’t network unless people act as a team and care about their
colleagues’ records. If a company’s isn’t like that, it might be better
off with a strong data-processing department to police everyone. Or they
might just use micros not connected to each other—so that people will
crash only their own disks.

“They might network only after they’ve successfully run employees
through a training program to promote good work habits.”

In General, Do You _Know_ What You Want To Do—With People and Equipment?

You’re really planning your office, not just shopping for a connection
between computers.

All kinds of questions pop up—for instance:

1. How extensive do you want your network’s file-sharing capabilities to
  be? Translation: “How important is it for people to share their
  paperwork electronically?”

2. Who’ll manage the network? Who’ll determine who can see what
  electronic files? Who’ll keep track of passwords? Who’ll make sure
  that a careless but talented worker can’t destroy irreplaceable
  information? You don’t, by the way, want your network manager to turn
  power hungry. “He shouldn’t be the network police,” jokes Bigelow. “He
  should be the network janitor—in the sense of keeping everything in
  place electronically. You might also think of him as a network
  teacher. He can help tell people the right way to do things.” Bigelow,
  in fact, warns against one person holding sway over the others by
  being the only one familiar with network procedures.

3. Do you want to assign special network-related duties to other people?
  One employee, for instance, may be the custodian of an expensive laser
  printer and make sure that other people are using it most efficiently.

4. Who will work at what =node=? That’s jargon for a location or =work
  station=.

5. Will some people share work stations? If so, you’d better decide
  which tasks in your office are going to be done in what corners of the
  room.

6. Which computers will store which electronic files?

7. How many printers and other gizmos will people share, and where will
  they go? Presumably, you don’t want a printer five hundred feet from
  the people feeding their files into it.

  You also should decide how many expensive, letter-quality printers you
  need and how many cheapies like dot matrixes. Make up your mind—before
  your office wastes $4,000 on a second laser printer when just one
  might do.

  The same idea might apply to high-speed modems if your network allows
  computers to share them.

8. What kinds of computers are you planning to hook up? The WEB as of
  mid-1984 was running only with Kaypros. But a version for IBMs was in
  the works.

One advantage of a big-name network, however, is that it _may_ more
easily get machines of different brands on speaking terms. That could
count if you’re planning to trade in your old micros soon.

There’s a caveat. Some networks may work with many machines but may not
be as powerful as those dedicated to one brand.

So Apples and IBMs might both share the same hard disk but might not be
able to read each other’s files without costly add-ons.

       How Fast Do You Want the Network to Transfer Information?

It’ll depend largely on the type of network—a topic covered later in
this chapter.

Wangnet will zip information over the wires many times faster than will
The WEB; it’s a boon for those who need that capability but a frill for
those who don’t.

Mind you, a network itself isn’t necessarily the main determinant of the
speed with which files zip back and forth between machines.

The speed of your computers’ floppies in many cases will count more than
the network’s transmission rate, and that’s true to a lesser extent of
Winchester hard disks. Different networks, of course, may work faster or
slower when teamed up with the same computer. Also, some networks seem
fast when you don’t have many users. But then, with a large number,
rival networks are faster.

How Much of a Load Do You Want to Put On Your Network—and Can It Handle
                                  It?

How many computers do you want hooked in? And how much of a strain will
they place on the network before it crashes or slows down to a
bothersome extent?

If people are running data-base programs on colleagues’ files, a network
might only work with a few users, but if they’re just occasionally
swapping electronic files, the same system may accommodate hundreds of
computers.

That’s especially true, say, if you’re a publishing house with many
writers but few editors. The writers may not communicate much between
themselves, so that the handful of editors are the only ones really
taxing the system. And since they’re not running other people’s
programs, even the editors won’t be that much of a burden.

The same principle might apply to an educational network in which one
teacher is overseeing many students.

                 Is the Network Reliable in Other Ways?

Are the wires and connectors strong enough mechanically, for instance?
How much does the network tolerate mistakes—how crashproof is it? And
what about the software? Suppose two people at once are calling up a
directory to find out what’s on a common disk. Will the director
accurately list _every_ file? Does the network perform well not only
with the directory program but with other utility-style software in
CP/M, MS-DOS, or whatever operating system you’re using?

                  How Easy Must the Network be to Use?

The WEB is easy but not for the _untrained_ novice. Using the Kaypro
version, you need to know at least the basic CP/M commands.

But once you do, you’re just about home free.

Take the PIP command, which, among other things, lets you transfer files
from one disk to another on a machine by itself. To switch a file named
TEST from drive A to drive B, you’d load a PIP program into your
computers temporary memory. Then you might type =B:=A:TEST=.

Via The WEB, though, how do you try to reach someone else’s drive?

Well, you could issue a similar command. Only, instead of saying you
wanted to reach drive B, you might ask for drive H—which is how the
other person’s drive might be electronically known around the office.

That’s with The WEB set up the simplest way. Even with The WEB in a more
complex form, however, the procedure wouldn’t be much harder.

On the other hand, The WEB isn’t the system for you if you’re hoping
just to press one or two buttons to send information on its way.

                   What Special Features Do You Need?

Ask, ask, ask the sales reps about what’s available.

Remember, some networks won’t let you share printers or modems or even
send files to another computer. Also, will printing take longer to set
up remotely than with all the equipment by your side? How easy is it?

Also, does the network have =queuing=? If user A and user B both send
out files to be printed on the same machine, will a disk hold user B’s
file until A is done? If there’s queuing, have you given up something in
return?

Find out, too, if the network is =interrupt driven=? Let’s say someone’s
getting information off one of your computer’s disks while you’re
typing. Where should your computer concentrate its processing power? On
the network? Or on your screen and keyboard? Better make it the screen
and keyboard, since you want your machine to record _all_ the keystrokes
you’re putting in. And on an interrupt-driven system, this can happen.
So there’s less chance of “Now is the time for all good men to ...”
coming out as “Nwi thetme fr all good mn....”

Is error checking in use? Will the computers ask if the others received
the signal okay? Will they start again if they didn’t?

Also, what about machine A using its software to work with the contents
of machine B’s disks?

And can you use your pet word-processing software to print an electronic
file on someone else’s printer without getting in the way of the program
he’s running at the time?

What about electronic mail and equivalents of The WEB’s “flash” command?
Can you easily open your electronic mailbox to see what messages are
awaiting you? Will your computer even tell you on screen when you have a
“letter”? Will it beep at you? If there’s a flash-style arrangement for
short messages to appear on screen, can you turn it off? Not that E-Mail
and “flash” are pure delights. You may not be at the screen to receive
your electronic message; with a phone message or an intercom, on the
other hand, the other person would know immediately that you weren’t.
Then again, with E-Mail or a flash-type arrangement, you can help soften
the effects of telephone tag.[78]

Footnote 78:

  Telephone tag occurs when person A returns B’s call, but now _B_ isn’t
  available. With an E-Mail arrangement, A and B could exchange messages
  without the other being available at the same time.

Also, how about =file locking=, which keeps user A out of a file that
user B is working on? That’s probably a “must.” You can’t have someone
changing numbers at the same time you are and see the results add up
wrong for both of you.

Another question arises. Do you want people from field offices to be
able to dial in via modems? This dial-up experience—along with the
general-network kind—might help you eventually make the transition to
telecommuting. Obviously, however, modems may mean security problems.

Local area networks, of course, just like multiuser systems, have
security risks even without modems. You’ll perhaps want to set up the
network with passwords and =user-privilege levels= so that only you can
get into every nook and cranny of the system—and no one can read _every_
electronic file. It’s a question of management style. In fact, in
respecting people’s privacy, you might even arrange for only them to be
able to read some information stored on their hard disks. At any rate,
do investigate the security capability of a system very carefully before
buying. Don’t let a network’s technical failings complicate office
politics.

Needless to say, too, make sure that no one can find his way to the
payroll data base to give himself an unofficial raise.

                 What Kind of Protocol Does the Network

Use?

“Protocol” is just a set of rules telling how computerlike gizmos speak
to each other.

By the way, networks can share a protocol but still not be on speaking
terms. The WEB uses Ethernet’s basic protocol but can’t hook up to it,
since Ethernet transmits information faster across the network.

Wait. There’s one other complication. Different Ethernet-style
systems—from different manufacturers—speak different dialects.

“Assume nothing,” says Bigelow on the issue of whether different
networks or machines will work with each other. “Nothing’s obvious.”

Before buying, insist if possible that the sales rep set up his hardware
and _show_ you the “compatibility” he’s been claiming.

                  How Easy Is the Network to Install?

A WEB-type network might be a nightmare for the lazy and sloppy. It
requires hooking printed circuit boards up to the right leads of chips
in the Kaypro. And you must also solder the telephone-style sockets into
which your computer’s network cord plugs.[79]

Footnote 79:

  Bigelow plans a more rugged version of The WEB transmission line in
  the future to make installation less tricky.

But a good data-processing department shouldn’t have any problems,
according to The WEB’s makers.

What about small businesses without data-processing people?

They might buy both their computers and the network from a systems house
if possible—a company that will do more than the average computer store
in getting various machines to work well together. But you’ve already
bought your computer? And a good computer store or systems house isn’t
nearby? And the network maker can’t vouch for any technicians near you?
Then you might avoid the networks that need soldering and other grubby
work.

Even if a well-regarded store or systems house does sell you the
network, see if the technicians will get it running _before_ they set it
up at your business and you officially take delivery. Better still, see
if they’ll do that before you officially accept delivery.

                 How Much Support Will the Manufacturer

Give You?

Often, if software comes with a computer, the software house will buck
you back to the computer manufacturer if you have a question or problem.

And that may or may not be true with network systems.

If the network is built into the computer, you might want to see if you
can also get direct support from the company responsible for the
networking system.

It works the other way, too. If you buy a network from an independent
manufacturer, is the firm familiar enough with your computer to make
sure the system works well with it? Know exactly who will do the
servicing and consider a service contract, which usually costs 1-2
percent of the hardware costs per month.

In shopping around, you shouldn’t worry about jargon so much as you do
about the performance of the network as _you_ perceive it.

Below, however, are some necessary terms to master. We’ll begin with
three kinds of =topology=—the word for the way a network is laid out:

                                 A Bus

A cable hooks up a bus network’s computers in parallel in the manner of
lights on some Christmas trees.

A bus network may offer advantages in office layouts. You don’t have to
clutter things up with a whole series of wires running back to fancy
equipment in a central location. You just lay one main wire with sockets
that the individual micros plug into.

Other equipment needs _may_ be simple. The WEB, a bus network, requires
printed circuit boards for all computers, installed in the machines
themselves. That’s about it other than the software and the wire.

Fancier systems using a bus—like most versions of Ethernet and Corvus
Systems’ popular micro network called Omninet—need a =file server=.

A file server can be a computer minus the keyboard and screen but with
extra communications ports to help signals get in and out in a hurry.
It’s connected to the hard disk, which stores and relays the electronic
files that people send it. In some networks a file server can also be a
regular computer simply assigned to the job.

With a server arrangement you’re always sharing files with the server
rather than directly with other members of the network. The hard disk is
between you and the machine you’re trying to reach.

By the way, _if_ everyone must use software from the server, that means
a very, very busy hard disk—and potentially slower running programs.

                                 A Star

In star topology, the individual computers are at the points of a
starlike layout of cables radiating from a file server.

If the server conks out, everyone in the network is out of luck. But
then that could also happen in rare cases if a printed circuit board in
a bus network became mischievous in the worst way.

Normally, computers on a star network can’t be more than perhaps 200
feet apart, and perhaps much less.

Corvus’s Constellation network uses the star.

Most multiuser systems—which I won’t call true networks—use the star
arrangement to hook up the dumb terminals to their central brain.

                                 A Ring

Messages zip along a circle in one direction until they reach the right
computer. If the ring’s broken, the network crashes.

Also, distance may be limited to less than a few hundred feet without
costly repeaters. With the right equipment and enough money, however,
you can go much farther.

One beauty of a ring arrangement is that in small networks the speeds
can be very fast. Larger networks slow it down.

A ring network often uses =token passing=. Think of the children’s game
where, when you’re caught with a ball or other object, you’re “it.” The
kids try not to be.[80]

Footnote 80:

  Thanks to Ed Bigelow for the children’s game metaphor for the ring
  network. The kids try not to be.

In token passing, though, the computers don’t mind being “it” at all.
Getting the “ball” means they have the okay to send to another machine
through the ring.

If you as a computer get the ball, you get the privilege of replacing it
with the message you want to send. You “hold” the ball until the message
you’ve sent comes back to you through the ring. Then you send the ball
on its way to the next computer. The whole process, of course, is almost
instantaneous.

Some people say it may be easier to design software for a ring, since
the token passing means there’s no chance of signals colliding.

Radio Shack’s Arcnet uses token passing.

You also may end up grappling with different wiring styles.

                            Telephone Style

WEB-style networks mostly use a cable somewhat like the kind between the
outside of your house and your phone jack. This cable has four
=conductors=—individual wires within it. Commonly, two “hot” conductors
carry computer signals. Between them, often, are two =ground wires=
attached to the computers. You need good, solid ground connections for
the networks to work right.

                              Twisted Pair

A twisted-pair network is what it sounds like—one normally using a pair
of wires that twist around each other to form a long spiral. The
twisting makes the cable less sensitive to electrical interference from
radio transmitters, air conditioners, or other appliances.

                             Shielded Wire

You could also guard the twisted wires from electrical interference by
enclosing it in woven copper or metal shielding.

=Coaxial cable= is a common form of shielded wire. It’s costly—it may
sell for more than $1 a foot. Coaxial cable could be four times or more
the cost of a twisted pair. It consists of one or more thin wires buried
in plastic-type insulation under the shielding.

“Coax,” as the pros say for short, is the kind that’s normally black
outside and looks like a thin snake that stretches on forever. (The
pronunciation is “co-ax.”)

Not that the color’s important. “We use powder blue,” says a man with
one network company.

Ethernet and Wangnet both use coax; so do cable-TV installations. In
fact, some cable companies have transmitted computer signals. A TV cable
doesn’t care if you use it for carrying a gangster movie or a bank
payroll.

But just because Ethernet uses coax doesn’t mean it’s normally good
enough to carry most TV-like signals. It is just =baseband= in capacity.
You’d normally use Ethernet simply for computerlike messages or maybe
some telephone; it’s like a single, high-speed highway.

Wangnet, however, is =broadband= and can carry TV. It resembles a whole
transportation network—a highway, air corridors, and a river.

You have many well-separated channels. In fact, Wangnet is piping along
signals at radio and TV frequencies. And the right gadgetry can separate
them just as easily as a good television does. You can go for miles with
Wangnet—much farther than with Ethernet, which may need signal boosters
after several thousand feet.

People at Wang, Xerox, and the others can get truculent and maybe even
paranoid about their pet networks versus their rivals’.

“There is no light at the end of the tunnel yet,” said a friend of mine
who’s a systems analyst. “Everyone is looking over everyone else’s
shoulder to see what they’re doing.” And it isn’t just the computer
industry. The PBX[81] makers, the switchboard manufacturers, want their
shares of the action, too. This works the other way, too. IBM in 1984
said it would make Rolm—a major PBX maker—part of the Big Blue empire.

Footnote 81:

  PBX stands for private branch exchange.

Room exists, of course, for many styles of networks—even in the same
companies in some cases.

Bigelow aptly likens networks to word processors. We don’t all use
WordStar; why should we all be on Ethernet?

With the right hardware, in fact, a twisted pair or maybe even a bus
network might merge with the baseband and broadband ones. Networked
second- or even third- or fourth-hand micros might speak to mainframes.
The state of West Virginia in 1984 planned to buy hundreds of IBM
computers. Many reportedly would be on Omninets. As of mid-1984 an
Omninet could have only sixty-three micros on it—but why not link many
Omninets to big-time networks? A man at Corvus assured me that’s exactly
what his company was working on for customers like West Virginia. AT&T
may have had the right idea. It planned a network to work with Ethernet
and Corvus, plus the RS-232-style arrangement that you already use to
hook up computers with printers and modems.

That could be just the solution for some large companies that feel
they’re just innocent civilians in the network wars.

Meanwhile, if you’re with a small company like Carsonville Metal
Products, home in on your immediate needs. Again, don’t worry about
high-powered networks designed for the Fortune 500 crowd. Maybe all
computers someday will work with Ethernet, say, and perhaps it’ll be
just as cheap for you as a WEB-style net, but it isn’t now. Meanwhile,
if an Ethernet-equipped firm wants to talk to your computers today,
there’s already a network in place with fairly common technical
standards: the telephone system.

Everything still sound scary? Well, just forget the jargon and simply
pin down the sales reps to make sure that the network will do what _you_
want.

Hire a consultant if need be. And follow the normal rule of computer
shopping and check with existing customers to see if they’re happy.

Wise network shopping, as indicated earlier, can pay off.

In mid-1984, Madden, taking advantage of The WEB, was putting the
finishing touches on some software modifications. With them, whenever
Carsonville made new sales or bought new supplies, he could instantly
see the results on the companies’ general ledger; and just as important,
he and his colleagues could easily keep up with the costs of their
existing contracts. They could compile a historical record, too, a big
help in planning new bids. Now that Carsonville’s computers were
talking, the humans might be talking more—about the new business that
the sociable machines could help bring their way.




          14 ❑ As The Jungle Thickens (AKA the Great Modeming)


This was to be my future chapter, the one about microcomputers in the
year 2001. I at first wanted it short. So often the micro future
prematurely becomes the micro past; and why devote too much space to
making a fool of myself?

And why not spread the risks? Arthur C. Clarke seemed a better
prophet.[82]

Footnote 82:

  For some of Clarke’s own writing on the future, readers might turn to
  _1984: Spring—A Choice of Futures_, published by Ballantine Books, New
  York, 1984.

Several months earlier, in fact, he’d agreed to an interview via modems
and the satellite links between Colombo, Sri Lanka, and Alexandria,
Virginia. So now I’d show that my little Kaypro, with a free software
program and a $150 modem, could talk almost instantly to a stranger’s
computer on the other side of the planet for perhaps a fraction of the
cost of a telex. It seemed fitting. Clarke, after all, had written
_2010_ with WordStar and decades ago had practically invented the idea
of communications satellites.

And if I failed to catch up with Clarke by computer? Well, I supposed it
would be like a train journey to Outer Mongolia; I at least could write
of the experience of _trying_ to get there and of the people I met along
the way.

I’d cop out in one more respect. Rather than ask Clarke the usual
reporterish questions, I would turn the job over to others. The first
was Eric Meyer, twelve years old, who was learning assembly language, a
feat at any age, and who planned to start a software company called New
Technologies.[83] The second was a Fortune 500 man named Jerry terHorst,
head of Ford Motor’s public affairs office in Washington, D.C., and
former press secretary to Gerald Ford. The third was Margaret Phanes,
assistant to David Kay, vice-president of the company that had made my
computer; the fourth, Seymour Rubinstein, a science-fiction fan and the
developer of WordStar. The fifth was Rob Barnaby, the WordStar writer.
The sixth was James Watt, co-owner of the Haunted Book Shop in
Annapolis, Maryland, and a descendant of the eighteenth-century Scottish
inventor. The seventh, Lynn Wilson, a former railroad telegrapher, had
taught me some amateur radio theory when I was twelve.

Footnote 83:

  Eric later decided to change the name of his company to EMCo. Computer
  Consulting.

Eric himself had just passed his novice examination for an amateur
license, and over the phone, with a push button, I tapped out my idea in
international Morse code.

“How,” I inquired, “would you like to ask Arthur Clarke some questions?”

“Who’s Arthur Clarke?” Eric replied by voice.

It was a pardonable response. Clarke’s _2001_—the book and movie for
which he’s most famous—had come out several years before Eric’s birth.
And yet as much as anything, Eric’s reply showed where we were headed in
this age of specialization. He might someday be programming the future
equivalents of HAL, developing new forms of artificial intelligence, and
yet he apparently had not heard of HAL’s creator.

I told Eric who Clarke was. “No, thanks,” Eric tapped.

“But he’s the most famous science-fiction writer in the world,” I said,
and explained the kind of issues that he might ask about.

Eric, however, still wasn’t completely impressed. “Does he understand
technical things?”

I assured Eric that Arthur Clarke was technical enough to be worth his
time. “We’re going to do this by computers over the phone lines,” I
said. “In fact, I’d like you to send your questions to me by computer.
Then I’ll store them inside mine. And then I’ll shoot them by computer
to Arthur Clarke there in Sri Lanka. You’ll be communicating machine to
machine, sort of.”

“Where’s Sri Lanka?”

“It’s an island in the Indian Ocean.”

“Would you use my communications program?” Eric asked.

Eric wasn’t talking about software he’d bought. It was what he had
_written_.

“No,” I said. “I’m going to use MODEM7, because I’m familiar with it.”

“Couldn’t you say you used a communications program written by Eric
Meyer, age twelve?” he asked. It wasn’t the worst twist in the
world—good for the book, good for Eric, who, as a reporter’s son, showed
a precocious public relations sense. “I won’t use it to reach Clarke,” I
said, “but you can use it to send your file to me.”

“All right.”

“Read _2001_,” I said.

Eric readily agreed.

“I remember the title,” he said later, “but I was out when one of the
kids in my class gave a report on it.”

“I’ll want your reaction.”

“Okay.”

We also attended to another matter. Eric didn’t own an amateur radio rig
yet, and I offered to lend him my Heathkit, a little five-watt
transmitter-receiver stashed away in the closet of my efficiency
apartment.

“Is it digital?” Eric asked. Did it have, in other words, a “non-dial”
like those newfangled watches?

“No.”

“I was hoping it was.”

“It’s transistorized.” That was good enough for me. Who needed a radio
without a dial?

Eric took me up on my offer, which included the gift of some old chassis
and capacitors and other parts, forgotten until now in the crawl space
of my parents’ home. And I was pleased that Eric accepted, for I liked
the symmetry of it all. Two decades earlier Lynn Wilson had given me
some of the very equipment I’d be passing on to Eric. And so I visited
my parents’ basement that weekend and reentered the past, not only my
own but also that of electronics, including computers in a sense; for
perhaps this is how the micro age had _truly_ begun—hobbyists swapping
parts back and forth until someone accumulated enough to build a system
that actually worked.[84]

Footnote 84:

  The actual beginnings of the micro age, less romantically, go back to
  the invention of the microprocessor—a central processing unit on one
  chip—in 1970. It happened at Intel, an electronics company in Santa
  Clara, California, and was the idea of a young Stanford University
  grad named Ted Hoff.

Lynn Wilson was all over the crawl space. I picked up a 6146 transmitter
tube on which he had playfully magic markered, “For David, K4DIG, DX
King.” DX was the amateur radio jargon for long-distance communications.

I lingered in that basement, thinking that somehow, examining the past,
I might better understand the future. There were no new clues, however,
nothing but bulky transformers and spaghettilike wires and resistors and
capacitors and the other odds and ends of my youth. But what a record my
junk pile was of the American electronics industry. Half gutted, near
the 6146, reposed a silvery ARC-5, a war-surplus receiver. Had it flown?
ARC-5s were what American bombers carried during the Second World War.
Had a B-17 crew kept in touch with England with my ARC-5 while pummeling
the Third Reich? Had my receiver seen action over Tokyo? Scrapping it,
had I inadvertently defiled History? Near the ARC-5 I saw a giant
condenser for a transmitter. With row after row of plates on a metal
shaft, it looked like an electronic potato slicer. I thought of
fingernail-sized chips in computers today; the big potato slicer might
as well be an artifact from another species. There in the crawl space
the 1950s showed up in little vacuum tubes the size of pill bottles.
They were a reminder of the short-sightedness of the U.S. electronics
executives who had stayed years too long with vacuum-tube technology.
Just what did this mean to American computer makers facing similar
challenges? There was an object lesson here. Many portable computers
from U.S. companies had flat screens, for example, but most of the
display designs came from the laboratories of Japan. Although IBM would
prosper—even if half of the innards of its PCs came from the Orient—many
of the smaller American manufacturers might die. And even the larger
domestic companies could suffer in the price ranges where computers were
mere commodities; with flat displays and better memory chips, Nippon
might again make us relive the transistor fiasco. I groped, poked, and
wandered some more. And there in a dim corner I found the 1960s, too—in
the form of a Nuvistor, another pygmy vacuum tube, another refinement of
the obsolete. By the 1970s Heathkit was finally offering transistorized
ham transmitters like the one I’d lend Eric. Heath still sold quite a
few updated versions of the little HW-7. But now the amateur radio
magazines seemed half filled by ads for solid-state equipment from
Japan. How long until computer magazines looked the same?

I went upstairs. My parents, who for years had been patiently awaiting
the removal of the clutter from the crawl space, had second thoughts.
What if I injured my back dragging the equipment to my car? Why couldn’t
Eric and his father come for the tubes and chassis?

A passage from a novel—the name escaped me—came to mind. It was almost
as if, by removing my old childhood toys, I were aging both myself and
my parents.

I left the equipment at Eric’s after a meeting of the Kaypro writers
group to which he and his father belonged. They lived in a white house
in a greeny neighborhood high above most of Washington: a good location
for an antenna, a great “QTH,” as Lynn Wilson would have put it in ham
talk. The Meyers had filled the house with the paraphernalia of their
obsessions. Downstairs Rima Meyer was at her spinning wheel; a huge loom
dominated what normally would have been the dining room; and upstairs
was the book-packed den where Gene, a _Washington Post_ staffer, had
been working on a long history of Maryland.[85] No one spoke of the odd
juxtaposition—a Kaypro used to write of hogsheads and sailing ships.

Footnote 85:

  Gene’s book should appear under the title _Maryland Lost and Found:
  People and Places from Chesapeake to Appalachia_. The publisher is
  Johns Hopkins University Press.

Eric, a small, curly-haired boy, helped lug the radio gear into his
bedroom nearby. Then we soldered up the Heathkit’s connectors and began
hearing international Morse code and Spanish babble on the 15-meter
band. He was amazed. I could make sense of the dots and dashes at twenty
words per minute; he could copy at only a quarter of that speed. “Hey,
don’t worry. You’ll learn it much faster than I did,” I said. “You
learned BASIC. I haven’t the mind for it. Anyone who can program will be
a whiz at code.” And how much more useful computer skills would be. Take
communications; 20 words per minute was one-thirtieth the speed of my
dot-matrix printer. And yet I was dismayed to hear Eric speaking so
enthusiastically of the day when he could transmit in voice. To Lynn
Wilson and me, ham radio didn’t exist without code. We were like the old
man at my newspaper back in Ohio who couldn’t stand a city room bereft
of typewriters. Computers, in fact, had even violated the sanctity of
code. A micro’s video display could flash out the letters summing up the
holy dots and dashes—the ones I’d so painfully learned in my youth. I
felt like a sailboater tipped over by the wake of a motorized yacht.

I snapped off the Heathkit. Eric and I went downstairs where Rima, a
tiny woman named after the bird-girl in _Green Mansions_, was still at
her spinning wheel. She dreamily looked up at us and proclaimed herself
an anachronism. Children like Eric, she said, would be different from
those before them—would think more abstractly in this video-game era.
She wrote poetry; she heard voices; would the computer children do the
same? I thought of Rob Barnaby, the WordStar writer, who had said he
heard “a voice from the back of my head”; it wasn’t the same
back-of-the-head voice as a poet’s, but it was there, anyhow. Someday
Eric might be another Barnaby.

Later that evening I demonstrated WordStar for the Meyers. Father and
son agreed: WordStar moved words around faster than did Select, the word
processor with which our Kaypros had originally come. I turned to Rima.
“Computers are supposed to be very good for poets,” I said. “You can
consider the possibilities. You can learn what words look like before
you commit yourself to paper.” Rima listened politely, but I thought I
might as well be showing off an electric guitar to a mandolin player.
Gene and I discussed the Arthur Clarke connection. It was iffy. The
telephone lines might not work; Clarke might be away on a business trip.
Gene wouldn’t ghostwrite Eric’s questions for Clarke, but he did have
one he hoped would make the list. “At the writer’s group,” Gene said,
“this businessman was telling me how he fired his secretary when he got
his computer.” How did Clarke feel about such situations? It was a
common but acceptable question, I felt—one just as reasonable as any
that science-fiction writers and philosophers might raise about the
origin of the universe.

Two weeks later I rang Clarke, around eleven in the morning, Virginia
time. A little sleepily, he answered. He was tired after a trip
promoting the _2010_ novel in the United States, and right now he
could not recall me. “Remember,” I said, “we talked several months
ago, and you said we could get together on the modem.” Clarke had
phoned late one evening after I’d written him questions about
WordStar, and in a sense we were now even; for my mind had drawn an
absolute blank when this stranger had begun in a British accent,
“David, you’ll never guess who this is.” Well, I asked now, could we
still get together on the modem? We’d run a test to be ready for the
questions from Eric and others a few days later. “Call my computer
store,” Clarke said. He was using BSTAM, alas, a communications
program that didn’t work with my MODEM7 software. Imagine my
disappointment. I’d been hoping for quick computer-to-computer
contact, over 8,900 miles, with the inventor of the communications
satellite; and now a mundane problem confronted us—a simple lack of
software compatibility. BSTAM in some ways was a Rolls of a
communications program, excellent for transmitting large blocks of
data over long distances. In fact, Clarke had used it to send his New
York publisher some changes in _2010_. And yet, for communicating with
me, his BSTAM disk was nothing but a worthless piece of plastic,
because it snubbed MODEM7-style programs—perhaps the most common among
micro users. It was as if Clarke were a lonely billionaire in a
chauffeured Rolls. His ride might be velvety, but he would never meet
the commoners in the Chevy in the next lane.

After calling around the country, I finally located a review copy of
BSTAM. Eric helped me test it out over the phone. “May I come over and
watch you talk to Clarke?” he asked. I hesitated. Hadn’t Eric already
modemed his questions to me? His being in my apartment seemed redundant.
Then, however, I remembered my youth, when Lynn Wilson would invite me
to his attic for DX sessions. It was like angling. Lynn might not snag
those stations in New Zealand or Morocco, but it was still the
electronic equivalent of treating a boy to a morning of trout fishing in
a mountain stream. Now Arthur Clarke would be the new DX. Of course, the
Rothman-Wilson analogy didn’t absolutely hold, for Eric knew more about
computers than I did. “Sure, Eric,” I said at last, “sure you can come.”

With Eric and his mother watching a few days later, I punched the “0”
and confidently said I wanted such-and-such number in Colombo, Sri
Lanka. A tape-recorded voice soon came on with a New Yawkish accent,
announcing that all circuits to Sri Lanka were busy. Well, what did I
expect? Sri Lanka wasn’t one of the great centers of global
communications. And yet it still seemed vaguely bizarre. Why shouldn’t
Sri Lanka enjoy instant contact all the time with the whole world? Why
not? _Arthur Clarke_ lived there. Perhaps on my tenth try I finally
heard the musical tone of Clarke’s number ringing. “Eureka!” I yelled.
Once more Clarke himself answered. He warned me that he was rushing
through a movie project and some books and was months behind in his
correspondence; the most I could hope for in reply to the questions
would be a series of “Yeses,” “Nos,” and “Maybes.” That irked me. For my
enterprise I deserved a response ahead of the other letter writers; in
fact, you might say I wasn’t even a letter writer—I was a _modemer_. I
glanced at Eric. He could tell the general direction of the
conversation, and he looked just as downcast as I must have. Eric was
even hoping—quite unrealistically, I believed—that Clarke might call him
at home. “I am starting my own computer software company (R & D),” Eric
had said in a preface to his questions, “and I hope to profit in this
venture. I am enjoying your book _2001_ and want to get _2010_. I am
also a novice-class ‘Ham.’ If you ever need any software or just want to
chat, my home and work number is.... I also have interests in ROBOTICS
and COMPUTER HARDWARE, and ELECTRONICS (etc.).” I’d reminded Eric that
the technology might fail in my quest for answers to his questions; I
hadn’t been so emphatic in warning that Clarke himself might fail us.

“I’m going to need to test the modem, anyway,” Clarke said after a
pause, however. He wanted to exchange ideas with an MGM/UA director for
the movie sequel to _2001_.

He gave me the number of his telephone with a modem hooked up, and then,
several times, I again suffered the vagaries of global phone
communications before a line finally opened up and I heard the familiar
tone of a modem. I reached for my own modem, a slim blue box, and
switched over from “TALK” to “DATA.” Then I hit the return key on my
Kaypro, firing up the BSTAM program.

My screen flashed word that the connection was in progress, and I was
about to slap Eric on the back, but I waited, and quite rightly, for as
the seconds wore on, the connection was _still_ progressing. Something
was amiss. By voice Clarke said my transmission hadn’t registered in his
computer memory—not even the mere existence of my electronic file.

I called Michael Scott, a technician at Business Computing
International, Clarke’s New York computer store. He sent a Telex to
Clarke. Was Clarke using the normal 300-baud modem speed matching mine?
I learned a day or so later that he was. “Well,” I asked Michael, “how
long has it been since Clarke last communicated with you [the store]
through the modem?”

“Months.”

“Okay,” I said, “maybe he needs a refresher on how to set up the modem
program.” Patiently, Michael ran through the procedures.

Half an hour later I again was braving surly operators and busy signals
to place another call to Sri Lanka.

“What you want to do,” I told Clarke, “is type RXN B:ODYCORR.TXT, then a
carriage return, then select ANSWER when you see the prompt.” Clarke,
however, hadn’t been doing it that way. We tried again, and for the next
ten minutes my screen kept flashing dozens of confirmations of the
connection.

Then our computer link broke.

I called Clarke back. Surely at least the start of the electronic file
had shown up on the B disk, the one on which he was to store my
questions. “No,” he said, “I don’t see it.” Clarke, it seems, had
forgotten to put a floppy disk in his B drive. It was a very excusable
mistake—this whole modeming procedure was still a novelty to him—and we
failed yet another time even with Scott’s instructions followed
exactly.[86]

Footnote 86:

  Clarke’s forgetting to insert the disk in the B drive should
  underscore a truism: _all computer users can commit idiocies_. Once I
  owned a printer that I couldn’t use without unplugging my modem.
  Things worked the other way around, too—as some people discovered when
  they tried to communicate with me over the phone but couldn’t because
  I’d forgotten to yank out the printer cable and put in the modem’s.

So a few days later I settled on another tack: getting Clarke a free
Kaypro II.

Why not? Kaypro itself had once suggested that to me. It could do worse
than to be able to say that Clarke and an MGM/UA director had used
Kaypros to communicate during the creation of the _2010_ film. I, in
turn, might reach Clarke more easily if he was tapping away on a machine
like mine. Besides, he eventually could give his Kaypro to the new
Arthur C. Clarke Centre for Modern Technologies. The center was to
promote high tech in the Third World, and Joseph Pelton, who was
rounding up U.S. backers for the organization, liked the Kaypro idea. So
did Clarke. And so did Peter Hyams at MGM/UA.

Hyams wasn’t just a well-known director with such credits as _Capricorn
One_ and _The Star Chamber_. He was the kind of person for whom I was
writing this book—he had a problem open to possible solution by
computer.

The problem was the need to consult closely with Clarke during the
adaptation of the _2010_ novel; how to overcome the time difference
between Colombo, Sri Lanka, and Culver City, California?

“Some things work brilliantly when read but aren’t well suited to the
screen,” Hyams said, and as a conscientious scriptwriter he didn’t want
to make arbitrary changes to Clarke’s story. “I was interested in
finding out what the author was thinking when he wrote certain things.
And secondly I thought it was very, very important that Arthur C. Clarke
be made to feel an important part of the making of this movie.” With
rapport might come a greater understanding of the man and his books.
Hearing of Hyams’s proposal to work together via computer, however,
Clarke was skeptical. I could imagine why. Hyams would need a dependable
link, not just the capability to exchange occasional messages. It might
be 1983, satellites might be old hat by now, but the quality of the
phone transmissions didn’t belie the fact that Clarke was on an island
in the Indian Ocean. Could computers deal _reliably_ with the electronic
echoes, with the delays from the signal traveling more than 45,000 miles
on earth and in space? What about Sri Lanka’s primitive phone system?

And yet Clarke’s location—some 9,350 miles from Culver City—also helped
the struggle seem all the more worthwhile.

“Because he’s twelve or thirteen hours away in time, it almost makes
normal conversation impossible,” Hyams said. “Someone is always going to
be speaking at a very inconvenient hour for them. And there are some
times when you don’t want to talk, and sometimes when you’re asking
somebody for something, you want to think about something. It requires
more than a quick answer.” Letters, though, just wouldn’t do: “I’ve
gotten mail from him that’s almost a month old.” Hyams might have used
telex or a similar system, but the costs would still be greater than a
direct computer-to-computer link. Ideally, he could tap out memos on a
computer, then whisk them to Clarke without a secretary taking the time
to type them into another machine. Hyams was already comfortable with a
Xerox 860 word processor. Like me, however, he realized that the link
had more chance of succeeding with the two ends using the same computer
systems—Kaypros in this case. Two hardworking Kaypro employees, Margaret
Phanes and Clifford Odendhal, pushed through the project at their
company. Within a week or so a Kaypro II was on the way to Clarke, and
the company installed another in Hyams’s office; at long last, the Great
Modeming seemed at hand.

Then, however, rioting broke out in Sri Lanka: fighting between two
ethnic groups, the Singhalese and the minority Tamils, who were seeking
a separate state. Somehow Clarke’s Kaypro reached the airport. But he
couldn’t pick it up because of the rioting, during which an arsonist
burned down the house of one of his technical assistants.

“They’re swinging the jawbone again,” said an acquaintance of mine,
alluding to a scene in _2001_ where a man-ape kills another with the
high tech of his era. It was not a slur on Sri Lanka—just general
disgust over violence of any kind. News stories appeared, then stories
about the island trying to censor reporters so there wouldn’t be any
more stories.

Just when every circumstance seemed to be conspiring against me, I
enjoyed a miraculous fluke. Arthur Clarke’s neighbor Susan Hayes, the
wife of an American official in Colombo, was visiting Washington and
would return to Sri Lanka soon; and through a member of the Kaypro
writers group, Marcia Tyson, I passed on to her the written questions
for Clarke to answer by phone if need be. I wasn’t cheating. It was
perfectly in line with both the Marco Polo tradition and the spirit of
this book; don’t ever shy away from paper backups.

I also supplied Clarke a disk of MODEM7, the public-domain program that
I used—so that we needn’t worry about software differences if my program
didn’t work with the one that Kaypro gave him.

Kaypro, in fact, did provide Clarke with MODEM7-compatible software—a
company program—but it wouldn’t run acceptably on Peter Hyams’s
computer. So both men instead received a commercial program called MITE.
There was a problem, though, as Peter and I prepared for the Great
Modeming—I couldn’t be Arthur C. Clarke. My MODEM7 could talk to Peter’s
MITE, but it wasn’t really the same. With MODEM7 you couldn’t leave your
computer unattended and have a machine thousands of miles away call you
up and choose from dozens of electronic files on your disk. With MITE
you could.[87] And Peter, true to the perfectionism of a top director,
wanted his rehearsals to be as realistic as possible. “I’d like to be
Arthur Clarke,” I told a kindly software dealer, who gave me a review
copy. MITE, however, locked up on my machine. On the screen it
stubbornly kept saying I was receiving signals from another
computer—even before I turned on the modem.

Footnote 87:

  MITE’s auto-answer feature won’t work without an appropriate modem. My
  own modem was manually activated, meaning that I couldn’t take
  advantage of this wrinkle. I could, however, switch on the modem when
  Peter called. And for him, that would realistically duplicate the
  experience of reaching Clarke’s computer.

So I visited a hacker I’d heard of. He was a little technobully, who,
bare chested in the August heat, worked sullenly on my software, making
rude noises whenever I asked a question. MITE seemingly succumbed to his
efforts. He berated me for not using the right number of data bits, the
right stop bit, the right everything else in computerese. Chastened, I
returned home, only to find that the program still wasn’t working
reliably.

I took my Kaypro and software to a friend, a systems analyst, an
intelligent, learned man fond of aphorisms like “Even kings must obey
the rules of mathematics.” Unfairly, cruelly, MITE still wasn’t running
after five hours of his toil. My friend played by the rules; he’d based
his whole career on following instruction manuals; he was the perfect
man to help run the computer system of a hospital or bank. I was just
the opposite. When it came to the laws of math or computer manuals, I
was willing to turn criminal. In fact, that’s how I undeservedly
succeeded at last—by flouting MITE’s instructions on connecting my
computer and modem.

It was the first time in years that I’d used a soldering iron. I didn’t
own a vise, even, so I placed the RS-232 connectors on an aluminum pie
plate on the wooden floor of my apartment and breathed lead-poisoned
fumes.

The work was hot. It was also murder on my eyes, hardly the joy I
recalled from amateur radio—a task fit for robots, not people. Squinting
away, I hoped that beneficent HALs would soon multiply in the world’s
factories. Then I remembered my friend Lynn Wilson, a telephone-company
retiree who had soldered for decades, who loved it, and who had lost his
service job to computers.

With MITE running at last—and with me as a more Clarke-like imitator—I
began another series of rehearsals with Peter Hyams. The program was
excellent; the instructions were bewildering in places. Peter called a
MITE distributor and traded insults. It was outrageous. We were not
ordinary end users. Peter was a movie director trying to communicate
with a famous novelist-scientist; and I, if an obscurity, was at least
around to chronicle whatever abuse Peter suffered.

What would average computer users have done? Without other MITE owners
to share their problems, they would have been up the creek. The whole
ordeal was a potent argument for user groups; in fact, you might say
that Clarke, Peter, and I were a three-member one. Clarke, meanwhile,
was reportedly suffering a disk-drive problem. He may have enjoyed
sympathy, however, from another user—nearby; an American in Sri Lanka
owned a Kaypro. Of course, the ordeal was still another argument for
easier-to-master software.

Finally, it happened: the Great Modeming—more than six months after
Clarke had first phoned me from Sri Lanka.

Hyams and Clarke started typing messages to each other, and I knew my
own Great Modeming would succeed. But a problem lingered even now.
Colombo and Culver City couldn’t send already-typed material to each
other’s unattended machines.

So one of Clarke’s first messages to the MGM/UA Kaypro wasn’t exactly
“What hath God wrought?” It was something in the spirit of “Tell **** to
fix that software or I’m going to throw the computer in a river. And
tell **** that Sri Lanka has many rivers.” A furious Hyams and Rothman
phoned Odendhal, who promptly contacted the distributor. Contrite, the
MITE man apologized and gave Hyams the guidance he needed.

The Clarke-Hyams link was now in place. It hadn’t been easy. The two men
were each using a $1,595 computer, a modem selling for several hundred
dollars, and a communications program listing for more than $175, and
Peter’s new printer cost several hundred; and those expenses normally
would have been only the beginning. Kaypro had set up the software and
offered other consultant-style services; Clarke used his own technician.
If Average Company, Inc., had duplicated the computer link on both sides
of the Pacific, the project might have exceeded $5,000. And yet clearly
the technical hurdles seemed surmountable and the rewards worthwhile.
Two weeks into the link Hyams had only one complaint—the difficulty of
reaching an international operator at times to place calls. And in
future years that problem would lessen as special computer links let
Telenet spread into the world’s poorer countries. An attachment to make
the Sri Lankan phone system compatible would cost the government several
thousand dollars. And the expense to Clarke and Hyams would be perhaps
$60 an hour—no great barrier, considering that they could transmit
1,000-word computer files in a fraction of that cost using 300-baud
modems. With faster modems they might end up spending still less.

More important to Hyams right now, however, was the friendship he was
building with Clarke—so important to the success of the film.

“I think we’re kind of linked in a strange way,” Peter said. “He’s
written some lovely and sweet things. It’s strangely intimate. You’re
just getting daily mail. It has some really wonderful advantages that
letters have over telephone conversations.

“The kinds of questions that I’m asking him and the kinds of things I’m
saying are things you don’t really say off the top of your head. You
know, ‘What do you think about so-and-so?’ and you sit down and compose
the answer and you write it back. Some of the stuff is purely personal.
Some of it is not. I want him to experience the making of this movie.
There are a lot of logistical details. I’ve spoken to some people that
Arthur’s recommended I speak to. There are things to do with everything,
from marketing to plans I have, to changes I want to make, to What does
he think of certain things? to technical areas of the film that he can
be enormous help with.”[88]

Footnote 88:

  A Ballantine paperback titled _The Odyssey File_, records much of the
  computer dialogue between Clarke and Hyams. Very briefly Clarke also
  writes of the link in _Ascent to Orbit: The Technical Writings of
  Arthur C. Clarke_, released by John Wiley & Sons, New York, in 1984.

Clarke, using British spelling, modemed to me that the “connextion” with
Peter Hyams was “invaluable. We are on exactly the other side of the
clock, so I leave my machine on ANSWER with a file for him when I go to
bed, which is about the time he goes to MGM, and when I get down to
breakfast, there’s his answer on the disk.” If Peter worked late at
night, the two men might save their “conversation” on computer disk so
“there will be a complete record of our collaboration. It’s truly
fantastic, like WordStar. I just can’t imagine how I ever managed
without it. My big worry is that as more and more of my friends get
plugged in, I’ll never be able to get away from the keyboard.”

A few days before Clarke sent his written answers for Eric Meyer and the
others, he phoned him just as Eric had hoped. “I wouldn’t want to
disappoint the boy,” Clarke said later. The Clarke-Meyer conversation
was brief—words to the effect that Clarke would be in Washington in 1984
and he wished Eric luck in the future—but it served its purpose. “It’s
the first time I’ve ever had an international call,” Eric said. “My
first phone DX!”

My computer DX reached me one Saturday morning at nine, an uneventful
occurrence except for a broken telephone connection when I dialed Clarke
back to start the modeming. Our two Kaypros clicked the next try. I
received a prepared file from Clarke of about one thousand words, and
afterwards we tapped out some 250 words:

Q. When will you be coming to Washington so I can tell Eric, who
  naturally will want to attend your speech?

A. I am afraid it will be a very private affair, as it takes place in
  the White House! But I expect to be in Washington in late April.[89]

Q. I am planning to call my ergonomics chapter “The Hal Syndrome,” and
  if you’ve used that phrase before, I’d like to give you credit.

A. I don’t recall ever using the term, but it’s a good idea, and you’re
  welcome, anyway.

Footnote 89:

  President Reagan’s campaign schedule and trip to China forced him to
  cancel his April 1984 meeting with Clarke.

That’s part of the conversation with the typos cleaned up—on-line typing
isn’t for the vain. Clarke was brisk at the keyboard. There wasn’t any
doubt I was “talking” to a professional author. Hyams was fast, too,
reaching maybe eighty or ninety per minute on good days; and yet as
Peter pointed out, typing speed didn’t matter that much, since you
normally would compose at leisure, then squirt out your prepared
file.[90]

Footnote 90:

  In the postscript of _Ascent to Orbit_, Clarke described himself and
  Hyams as “lousy typists.” They may be in terms of accuracy but not
  speed—and, of course, with a computer, you can correct mistakes so
  easily that accuracy becomes secondary to speed.

The Clarke-Rothman connection ran just fourteen minutes and cost $25.11
on my phone bill—a good case for the economy of global computer
communications. I didn’t know what Clarke’s rates might be. But if I’d
given a thousand words to a Telex service in Washington, D.C., a one-way
message to Sri Lanka would have totaled some $125. And if I could have
afforded my own Telex machine? Well, the connect charges alone still
would have exceeded $60. Moreover, my $25.11 charge was for a 300-baud
connection, a slowpoke one by some business computer standards. With a
1,200-baud link—a strong possibility since the connection had proved so
reliable for Clarke and Hyams at 300 baud—my phone bill might have been
well under $15 even on a weekday. And with everything sent already
typed, it might have been between $5 and $10. Imagine the thousands of
dollars a company could save using micros instead of Telex for regular
communications with faraway offices.

In one of the questions sent there Marco Polo fashion, Eric asked if
computers someday would replace secretaries who took dictation. Could
the machines display the words on their screens and electronically
police spelling and grammar? “We will certainly get computers that can
take dictation,” Clarke replied by modem, “and this may lead to two
desirable results—better elocution and rationalisation of spelling.”

Yes, yes. Maybe someday American and British computers could even spell
alike. Although Eric’s question was a very good one, it was passé in
many technical circles, as he himself must have known. Articles were
already appearing in micro magazines about low-cost computers that could
recognize simple commands like SAVE (to preserve material on a disk).
One of the big problems with speech recognition was usability with
different voices. But I had no doubt that practical machines with a
vocabulary fit for the business world would be taking dictation by 2001.

The keyboard would remain, however. Not everyone would want to dictate;
I suspected even two decades from now I’d still prefer the pleasure of
letting my fingers linger over the keys. Then again, how did I know?
Just a few years ago I could have seen myself at only a _typewriter_
keyboard.

As for spelling checkers—well, there again the basic technology was
already around. I myself would be proofing this chapter with The WORD
Plus, a 45,000-word electronic dictionary that would flag the places
where my spellings contradicted it. Not that The WORD Plus would ever
replace proofreaders at The _New Yorker_. It would let you use “his”
when you meant “this”; it was absolutely incapable of considering
spellings in context. Even by 2001 the checkers might lack that
capability. But eventually they would respond perfectly to context, as
would grammar checkers. That might require artificial intelligence, the
ability of computers to reason independently without their humans laying
out the machines’ tasks in detail. But the day would come.

Of course even the best prophets could err. In his 1945 article entitled
“Extra-Terrestrial Relays: Can Rocket Stations Give Worldwide Radio
Coverage?” Clarke predicted communications satellites but missed by a
mile in another area. “It seems unlikely that we will have to wait as
much as twenty years,” he said then, “before atomic-powered rockets are
developed....” Still, I appreciated Clarke’s general philosophy of
prediction: Experts are more often wrong in saying something _can’t_ be
done than in saying that it _can_.

“Do you think there will ever be a HAL?” Eric asked Clarke.

“Yes,” Clarke said, “HAL will arrive—but not by 2001!”

I agreed. But confusingly, HAL wouldn’t necessarily be a pure-bred
silicon creation; I could see him as a hybrid of silicon chips and
biochips, or maybe just the latter.

Created by an organic process, the biochips might have complexity and
power far beyond those of old-fashioned machines with silicon.[91]

Footnote 91:

  In the early 1960s Clarke himself wrote in _Profiles of the Future_
  that “the first genuine thinking machines may be _grown_ rather than
  constructed; already some crude but very stimulating experiments have
  been carried out along these lines. Several artificial organisms have
  been built that are capable of rewiring themselves to adapt to
  changing circumstances.”

What’s more, instead of a machine acting like a man, scientists might
help join men with machines, with everyone receiving brain implants at
birth. Men might turn into Hal before Hal became a man. For years
science-fiction writers had been predicting cyborgs, man-machine unions.

In some ways, humans might forever defy emulation. “Even with computers’
vast memories, I’m skeptical as to whether a machine could give
judgments based on ethics,” said another of the questioners, Jerry
terHorst. “How can executives live with this limitation? Might computers
have a way of taking the sharp edge off ethical questions? Quite often
you can put things in a machine or say things to a machine, but
maybe—because of the way it operates—you must conform to its system. You
can’t very well couch an ethical question for the machine, because I
don’t think a computer can weigh it ethically. It can certainly weigh it
procedurally, but whether it can weigh it ethically is another question.
I’m wondering whether computers might get in the way of having to make
some of the ethical decisions that businesses are always required to
make.”

Clarke replied, “It will certainly be some time before computers
understand ethics (not too many humans do, for that matter), but _in the
long run_ it is impossible to rule out any aspect of human activity
which cannot be reproduced or at least imitated by computer to any
desired degree of precision. Of course, some things will be too
complicated to be worth doing.” Elsewhere in the response Clarke did
say: “I know nothing about corporate or any other form of management,
but obviously in principle computers can assist decision making greatly.
However—GIGO!” Garbage in, garbage out!

Already electronic decision programs were available for businessmen,
helping them consider financial factors—but in most cases, not very much
more. Besides, the people who most needed guidance from “ethical”
software would be the least likely to use it. Imagine Richard Nixon
booting up a disk to ponder if he should cover up Watergate.

All this wasn’t an abstraction for terHorst. He himself had resigned as
press secretary in a disagreement with Gerald Ford over the Nixon
pardon. Now he worked as Washington public-affairs director for another
Ford, the car company. It undoubtedly had banks of computers, and like
any other automakers’, they must be toting up the costs of adding
various safety precautions to cars. Critics of the auto industry charged
that manufacturers considered only their ledgers—the cost of the
precautions versus that of lawsuits. Would software someday weigh the
ethical issues along with the numbers, and _should_ it? That was hardly
a question just for the auto industry. What about a construction company
evaluating building materials of different strengths? Or a book
publisher weighing its profitability against the menace to public health
that would result from publication of a fad diet book. I was reactionary
enough to consider those final decisions forever beyond the realm of
even computers as sophisticated as HAL. In the future, though, how many
executives would feel that way? Jerry terHorst’s ethics question was
easily my favorite.

He also asked, “What about the general issue of trust among people
communicating by computer? Can people make policy, sign contracts,
settle multimillion questions without shaking hands? You can have two
people with computers in different locations calling up the same
statistics from the same memory bank. Yet isn’t it possible that the
necessary trust may not occur until the two get together in person?”

“Your point that people must meet to establish trust is one theme of my
novel _Imperial Earth_,” Clarke replied. “After that, they can work
together through telecommunications.

“I had unexpected confirmation of this idea from a visiting reader who
happened to be the Russian ambassador-at-large in charge of the Indian
Ocean. He said, ‘You’re quite right. You have to look into the other
fellow’s eyes before you can negotiate.’”

In _Imperial Earth_ a man from a moon of Saturn visits Washington in
2276 to celebrate the U.S. quincentennial and cultivate his family’s
terrestrial political contacts. Wreckers have razed the original
Watergate complex—over the objections of the Democrats, who wanted it
saved as a national monument—but in many ways politicians and statesmen
are the same as in the darkest twentieth century. They seek personal
contact with each other. “Only after that contact, with its inevitable
character evaluation, had been made, and the subtle links of mutual
understanding and common interest established,” writes Clarke, “could
one do business by long-distance communication with any degree of
confidence.”

A booster of telecommuting might nod. He’d insisted that we meet
_face-to-face_, and I suspected I could have enjoyed slightly better
cooperation from a few other interviewees for this book if we had been
in the same rooms. Wires and satellites could never eliminate travel.

Granted, some researchers might say the next year that people tended to
use stronger words in computer conferences, perhaps to make up for the
lack of body language and other visual clues. Reportedly, the decisions
from such conferences tended to be more radical—involving much more risk
or not enough—than those made face-to-face.

Just the same, computer “meetings” could greatly reduce travel once the
people at the various ends had established the basic trust. Clarke had
written two decades ago, “The business lunch of the future could be
conducted perfectly well with the two halves of the table ten thousand
miles apart; all that would be missing would be the handshakes and
exchange of cigars.”[92]

Footnote 92:

  Clarke’s conjecture about the business lunch of the future appears in
  _Profiles of the Future_, Harper & Row, New York, 1962, p. 194.

That might or not be with television contact. The absence of it,
however, wouldn’t be the ultimate disaster. In concentrating on the
other person’s _message_, you might be less vulnerable to misleading
clues from facial expression, body movement, or clothing. Clarke himself
enjoyed creating different personae for different audiences; once his
sarong had shaken up an IBM convention. A Washington reporter described
him at another time as “a paunchy fellow” with thinning hair,
“math-teacher glasses, discreet hearing aid ... red velvet slippers and
unbelted pants” who looked “like some kind of GS-12 from the Bureau of
Poultry Audits. And he wants you to see his Kermit the Frog doll.”[93]
Yet this same man could don dark suits for book jackets and deliver
august speeches to statesmen.

Footnote 93:

  The “Bureau of Poultry” description of Clarke comes from Curt Suplee’s
  _Washington Post_ article of November 16, 1982. Suplee also saw Clarke
  in nonbureaucratic attire—the sarong.

Beyond reducing the opportunity for visual distractions, long-distance
contact by phone or computer offered another advantage in my opinion.
You could reach more people in a given time to confirm their facts; you
weren’t twiddling your thumbs in cabs and airport lobbies or wearily
working the horn locally from a hotel room with a bed fit for a
steel-spined dwarf.

That still left the question of what kind of office you would talk to
the world from. Margaret Phanes of Kaypro wanted to know. The week
Margaret asked about the office of 2001, she said she was in the middle
of reading Clarke’s novel _Rendezvous with Rama_. In her opinion, Clarke
brought about “synchronicity.” He himself, in fact, had once told of
“preposterous” coincidences in his own life, and he’d peopled _Imperial
Earth_ with characters like “George Washington,” a twenty-third-century
Virginian who lived on a museum’s plantation named Mt. Vernon. If
“synchronicity” or other coincidences had worked for Dickens, then why
not Clarke and Phanes? Or Rothman? Trying to puzzle out some technical
details of my computer-to-computer link with Clarke, I’d run into two
noncelebrities who had met him. And what about his neighbor—visiting
Washington—through whom I’d passed the questions from Margaret and the
others? Coincidence needn’t be mystical. I was happy enough for it
simply to be useful.

Replying to Margaret’s questions about what the office would be like in
2001, Clarke had a problem. For decades he had been working at home. “My
‘office,’ if you can call it that—it looks like a snake-pit with all the
cables on the floor—is just ten feet from my bedroom. I can appreciate
your questions are very important, but they’re outside my frame of
reference.”

Clarke may have replied in a limited way to Phanes, however, when he
answered a question from Seymour Rubinstein.

He’d asked Clarke about the possibility of briefcase computer tapping
into worldwide networks to do complicated processing of information.
Just how would that affect people?

Years ago Clarke had said a business eventually wouldn’t even need “an
address or a central office—only the equivalent of a telephone number.
For its files and records will be space rented in the memory units of
computers that could be located anywhere on earth. The information
stored in them could read off on high-speed printers whenever any of the
firm’s offices needed it.”[94] And now Clarke was predicting little
portables capable of using the giant networks and memory banks. “It
seems to me that as computers become more and more portable and networks
more universal (and systems standardised—a MUST!) there may no longer be
any question of ‘micros in the office.’ The office will be in the
micro—and _that_ will be in an attaché case.” Rubinstein himself already
knew that Epson was about to market its little lap-size machine with
WordStar built into the read-only memory.

Footnote 94:

  Clarke’s prediction of a business having “only the equivalent of a
  telephone number” is from _Profiles of the Future_, p. 194.

Rob Barnaby, the WordStar programmer, asked a slightly overlapping
question covered by the same answer. There was something else for them
from Clarke, however—his thanks.

“I am happy to greet the geniuses who made me a born-again writer,” he
said. “Having announced my retirement in 1978, I now have six books in
the works and two portables—all through WordStar.”[95]

Footnote 95:

  Discussing WordStar, Clarke was careful to point out that he had
  “never used or even seen any other word-processing system” and had “no
  frame of reference,” but found “only a few small nits to pick with my
  version. (Release 3 of 1981, WU644275C).” Among other things he
  repeated a complaint I myself have against WordStar 3.0. “I do wish
  one could see the printed instructions actually operating on the
  screen text,” Clarke said, “so it wasn’t messed up by those ugly
  control characters. That would also have the enormous benefit of
  preventing the sort of boob I made for the first few weeks—not closing
  the print instruction, with horrid results, e.g., underlining to the
  end of the manuscript!!”

James Watt, the descendant of the Scottish inventor, also figured to an
extent in Clarke’s work, in the sense that the Haunted Book Shop sold
it. “A computer disk the size of a phonograph record can hold about
54,000 frames of pictures,” Watt observed in his questions, “enough for
a large encyclopedia. Does that mean we’ll see the end of going into a
bookstore and buying a best-seller? Are we going to lose the printed
word as we know it today? Will ‘book’ buying become a computerized
activity? Will I call up XYZ computer firm and then peruse disks at my
leisure?”

“Nothing will ever replace books,” Clarke reassured him. “They can’t be
matched for convenience, random access, nonvolatile memory (unless
dropped in the bath), low power consumption, portability, etc.

“But information networks will supplement them and replace whole
categories, e.g., encyclopedias and telephone directories (as is being
planned in France).”

Clarke was more sanguine about Watts’s fear that computerized shopping
might “dehumanize us” and clerks might vanish. He said, “I believe
personal service will become more and more important and hopefully more
and more available as older occupations disappear. We’ll ‘window-shop’
through home terminals but will still discuss important products with
salesmen, even if they’re hundreds of kilometers away!”

The seventh questioner, Lynn Wilson, had worked several decades for the
Chesapeake and Potomac Telephone Company, only to see computers do away
with the rotary switches he had so lovingly attended.

“They’ve sent all my equipment to the smelter’s to reclaim the metal,”
he said. “I don’t know if anyone’s still in the building. Maybe a few
times a week someone goes by. The equipment tests itself twenty-four
hours a day and flashes a red light for the serviceman next time he’s
there.” Just a few boxes had replaced the long rows of devices that
connected the dial phones in the area of Alexandria, Virginia.

But Lynn didn’t feel any futility. The telephone and teletype themselves
had superseded another invention he used—the Morse Code telegraph.

He’d pounded out messages at up to forty words per minute for the
Wheeling and Lake Erie Railroad, and he still recalled an old saying
reflecting his pride in his craft:

“If a telegram takes more than twenty-four hours to be delivered, it has
whiskers.”

My friend had a feel for the scraps of history. For years he’d kept a
Teletype message announcing the Third Reich’s surrender, and I asked
about the ARC-5 receiver that he’d given me: could it really have flown
over Germany? “Go to the Air and Space Museum in Washington,” Lynn said,
“and you’ll see a cockpit with an ARC-5. I’ve even seen an ARC-5 with a
.50-caliber bullet hole right through it.”

Lynn was hardly a foe of every piece of post-ARC-5 technology. In late
1983 he hoped to be among the hams talking on the two-meter wavelength
to an astronaut aboard the space shuttle.[96] Just the same, Lynn feared
the years ahead—not so much his own fate as other people’s.

Footnote 96:

  Alas, Lynn tried but did not successfully make radio contact with the
  space shuttle.

“Aren’t computers turning people into useless objects against their
will?” Lynn asked Clarke. Gene Meyer, Eric’s father, of course had
wanted Eric to ask a somewhat similar question. But it meant more coming
from Lynn.

“Computers eliminate people, who take vacations, sick leave, and
retirement,” he said. “I myself haven’t suffered. I took voluntary
retirement at full pension at sixty-two. But computers were why I left
then instead of sixty-five. I would have had to go to school for three
years, and by then I would have been ready for regular retirement. So it
didn’t make sense for me to stay. But not everyone can retire at full
pension when the new technology takes over. What do you do about the
people being forced out? What’s the answer?”

“Anyone who can be turned into a useless object against his/her will
_is_ one!” Clarke said. “You obviously weren’t.”

That was too pat an answer for me. The other day I’d talked to my old
state editor, who’d visited Lorain, Ohio, west of Cleveland on Lake
Erie. He feared that Lorain might become a husk of a town. A decade ago,
when I’d been a reporter there, more than eight thousand had worked at
the U.S. Steel mills, and Dick worried that the company might pull out
of Lorain except for a bare-bones plant employing just a few hundred.
Downtown, he’d seen dozens of shattered store windows. Oddly, however,
the newspaper enjoyed some new subscribers—Dick said some of his friends
could afford to do little more than watch television and read. Were
Dick’s friends to be shrugged off as “useless objects”? In _Imperial
Earth_ Clarke had told of stringent population control, of an American
Midwest replanted with forests, of steel mills neatly preserved as
museums; but three centuries earlier, Lorain untidily abounded with
angry, idle men. Cheap steel imports were one threat to them. So,
perhaps, was the eagerness of many steel-company officers to pour their
capital into more profitable industries. But computers and other high
tech also had helped deprive Lorain of some steel jobs.

In the future, however, couldn’t even a factory technician
telecommute—overseeing robots from home and using them to turn out
custom-crafted products requiring a human “touch”? Ideally, America in
2001 would be producing something besides “information,” Big Macs, and
look-alike toasters. And ideally, too, average workers could afford to
enjoy the cornucopia. In fact, widespread genetic enhancement of IQs
might _eventually_ make everyone capable of appreciating high tech at a
high level, so that “workers” in the old sense disappeared. Huxley’s
_Brave New World_ hierarchy might never exist, and in the twenty-second
century we might all be Alphas smarter than any of today’s computer
wizards. Robots would be our real Epsilons.

Meanwhile, regardless of the traumas of society at large, some of the
most unlikely people could befriend new machines. Jack LaVriha—the
cigar-chomping newspaperman in Chapter 8 who dated back almost to the
_Front Page_ days—had done fine in the Lorain _Journal_’s electronic
city room.

Even Rima Meyer, the weaver, had made peace with the family Kaypro. Just
a few months ago Eric’s mother had given me the impression that she
wouldn’t use the computer for a long time if at all. But now Gene had
nearly finished his Maryland book—freeing up the Kaypro for her to
practice on. “I use it for personal correspondence and for the fliers
for the weaving classes I teach—anything that requires good, clean
copy,” she said. The Meyers, in fact, didn’t even have a working
typewriter in the house. Well, I thought, so much for all my blather
about mandolin players and electric guitars.

To be sure, computerization would rarely be as worry-free and blissful
as the advertisements depicted it. There would be computer crime, disk
crashes, all the other high-tech woes. Few people would take to
computers as naturally as had Charlie Bowie, with his playful,
Hawkeye-Pierce attitude toward his little Zenith.

And how many could save their companies $200,000 a year like Alan
Scharf? Or experience the exhilaration of Peter Hyams when Arthur
Clarke’s letters flashed across his green screen? Or the satisfaction
that Rob Barnaby received by writing a software classic like WordStar?

But if computer users not only chose their machines and software well
but _used_ them well, if they formed users groups rather than trust
peripatetic sales reps, if they avoided technobullies and hired
consultants carefully, if they trained employees in a nonintimidating
way, if they computerized humanely as well as efficiently, if they
safeguarded their data security, if they prepared for the future through
telecommuting when appropriate, if they showed persistence and sense,
enough rewards were there, and they’d find the Silicon Jungle to be not
only survivable but friendly.




                              ❑ Afterword


It’s November 1984 now, and I’ve sold my Kaypro.

Business computers are production tools, not family heirlooms; when I
found that the Kaypro’s screen and storage capacity were becoming
inadequate for my needs, I unsentimentally ran want ads. The new owner—a
church magazine using the Kaypro for lighter-duty work such as letter
writing—couldn’t be happier.

The Kaypro’s replacement was a sleek Victor 9000. I was growing
accustomed to it when a writer friend, Stephen Banker, called with news
of an auction at a shut-down computer store a few miles from my
apartment. A year and one-half ago the store’s managers and I had argued
about the Kaypro’s merits versus the Osborne’s. They’d gambled on the
wrong machine, the Osborne. Micro sales in general were growing, but
this business had perished in the Silicon Jungle.

Now I returned to the store and saw the debris of the micro revolution.
Spread out haphazardly on long tables, treated like dead fish, were the
computers that I’d seen glamorized on the covers of the micro magazines
just months before.

The auction had begun on a Thursday and would last over the Labor Day
weekend through Monday. The first day the prices were reduced 30
percent, and they would keep declining, until on Monday you could buy
most of the machines for 80 percent off. It was now Friday.

The machine I wanted, a hard-disk version of my Victor 9000, would be
$2,400 Sunday—40 percent of the original list price of $6,000.

“Don’t buy it Sunday,” said Steve. “If God intends you to have a hard
disk, He’ll let you get it for $1,200 Monday.”

There were two hard-disk Victors, one new, one used, both selling for
the same. So far only one other person seemed to be showing the amount
of interest that I did, a husky, gray-haired man in a T-shirt. He was
trying the used machine. I wondered if he’d seen the new one and was
trying to distract me from it. This could be the stuff of nightmares:

  _A whistle blows that Monday. T-shirt pushes a frail young auction
  staffer aside and races toward the new Victor. I overtake him,
  however. Just as I’m about to lay hands on the machine, T-shirt throws
  a punch toward me. I duck. T-shirt grabs the Victor monitor._

  _“Listen,” I say, “that computer isn’t yours unless you get the main
  part. The monitor won’t do.”_

  _An auction staffer nods._

  _I unplug the main machine from an AC extension cord. T-shirt,
  however, sets the monitor down and moves closer, as if to grab the
  part with the disk drives and the central processing unit._

  _“Look,” I tell the auction staffer, “it’s my machine.”_

  _“First come, first serve,” he says. “First to the counter gets the
  computer.”_

  _T-shirt flexes his biceps. “You and me got some fighting to do.”_

  _“Hell, no,” I say. “I already have my computer.”_

  “My _computer,” T-shirt growls. I hug the Victor more tightly. My back
  is aching. T-shirt laughs at my discomfort._ “My _computer,” he
  repeats. “Gimme!” The auction staffer watches calmly. I don’t. That’s
  $6,000 worth of machinery we’re fighting over. Suppose I drop—_

  _T-shirt rushes in. The computer’s plastic case smacks against the
  floor and shatters. Simultaneously, one of us brushes against the
  monitor. It, too, falls; and the CRT makes a horrible sound as the air
  rushes into the vacuum. The Victor, however well built, isn’t a
  machine to be fought over, barroom-brawl fashion. On the floor I see
  tiny computer chips and spaghettilike clumps of wire. God knows how,
  but the hard disk has spilled out of the Victor and is rolling down
  the aisle of the store._

  _The auction staffer makes clucking noises. I glare at T-shirt. “You
  saw it all,” I tell the staffer. “He’s the one who’s going to have to
  make good.”_

  _“Hey, boss,” the staffer yells toward the counter, “we got ourselves
  a little accident here.”_

  _The chief auctioneer rushes over and looks over the Victor’s
  remains._

  _“He smashed it,” I say, frowning again at T-shirt._

  _“But you let it drop,” T-shirt snaps._

  _“The price was only $1,200 on the last day,” I remind everyone. A
  lump is forming in my throat. Inflation notwithstanding, I’ll never
  feel right putting “only” in front of “$1,200.”_

  _“Well, it was still worth six thou,” says the head auctioneer. “See
  you both in court.”_

  _“Both?” T-shirt and I ask at the same time._

  _“Both,” says the auctioneer, “unless you want to pay now. That’ll be
  $3,000 each. Cash or certified check?”_

Hoping that T-shirt wouldn’t notice me, I put the new Victor through its
paces as much as I could. It wasn’t set up to run WordStar, the program
I wanted to test it with. I’d be taking a chance. Still, if I bought the
Victor for $1,200, I’d have enough money left over for even massive
repairs—assuming someone didn’t beat me to the machine.

“Maybe I’ll buy it myself,” said a sales rep, out of either cruelty or a
desire to increase my interest still more, assuming that was possible.
“Maybe I’ll sell it for scrap.”

He himself was a good six foot four inches, perhaps three hundred
pounds, but some Victor enthusiasts might have thrown a few punches,
anyway, at the source of such sacrilege.

The Victor, unlike most of the other micros there, wasn’t the computer
equivalent of a dead fish.

With the built-in hard disk I could keep every syllable of _The Silicon
Jungle_ ready for editing without jockeying around the floppies. I
silently thanked “Big Blue” IBM for the bargain that might await me.
Through its normal marketing muscle, including a massive ad campaign
featuring a Charlie Chaplin look-alike, IBM had overwhelmed the
competition. People shunned “obscure” brands, especially if they
couldn’t use IBM PC-DOS IBM software. The Victor didn’t have Charlie on
its side. Some bozos at the company even _charged_ dealers for
promotional literature.[97] But what a micro! The Victor was a 16-bit,
MS-DOS machine and ran WordStar 3.3 and the CrossTalk communications
program, the software I used in my work. The screen was noticeably
sharper than the IBM’s; the keyboard was closer to a Selectric’s; the
light brown plastic cabinet was sleeker, and it didn’t take up as much
desk space as an IBM PC would. And the floppies could store an amazing
1.2 megabytes of information or three times as much space as the usual
IBM disk. How lamentable that IBM rather than Victor had set the
standard for the personal computer industry. Victor had gone into
chapter 11, but subject to court approval, would be bought by a Swedish
company—and even if the sale doesn’t go through, there would be 100,000
Victor owners, enough to guarantee a market for replacement-part
manufacturers. IBM might have the brand name. But the Victor right now
was best for _my_ needs.

Footnote 97:

  A former Victor employee tells me that charging dealers for
  promotional material isn’t that uncommon a practice. I realize that
  some dealers may waste literature, but I still think the practice is
  dumb.

“When’s a safe time to get here before anyone else gets the Victor?” I
asked the sales rep.

“We open at nine o’clock,” he said.

“Won’t do me any good to come several hours earlier?” I asked out of
curiosity—I’d show up regardless of the answer.

He shook his head.

That night I called Steve, just to overcome last-minute doubts. The
better the bargain, the more suspicious I should be. “You think I should
go ahead?”

“Why not? The biggest problem you’ll have is selling your present
Victor.”

I’d paid $1,750 for it new, through the mail. It, too, had been a risk.
I’d taken out a maintenance agreement with a local company in case the
new arrival turned out to be a lemon. It hadn’t been. But could I
recover the money selling a supposedly “has-been” machine?

Monday, I arose at five in the morning. If the Victor was still there
and if I got to it before anyone else did, I’d save more than $4,000 off
the normal price. For four hours of waiting? I’d have to be a regular on
all the best-seller lists for my time to be worth $1,000 an hour.

When I pulled into the shopping center, I saw no one else there except
for a police car passing through. An old van wheezed into the parking
lot a few minutes later. A bearded man and a boy of perhaps ten got out
and set up a canvas chair; veteran auction goers? They’d have advice on
the best way to fight the crowd and claim my prize.

The man, however, just gestured and grunted. The boy couldn’t speak,
either. They were apparently deaf mutes. I pulled out pen and paper and
learned they were after Atari-games software.

Maybe an hour later a few others straggled in, one of them a
psychologist, with whom I began discussing the great issues of the day.

“You’re not interested in the Victor, are you?” I asked.

“I’m looking for Osborne software,” said the psychologist.

“What about detachable keyboards and monitors?” I asked, remembering my
nightmare over the criteria for laying claim to a machine.

We decided that proper auction etiquette required you to defer to the
person who carried away the main part of the computer to the counter; an
auctioneer later agreed.

Miraculously, a small, orderly line was forming even now, with fifty
people in front of the store by eight. Over the next hour a mob came,
some in old jalopies like the van, others in Cadillacs and BMWs. There
was both excitement and desperation. Many people, like me, simply would
forego buying a new computer if someone else beat them to a suitably
priced machine. Should I lose out on the Victor, I’d just spend another
year or so juggling floppy disks around. Others, however, might have
been hoping to be able to afford a serious business computer, period.
No, it wasn’t like the Depression, but I couldn’t help thinking of the
dance marathons of the 1930s where the hardiest carried off the prizes.
I was the first in line—of all the hundreds of people—but I certainly
didn’t boast the strongest back. Just a few feet down the line I saw ...
T-shirt.

An auction staffer picked up a bullhorn. He said only fifty people could
come into the store at once. I heard sighs. Relatively few people,
however, left that line. Maybe, just maybe, the others wouldn’t
appreciate the merits of the bargain machines that they themselves
wanted. I hoped that to most in the crowd the new Victor would be just
another dead fish of a micro.

Finally, it was nine. The salespeople—as if at a fire—urged the crowd to
stay calm. If the mob lost discipline, the other early comers and I
might be crushed against the glass.

As the doors opened, I glanced back at T-shirt. If he was worried about
me, he wasn’t letting on. At a pace between a jog and a sprint I entered
the store; I tried momentarily to excise the image of T-shirt from my
mind.

Oh, look! A friendly sales assistant. I’d offered him advice on
electronic mail and—

“Do you think you could help me with the Victor?” I asked.

Suppose he couldn’t. His job might be at stake if he did even a small
favor in this every-man-for-himself struggle.

“Sure,” he said. And I’d like to think this was another demonstration of
the value of befriending others in The Jungle and sharing knowledge,
user to user. With the sales assistant watching guard over the main
machine, I picked up the monitor and pushed through the crowd to the
counter. I still couldn’t believe the Victor would soon be mine. What if
the sales assistant had suddenly developed a fondness for Victors and
had himself decided to claim the main machine? T-shirt all this time may
have been in the other part of the room; perhaps he was a gracious,
mannerly fellow who, having seen me first in line, was decent enough to
relinquish the new Victor to me. I don’t know how T-shirt fared at the
auction but hope that his own patience was rewarded through the
acquisition of the used Victor.

Within half an hour after taking the new Victor home, I had WordStar
running on it. There was some tinkering to do with the software so the
computer would start up without my having to stick a floppy disk in it,
but otherwise it was a perfect machine, save for a little crack in the
front of the case, which I discovered after I peeled away the price
tape. For $40 or so I could buy a replacement front. The hard disk, at
any rate, has been just as handy as I expected for editing this book.

My old Victor is in the hands of Gabriel Heilig, an aspiring
screenwriter, who saw my want ad and bought the machine for $1,750,
exactly what I’d paid. Gabe is no dummy; indeed, he used to sell
cars—Mercedes—and he insisted that his purchase price include plenty of
advice and several hours of instruction in WordStar, my favorite word
processor. And then what does Gabe do? He goes out and buys a copy of
Word Perfect, a new program that he swears is easier to use. I say,
“Great if it helps you do your work.” It must. Gabe tells me that the
Victor helps him revise five times as fast as he can on his electronic
typewriter. “You constantly have a fresh copy in front of you,” he says,
“whereas if you’re using a typewriter, you must retype the whole page
even if you change just once sentence.” A producer is interested in a
proposal for a TV series, and Gabe says: “I did it in three days—it
would have taken two weeks with a typewriter.”

Having sold the old Victor to Gabe for $550 more than the price tag on
the hard-disk one, I invested $230 in a 1,200-baud modem. I remain a
computer communications junky. A draft of this afterword, in fact,
reached my technical editor up in New York via the phone lines.

                            ■      ■      ■

My afterword could cover a number of topics, but I’ll resist. Still, you
might be interested to learn that the Great Modeming continues between
the United States and Sri Lanka.

Because of problems with the Sri Lankan phone service, the link over the
past year hasn’t been 100 percent reliable—monsoons can wreak havoc on
cables between Arthur Clarke and the satellite station. But Steve
Jongeward, who is now an assistant both to Clarke and Peter Hyams, the
_2010_ director-writer, reports that the struggles have been worthwhile.
The movie will be out in December 1984 (remember: I’m writing this in
November 1984), and if a reporter has questions for Clarke in Sri Lanka,
Steve will just type them out on the Kaypro in California, and the
novelist will typically respond within a day or so. Sometimes the
reporters even visit the office with the Kaypro and interview Clarke via
modem and get instant replies.

                            ■      ■      ■

The Great Modeming has produced a wonderful outgrowth: an attempt to
start an Electronic Peace Corps (EPC) to pipe U.S. technical savvy into
the Third World via computers links. (See Backup XIII, “Why Not An
Electronic Peace Corps?”)

The idea—in the form of an agency working within or alongside the
existing Peace Corps—has won support from people ranging from Clarke to
William F. Buckley, Jr., and Chicago _Sun-Times_ editorial writers.

Two established foreign-aid groups, Partnership for Productivity and
Volunteers in Technical Assistance (VITA), hope to develop an informal
EPC-style project with the Sri Lankans.[98] If successful, it could
complement an existing VITA plan for an earth satellite to relay
electronic mail to and from the Third World. Ideally, a permanent EPC
would develop. Then it could recruit volunteers, help fund projects like
the satellite and the Clarke Centre, and otherwise encourage computer
communications in vital fields such as public health and agriculture.

                                                        —Alexandria, Va.
                                                          Nov. 15, 1984

Footnote 98:

  Kaypro has donated five machines for the project and expects to send
  five more. Special thanks here to David Kay and Tom Peifer, a Kaypro
  staffer in charge of the company’s Third World donations program.

------------------------------------------------------------------------

BACKUP:
More Tips and
Tales from the
Jungle




BACKUP I ❑ Twenty-Six Questions to Ask at (and About) the Computer Store


The _very worst_ computer stores are like amusement-park arcades. Expect
to be clipped. Just aim for the bull’s-eye and keep your losses low.
Better still, go to the good stores.

Reading my list of twenty-six before-you-buy questions, please remember
that the quality of computer stores can vary tremendously. The
proportion of lemons to good ones is higher than in the case of ordinary
retailers. That’s because of the complexity of the product. In fact,
there’s an old joke about the difference between a car salesman and a
computer one: the former knows when he’s lying.[99]

Footnote 99:

  The salesman joke is from _InfoWorld_, October 22, 1984, p. 27.

One of the main tricks of the crooked computer hustlers is nothing more
than the retail-store version of leaving town ahead of the sheriff.

“The average computer salesman has a half-life of two months,” said my
friend the systems analyst. “Then he loses his credibility with his
supposed ‘clients’ and goes back to selling shoes or automobiles. If
you’re relying on any salesman for expert knowledge, you might be in for
a rude awakening. That’s why users groups formed. People got ticked off
with this world of hucksterism and created their own little world.”

One of the problems is that many good, honest sales reps will soon leave
for more lucrative work as consultants or for manufacturers or others.

Of course, the customer himself may be as impossible as some of the
sales reps. He might expect a quick, accurate, lucid answer to his
question from a rep working for little more than a department-store
clerk’s earnings. Computer stores can be full of ignorance on both sides
of the counter. Moreover, even if the sales rep knows his subject
forward and backward, many computer problems just defy easy answers.
Imagine the frustration of a sales rep working on commission. He can ill
afford time to educate complete novices. So do your homework or at least
make an appointment when the sales rep isn’t going to be jammed up with
lunchtime traffic. That’s the nature of the Silicon Jungle, not simply a
series of ripoffs. Cherish the good sales reps.

Perhaps the ultimate bad customer is a middle-aged Missouri man accused
of the first-degree murder of a computer-store owner with whom he
disputed a $180 bill.

Neither men nor machines “interfaced” well here. Although the customer
had bought a printer elsewhere, he was under the impression that no one
would charge him for making it compatible with a computer purchased from
the store. The owner wouldn’t yield. Allegedly—I didn’t know the verdict
at the time of this writing—the man then fired two .38-caliber
slugs.[100]

Footnote 100:

  _InfoWorld_, June 20, 1983, p. 1, reported the shooting incident.

Short of killing the store owner, how do you protect yourself?

Start by realizing that even at honest stores, your interests and the
firms’ won’t be the same. I know of a Washington store that planned to
drop the Kaypro. Despite the computer’s generally good technical
reputation, the store seems to have been stuck with more than its share
of lemons with disk-drive problems. But that wasn’t the real reason,
apparently.

“We’re moving out of the lower-priced equipment into systems where we
can make a bigger profit,” explained a store employee. “We’re not in
this for charity. We’ve got to make a living.”

Understandable. But don’t count on a store like that to sell you the
least expensive machine for your needs.

You can also protect yourself by considering the right questions—_some_
of which appear below:

ONE

Do you need a computer? Are you prepared to fire the humans the machine
might replace? Remember, a computer can’t make coffee or lie about your
whereabouts when _you_ may face an angry customer. Of course, your
business may be expanding so that this isn’t an issue.

TWO

Do you have the temperament for the device? A willingness to struggle
with mechanical and human frailty—including your own?

THREE

Are you prepared to do your homework? You can’t avoid some preparation.
It’s dangerous to dump the whole chore in the lap of a consultant who,
however good, doesn’t know your business as well as you do.

Use a consultant if need be. But help him and yourself by knowing what’s
going on. If you don’t have time, at least be certain that a trusted
employee does—ideally, someone on whom you can bestow a fat raise if
computerization goes smoothly.

FOUR

What magazines and reading material should you buy at the computer store
and elsewhere?

_The Silicon Jungle_ is just a start. Neither it nor other books can
keep you informed about new products as quickly as a weekly magazine
like _InfoWorld_ can. I’ve written for _InfoWorld_ and may be
prejudiced, but I think it covers the industry well. Some micro
magazines, especially those oriented toward specific brands, are
namby-pamby in their coverage of the industry or their pet machines.

A good general book is fine for acquiring broad perspective; but now
move on to a guide focused on computers for your kind of business. Shop
for magazines and books as carefully as you would for the machines. See
if the magazines’ articles are as up to date as their ads; I know of one
that reviewed the Osborne more than a year after its introduction.

Timeliness isn’t as important with books if they discuss principles as
well as specific products. Whatever you read, make sure it’s in English,
not gibberish.

FIVE

How do you want to buy your computer and the trimmings? At a store or
through the mail?

Unless you have a consultant or otherwise enjoy plenty of technical
backup, you should buy your entire system locally, at one store.

Many manufacturers discourage mail-order sales. That’s partly because of
price cutting but also because they need local stores to guide customers
who are new to computers.

But if advice _is_ available to you from a consultant or friend? Then
mail-order software might be a terrific buy, especially since most
computer stores can’t supply much software expertise, anyway.

SIX

Do you want an independent store or a chain store?

My own preference is an independent that has been in business several
years. Computer sales reps may come and go. The owner, however, should
still be in the store and in town when your warranty expires!

If you insist on buying from a chain, well, fine. But learn how long the
manager has been around—and how long he intends to stay. He may lie
through his teeth. But at least you’re trying.

Also, ask the manager how long his predecessors lasted? How fast does
the revolving door spin?

SEVEN

Are the sales reps knowledgeable and understandable?

One of the best ways to find out is for them to demonstrate a program of
the kind that you want. Ideally, sales reps or consultants won’t just
know a lot about computers. They’ll also know—or learn—something about
your business.

Above all, the sales rep should give you accurate information in
language you understand. If you’re a businessman shopping for a
word-processing computer, a good salesman can tell you how many
double-spaced pages each of your floppy disks will be able to hold. Of
course, ideally, you’ll walk into the store knowing the basics of
computers. But there are bound to be gaps in your knowledge somewhere
along the line; even writers for computer magazines argue with each
other over some supposedly clear-cut technical matters.

EIGHT

Can anyone go with you to the store, especially on the day when you want
to firm up the purchase?

You may at least enjoy a psychological advantage over the sales rep if
there are two of you asking well-coordinated questions.

Who should accompany you? Perhaps the person in your office who would
use the machine the most; what better source of questions for the sales
rep? Obviously, too, it’s good labor relations. Employees who helped
choose a machine will be less likely to complain about screens or
keyboards.

NINE

What programs will do the jobs you need done?

Don’t just consider costs of the programs; consider their costs versus
the cost of _not_ owning particular ones.

I don’t regret spending $250 for a word-processing program to replace
the cumbersome software with which my machine came. With the “free”
program it would have taken perhaps 40 percent longer to write this
book.

TEN

How easy are the programs to learn? How easy are they to use? Some of
the easiest to learn are the hardest to _use_.

ELEVEN

Do the programs include good instruction manuals? You still may want
them if they don’t—as long as you can buy readable books about them.

TWELVE

What machines will run those programs? And how well will they run them?

Take WordStar. Many machines can run this popular word-processing
program; but not all will let you use the cursor keys—the arrowlike
ones—to move from place to place on your screen. With some computers you
must simultaneously tap on two keys, not just one, to move the arrow.
You could have WordStar customized for your machine; but why not instead
buy a computer that works well with it from the start?

You also want to consider the operating system that a machine uses. By
now, the most widely used operating system is MS-DOS, which has become a
de facto standard because of IBM’s endorsement of it. It has supplanted
CP/M. Rival machines may not run _every_ program that the IBM computers
can. Some, like the Compaq portable, come close. But if a computer
exactly duplicated all the IBM’s functions, Big Blue’s legal staff would
crush the maker.

The widely used Apples have their own operating systems—one for the
Apple II series and another for the Macintosh.

There’s also UNIX. Ma Bell developed it originally, AT&T Information
Systems now supports it, and Microsoft sells a microcomputer version
called XENIX. The gurus say UNIX could be the operation system of the
future. With it programmers can more easily write software for machines
of different brands and sizes and “port” their programs from one
computer to another. UNIX may also be good for micros with many people
using them at once. The negative is that the nonexperts sometimes have
more trouble using UNIX than they do good ole CP/M and MS-DOS.

So much for the mainstream and soon-to-be-mainstream formats. What,
however, if the program you need comes only in an oddball one? Think
hard. Do you need this software—hence, this computer—immediately? Or can
you wait until the wonderful program or an equivalent is available for
other machines?

By the way, the word “format” doesn’t refer just to the general style
like CP/M or MS-DOS. It can also mean specific machines within CP/M and
so on. Different makes of CP/M-style computers, for instance, may not
read each other’s disks because their exact formats are different.

THIRTEEN

Is the machine 8 bits or 16 bits; and how big is the random-access
memory? Remember, 8 bits may be fine for word processing and light-duty
accounting, but 16 bits might be better for complicated spreadsheets and
is a definite advantage in data-base applications.

At the very least in the business world, you want 64K of RAM for word
processing and 256K or even more for intimidating calculations.

You may find that a micro just isn’t powerful enough to handle a mailing
list in the tens of thousands or process the payroll of Exxon. They’d be
uses fit for a mainframe or at least a mini.

FOURTEEN

What about =mass storage=—in other words, devices like disk drives? Can
they hold enough information for your business?

If you need to juggle around great masses of material in a hurry, you
may want a hard disk, which is more expensive than the floppies.

Remember—one character equals one byte and you can squeeze most numbers
into one or two bytes. Estimate your needs by calculating how many pages
by how many bytes per page, etc., then double your result to allow for
growth and the unforeseen.

Don’t just consider storage capacity. Think about the ease of making
electronic copies of information you squeeze into your computer. A hard
disk capable of holding the equivalent of five thousand typewriter pages
is nice. But you still must contend with floppies for backup if the hard
disk fails. You must either make backup copies as you go along or else,
every so often, hold a long, tedious copying session.

Fortunately, the price of hard disks is dropping quickly enough that in
the future you might be able to afford a second hard disk to back up the
one in the machine. Some micros can back up on a standard videocassette
recorder—a good four-hour tape will hold 100 megabytes. Besides,
there’ll eventually be cheap, reliable, roomy memories without any
moving parts.

Even then, however, you’ll still want copies of some kind, especially if
failures would zap thousands of pages of hard-won information.

FIFTEEN

Must your computer system accommodate more than one user? Will it work
well with people tapping into it from different terminals—those machines
with the keyboard and screens but little or no computing power of their
own?

Computer makers ballyhoo many micro systems as being “multiuser,” but
often there are hitches.

These machines may let one person do accounting and the other do word
processing at once but might not allow two people to run the accounting
program simultaneously. And what about data bases and electronic file
cabinets? Can more than one person simultaneously update inventory
records, for instance? And will the computer slow down much if too many
people use it at once?

Still, properly chosen, a multiuser system is a great way to share
information with many people and not have to jockey floppy disks around
all the time. Then there’s the cost. A multiuser system for twenty or
thirty persons may cost less than half of what individual desktop
computers _might_.

Instead of a multiuser system, however, you might still go with
full-blown computers—but _network_ them.

Networking is basically what it sounds: tying together machines to help
them share letters, reports, data bases, and other electronic files.
(See Chapter 13, “Net Gain$,” for a fuller explanation.)

SIXTEEN

Can you expand your computer system without difficulty, adding more
storage, for instance, or devices like a modem to help you communicate
over the phone lines?

SEVENTEEN

Will the sales rep show you that the computer will work well with the
printer or other accessories you have in mind?

He or she might not be able to demonstrate this compatibility, simply
because he doesn’t have the peripherals in stock; but you should at
least obtain a clear written promise saying that everything will work
_well_ together. Be sure that his obligation to make it work is clear
_before_ you sign the check.

The same idea naturally applies to software.

EIGHTEEN

How clear is the computer’s instruction manual?

In computerese, you want “good documentation”—something that’s “user
friendly.” If the manual doesn’t include it, then does a book from an
outside publisher? Ideally, the book won’t focus just on the machine but
also on the software that comes with it.

NINETEEN

How long has the manufacturer been in business? How prosperous is the
company?

Buy from a new company if the technology looks far enough ahead of the
pack. But be careful. You don’t want to buy from a computer maker likely
to perish soon in the silicon jungle—not when you’ll need spare parts
and technical assistance.

TWENTY

Are any users groups around—organizations of people owning the machine?

Ask your dealer or call the manufacturer for the name of the group near
you. If there isn’t such a group, that’s a blow against the machine then
and there. You still might buy it, but you’ll have less technical advice
than you might otherwise get.

Another beauty of good user groups is that they work closely with
dealers and manufacturers without compromising their own independence.

With fellow owners just a quick phone call away, you’ll be less at the
mercy of know-nothing hucksters.

Obviously, too, before buying the machine, you’ll find that the user
groups can be just the ticket for learning the quirks of the dealers and
the machines. Ask discreet questions after the meetings. Which machines
and dealers are winners? Which are gobblers?

Don’t forget, of course, that the owners would like to think of
themselves as having spent their thousands of dollars the right way.

I try to remember that when a computer shopper at a Kaypro meeting asks
me about my machine,I say I like it. Then I go out of my way to tick off
the Kaypro’s flaws so I won’t have it on my conscience that I offered a
bum steer.

TWENTY-ONE

What about maintenance?

You can solve many of your repair problems ahead of time by buying a
computer easy to service.

That’s one reason I got the Kaypro rather than the Osborne.

You also want to find out how often the machines break down. Try—whether
it’s a computer or a printer—to get an MTBF figure. That stands for
“mean time between failures.”

_Failures?_ That sounds fatalistic. But face it. Neither people nor
machines go on forever.

MTBF figures are like political polls and deodorant-commercial
statistics—subject to gross manipulation. But they’re a start.

Also, consider if you want to pay for regular maintenance, which, in one
year, might cost more than a tenth the price of the computer?

Or should you gamble without a maintenance contract?

Here’s a rule of thumb. Don’t gamble if (a) your system is large and
complicated or (b) you’ll be up the creek without a paddle if the
computer is out of service too long. The second condition is
particularly true if one or more of these conditions prevail:

a. If you own just one machine.

b. If it’s an oddball machine—not a commodity like an IBM or Kaypro.

c. If your business grinds to a halt without it.

I gambled for a while and seemed to be losing. During the first year I
spent perhaps $150 on replacing a printed circuit board in the Kaypro
and $300 on printer repairs. Considering the Kaypro’s dramatic effect on
my output, I won’t gripe too loudly. Nevertheless, I appreciated the
need for a service contract for even a well-made computer in constant
use. And within a few weeks it paid off. A disk drive failed, and the
computer shop didn’t charge me a cent for several hundred dollars in
repairs. The man worked while I waited at the public library down the
street. The shop had promised, before I forked over my $250 yearly
payment, that it would at least try to fix up my machine within
twenty-four hours.

If possible, negotiate for financial penalties if repairmen don’t do
their job—at your location or theirs—within a certain amount of time.

The contract might be with anyone from a national service organization
to a good, honest man operating out of a garage who’s been in business a
while and has convincing references—and substitutes for the times he’s
on vacation. (See Chapter 8, “People,” for rules to consider in avoiding
turkeys.) Count on spending 1–1½ percent per month of the hardware costs
if you’re dealing with a national service organization.

Of course you _might_ be better off without a service contract. Just
make sure you can limp along briefly without a computer, which, alas, I
can’t.

If you do try to wing it without a maintenance contract, you’d better be
prepared to know as soon as possible if you’ve bought a lemon. That’s
not such a bad idea even _with_ a contract.

Theoretically, you should smell the juice within the first few months
before the warranty expires. But that’s not how it always works—or
doesn’t work. As a novice, you may not be putting the machine through
all its paces. So why not invite a more advanced computer owner or a
consultant—someone you trust—to tinker around with the computer in ways
that you’ll eventually be doing? The sooner the “test drive,” the
better. Your tester should do basics like copying disks, transferring
electronic files from one disk to another, erasing files, and renaming
files. See if there’s a program available to test the disk drives and
related circuitry. Often those parts are the ones that fail first, since
(a) the drives are mechanical as well as electronic and (b) they get
some of the heaviest workouts during the computer’s operation. As soon
as you get your machine, you might leave it running twenty-four hours a
day for a week or two. Any component that will fail from heat buildup,
for instance, will probably quit then—while your warranty is still
fresh. Power consumption is typically no more than a light bulb’s.

Whether you have a maintenance contract or not, remember a basic rule:

It isn’t the shop’s diagnostic tests that count. It’s how your newly
repaired machine will run _your_ programs.

After I took my computer into a shop for disk-drive work, the repairman
said the drives just needed a little cleaning and were now testing fine.
The computer, however, flubbed when I tried one of my regular programs.

Result: I forced the repairman to install the new disk drive that my
machine needed.

Moral: always keep on hand some _good_ backup copies of important
programs that you can take with you to the repair shop to make certain
that the people there have done the job right.

                            ■      ■      ■

  Rothman’s Law of Computer Trouble-Shooting (Cribbed From an Old Rule
  for Fliers)

  1. If your computer messes up, remember the very last thing you did,
    whether in hardware or software.

  2. See if that isn’t the answer to your problem.

                            ■      ■      ■

TWENTY-TWO

When will the new machine be available?

Be especially wary in buying recently introduced computers—even from
giants like Xerox.

Maybe you should go ahead because they deliver more value; but don’t
commit yourself even to a partial payment if you can’t pin the store
down to a delivery date. Why not negotiate the right to withdraw your
money any time you want before you formally accept the computer?

TWENTY-THREE

Will the store deliver your computer system and install it?

For a small portable, obviously, that matters less than it would with a
major office system.

Remember, too, that you probably want your software all set to go. Even
popular programs like WordStar may be too scary for you to _install_
yourself. The word “install” in this case refers to tinkering with
software so it runs right on your machine for your use.

TWENTY-FOUR

If the store or other supplier is supplying the equipment over a period
of time, can you break the contract into segments?

That way, if the store or systems house doesn’t perform in the early
stages, you’ve retained some leverage.

TWENTY-FIVE

What references can the store provide before you purchase a major
system?

Buying a computer isn’t that different from hiring a consultant or any
other professional.

Since you probably can’t fully understand the product, you at least have
a right to know the reputation of the people offering it.

In at least one case, in fact, a court ruled that the computer dealer in
effect was functioning as a consultant and had more responsibilities to
the buyer than he would have had if he had been selling a less
complicated product. It’s an interesting ruling. And that’s it. Don’t
count on it to protect you.

TWENTY-SIX

Will the store owner himself sign the contract? Remember, your trusty
sales rep may be on his way out of town.

                            ■      ■      ■

  Rules for Buying a Used Computer

  1. Know your prices. Study the want ads of the local papers. There’s
    even a _Computer Classified Bluebook_ that rates micros for value in
    various areas (such as dependability) and offers possible prices.
    It’s available from _Computer Classified_, P.O. Box 3395, Reno,
    Nevada 89505 ($30 a single copy). Micro prices can change faster
    than a guide can keep up with them, but the _Computer Classified
    Bluebook_ might be a good start if the local newspaper doesn’t carry
    many want ads for your particular machine. Obviously, too, you’ll
    want to ask around user groups and read the classified sections of
    their newsletters.

  2. Pay attention to the machine’s physical condition. A banged-up
    case—or a chipped one—might suggest that the innards have been
    roughed around, too.

  3. Find out how your pet programs run. If you don’t have any available
    that work on the machine you’re considering, see if you can borrow
    some from a friend and have him or her accompany you. Make sure your
    friend has backup copies in case the programs are damaged by a
    sloppy drive in machine you’re considering.

    Remember that in the secondhand market the buyer normally doesn’t
    have much recourse if later he finds that the merchandise is
    defective.

  4. As with a car, ask why the seller is selling.

  5. Find out what generation of equipment it is. Does it include all
    the wrinkles of new models advertised.

  6. Learn where you stand legally if you’re buying software with the
    used machine. Some companies may require you to register yourself as
    the new owner; software manuals or accompanying literature may have
    this information. If you’re on good terms with the software company,
    there’s more of a chance its people will answer questions. The
    company may require you to give the serial number of your disk
    before it will respond.

  7. Call up commercial auctioneers and find out if they’re holding any
    auctions offering the equipment you’re interested in.

    Don’t buy equipment at an auction unless you’ve been around the
    computer for a while or have a friend who can watch out for you.
    Very possibly you won’t get a chance to give a machine a good test.
    Don’t buy unless the price is low enough so you’ll still be okay
    even if you must spend 25 percent of the auction price on repairs.

  8. Obviously you’ll want to consider a maintenance agreement with a
    local dealer or repair shop if you need the machine for your work.
    You may, of course, have to pay for an inspection.




              BACKUP II ❑ A Few Grouchy Words on Printers


I sold my =daisy wheel=—a printer that prints like a high-priced
electric typewriter—and replaced it with a plebeian =dot matrix
machine=.

Why? Because all printers, especially my 1975-vintage daisy, are a
series of lousy trade-offs.

And one of the trade-offs was about to be my solvency.

The old daisy wheel cost a mere $650 used—quite a bargain for a machine
whose latest models go for several thousand dollars—and Anderson
Jacobson didn’t charge for minor adjustments if I lugged in the bulky
printer myself. AJ, however, kept after me to get a $450-a-year service
contract.

Then, one day, a printed circuit board conked out, and the replacement
board and some other work came to $300.

“You’ve got to be kidding,” I told the crew at Anderson Jacobson. “Three
hundred dollars for a printer that cost me $675 originally?”

No, Anderson Jacobson wasn’t out to gyp me. Quite honestly, the people
there had intended to make their money off me through the service
contract; and that would have been fine for a company that needed a
heavy-duty, industrial-quality printer to pound away, day after day,
around the clock, without stopping. But for a lone free-lance writer?
However fast I typed, I could never give them the amount of business for
which its makers had designed it.

So like destitute parents searching for the right foster home for their
children, I looked for better, more affluent surroundings for my
printer.

I asked for, and got, $650 for the printer with a =tractor feed= thrown
in for free—it lets you use big stacks of perforated computer paper
without stuffing in new sheets when you reach the end of the page. The
new owner, a Washington consultant, _understood_. He wasn’t just buying
a printer; he was buying his right to an Anderson Jacobson service
contract.

My AJ’s successor was the Microprism Model 480, a sleek, plastic-covered
machine that took up less space on my tabletop than some typewriters.

In a dot-matrix printer like the 480, little pins hit the ribbon, making
impressions on the paper. An “A” is one series of pins, a “B” another,
and so on. The quality normally isn’t any match for the daisy wheel’s,
even though the price may be much lower than a daisy going the same
speed. “Prints like a daisy, costs like a matrix!” Integral Data Systems
touted the Model 480. That was stretching matters.

The letters from my next printer, a Panasonic KX-P1092, could _almost_
pass for a typewriter’s. It sold discounted at a local store for $489,
just a few dollars more than Anderson Jacobson wanted for its one-year
maintenance contract.

Here’s what else I could have chosen—rightly or not:

1. Another daisy wheel machine. The daisy wheel is plastic or metal and
  looks vaguely like some flowers, with many strokes radiating from the
  center. The spokes contain letters and numbers, and your computer
  tells what spoke the printer should strike—which it does with a little
  hammer. Run a noisy daisy wheel at one in the morning in a thin-walled
  apartment with an early-rising neighbor on the other side and you may
  get a not-so-friendly visit from the police or zoning department.

2. A =laser printer=. Typically, it works a bit like some copying
  machines, with your computer controlling the printed image rather than
  a document you put in front of a mirror. This wasn’t the choice for
  me; laser printers at the time went for several thousand dollars up.
  By now, however, the price may be much lower. Political fund-raisers
  love the nice quality that lasers can add to slick letters saying how
  badly they need your money.

3. A =thermal-transfer printer=. This uses patterns of heat to arrange
  the images on special paper; it’s _quiet_. Normally, the paper can be
  expensive, and the printing quality is poor; so thermal printers were
  also out of the running for me. Later, however, IBM introduced its
  Quietwriter printer, which prints beautifully on ordinary paper.

4. An =ink-jet printer=. This kind literally squirts ink against the
  paper in patterns forming letters and numbers; and the noise level is
  low, maybe 50 decibels, compared to 65 or more that a daisy wheel
  might inflict. What a boon to apartment dwellers and people in
  already-noisy offices.

While I was shopping for the Anderson Jacobson’s replacement, I didn’t
take ink jets very seriously because of the broken-up letters that came
from them. A year later, however, I talked to Richard Sugden, a Wyoming
M.D., the owner of a PT-88 ink-jet from Siemens, selling in the $900
range, who may have had a limited solution.

He used the 88 with a special printing program called Fancy Font and
high-quality paper that soaked up the ink neatly.

The program slowed his printer down to a fraction of the usual 160
characters per second but greatly improved his print even if it still
couldn’t pass for a daisy wheel’s. You can also team up Fancy Font with
some dot-matrix machines, especially those from Epson. Then you can
print in a number of sizes and styles, including “olde English.” Don’t
overdo. “Fancy,” as its makers joke in a printing sample, “may either
kill or cure.”

In printer shopping for myself, I used these criteria:

SPEED

Yes, actually I could have afforded a new daisy—one of those $450-$1,000
models.

The problem was that most crept along at less than 20 characters per
second. That sounds fast, maybe 200 words a minute; it isn’t. You must
redo an entire page if you want perfect typing but wish to make one
change in material already printed; you can’t just white out the wrong
word and stick in the correct one as you can with a typewriter. Often,
after completing a supposedly final version, I see _many_ changes I
should have made on-screen. Somehow my editing eyes are sharper with
paper.

People less fallible than I can make do with 20 characters per second.
They get everything printed right the first time.

Then again, if their printing volume is too high, a snaillike printer
still will bog them down.

And if they’re using their computer system to store and print notes or
records, a faster machine is a must. That’s especially true if you’re
churning out nothing but long rows of numbers. If best impressions don’t
count, you might consider a high-speed dot matrix capable of more than
150 characters per second—or even 200 or greater.

My Panasonic dot matrix was somewhat of a compromise, with a draft speed
advertised at 180 characters per second and a near-letter-quality one of
around 33 cps.

_WARNING_: Please note that advertised speeds may be one-third or more
higher than the actual speeds. The advertised speeds may not consider
factors such as the time it takes the printer to go from one line to
another. This is particularly true the case of =unidirectional=
printers, which print only from left to right rather than in both
directions, as do =bidirectional= printers.

The only real way to judge a printer speed in your application is to try
it with your own sample material.

PRINT QUALITY

Here’s the hierarchy of printer quality:

1. =Draft quality.= The letters are too dotty for anything but drafts
  and correspondence with enemies whose eyes you want to torture.

2. =Correspondence quality.= It’ll do for a letter to a forgiving friend
  or business associate.

3. =Near-letter quality.= You can get away with it for book manuscripts,
  especially if you already have a contract.

4. =Letter quality.= That’s typewriter quality.

A friend described my Microprism’s supposed “near-letter quality” as
looking like “an upscale grocery store receipt.” It was a long way from
a daisy wheel.

Still, Judith Axler Turner, a nationally syndicated computer columnist,
says dot matrix might actually help her at times; she can print the
letters larger than regular typewritten characters. Her manuscripts
command more attention.

A Washington lawyer fared worse using a dot-matrix machine without
near-letter quality. A judge threw out his brief.

We dot-matrix plebeians, before buying, should test the print quality on
a number of people, especially colleagues or clients. Are they happy
with the shapes, sizes, and quality of the characters? Do they feel that
our dots blend smoothly into each other? Usually, the more pins a
dot-matrix printer has, the better will be the printing. Many dot-matrix
printers in late 1984 had a matrix of seven-by-nine wires. In 1984 Epson
was selling the $1,500 LQ-1500 with twice that density and
“letter-quality characters to rival fine office typewriters.” I looked
one over. The typewriters were still winning.

Sales reps will bill the LQ-1500 and many other dot matrixes as being
capable of both (a) lightning speeds with draft-print quality and (b)
slower speeds with good quality. Is it “good” enough for you? If not,
consider buying a speedy dot matrix or ink jet for routine work and a
daisy wheel for the times you want the best impression. The combined
cost may be lower than that of a super-duper dot matrix.

If you’re doing serious work with graphics, look for a printer capable
of reproducing details as well as a good computer monitor does. Daisy
wheels won’t suffice because of the tremendous number of strikes; doing
one dot at a time is incredibly slow, and their preformed characters
don’t include the variety of patterns that good graphics require. You
really need an ink jet, dot matrix, or other alternative.

COST

With printer technology advancing so rapidly, I didn’t want to sink much
into a machine—hence, the $489 Panasonic. Sometime in the 1980s I’ll
forsake my cheapie dot matrix for a good ink-jet, thermal-transfer, or
laser printer when the price is down.

When pondering costs, don’t just look at a printer’s price tag. What
about ribbons? How many pages will they print? And how much do they sell
for? My IDS ribbons listed for around $12 apiece, but luckily I could
get around that by (1) buying at a discount place and (2) eventually
purchasing a little machine called a MacInker, which, for less than a
dime, let me reink a ribbon. It’s messy. Don’t inflict a MacInker on a
Fortune 500 secretary, or _any_ secretary, but think about one, maybe,
as a way of being frugal at home. The MacInker is available from
Computer Friends, 6415 SW Canyon Court, Suite #10, Portland, Oregon
97221. The telephone number is 1-800/547-3303, or 503/297-2321. The
gadget as of mid-1984 was selling for around $60 if you included ink and
shipping charges.

PRINTING VOLUME

I wanted to be able to churn out a book manuscript in one weekend
without overwhelming the printer.

Before you buy a printer, ask the manufacturer if it can handle not only
your typical workload but also your peak one.

Cheaper printers may overheat—just when you most need them.

A DECENT REPAIR RECORD

A printer is an electromechanical device. That’s a fancy way of saying
it may break down a lot.

An electromechanical device, after all, is partly mechanical—which makes
it less reliable than the gizmos in your computer system that are purely
electronic.

If you can afford backup machines, naturally the repair record won’t be
as crucial, but no matter what, do compare statistics on the mean time
between failures. Remember, they’re like EPA ratings for automobiles.
They’re wrong, frequently, and may not apply to the printer _you_ end up
with. But don’t shrug them off entirely.

QUIET (OR RELATIVE QUIET)

My daisy—with the little hammer pounding away—was too noisy for the late
hours. Older dot matrixes also can be offenders; they can almost shriek
with high-pitched sounds. Some of the newer ones may be better behaved.
Sharing an office-apartment or working from an ordinary office, however,
you might buy a sound-muffling box and wrestle with pulling paper in and
out of it.

When good, cheap ink jets and laser printers hit the market, these noise
hassles will end.

SPECIAL FEATURES

“Will it underline?” I asked. And would it offer =boldface=, the dark,
heavy print that books often use for emphasis.

And what about other special features? How about =proportional spacing=,
for instance, which prints the “M” wider than a “j”—making the type look
more like a book’s. That could make the print more readable.

Another question is, “Does the printer offer =justification=?” It’s
really a software issue. But we’ll group it here with the other special
features.

Justification evens out the spacing of both the right and left margins,
though that’s a mixed blessing. Justified margins look more impressive.
But =ragged right= margins, the normal typewriter kind, guide the eye
more easily and may be better for long reports as opposed to short
letters. I did _not_ justify this manuscript. But justification is just
the ticket for correspondence with the status conscious.

In the case of all these special features, keep remembering to ask:

1. Does the printer offer them no matter what computer or program you
  use?

2. If not, will your hardware and software let you use the features?

3. For free, will the store modify your computer system to make the
  features available to you?

4. Will your desired combinations of features work simultaneously?
  Unfortunately, with my software, anyway, the Microprism 480 couldn’t
  use boldface and proportional spacing at once.

OVERALL COMPATIBILITY WITH YOUR COMPUTER

1. Can you use a standard cable to connect the printer and the computer?

2. If not, can the store make one up for you? At what cost?

Remember, it isn’t enough for the cables to plug in. You also want the
right wires going to the right pins and for the computer and printer to
be on speaking terms electronically.

To connect up with a printer physically and electronically, a computer
uses a =port=—nothing more than (a) a plug or socket and (b) the gizmos
that let your machine exchange bits and bytes with the outside world.

“The outside world” may be a =modem=, which connects up with a phone, or
it may be simply your printer.

Two common styles of ports are =serial= and =parallel=. Data passes
through serial ports a bit at a time; through parallel ports, it passes
eight bits or more at once.

Serial ports commonly use an industry standard, the RS-232, which is a
kind of socket together with the related electronics. As with “IBM
compatibility,” this “industry standard” often can be elusive. One
brand’s RS-232 may differ from another’s.

The Kaypro has both a serial and parallel port, and with the Anderson
Jacobson, I had to wrestle with plugs whenever I used the modem, since
it and the Anderson Jacobson both required the serial port.

In between printing one of the last drafts of this manuscript today, I’m
adding another criterion—whether a printer has a =buffer=.

A buffer in this case is just some memory, in the printer, that lets
your computer pump a letter or report into the machine in a fairly short
time. Then you can return to other computer work while the printer runs.
You can of course buy a buffer if your machine lacks one and you’re
sadistic enough to deprive your secretary of a good excuse for a coffee
break. Wait. Come to think of it, your secretary herself might
appreciate a buffer if she’s trying to keep a nine to five job nine to
five.

You needn’t have buffering by way of your printer. Some programs, such
as Word Perfect, even let you “schedule” several printing jobs from
different documents on your disk while you’re still writing.

  Big Blue’s Quiet One

  Do you need a quiet printer that will turn out typewriter-like work
  but won’t cost as much as a laser-style machine?

  Then you might consider the IBM Quietwriter printer or the inevitable
  clones that will follow. It uses a new kind of thermal-transfer
  process—heating the ink so it goes on the paper without the ribbon
  actually touching. The Quietwriter doesn’t need special paper. Its
  sound is a polite swish. And its print looks typewriter-sharp.

  IBM introduced the Quietwriter at around $1,400—less than half of what
  the cheapest laser printers were selling for in late 1984 (not that
  they aren’t coming down in price too).

  Granted, drawbacks exist The Quietwriter’s speed isn’t as fast as a
  laser printer’s—effectively a mere 25 characters per second if you use
  Pica-sized type.

  Also, the Quietwriter’s ink doesn’t sink into the paper as with some
  typewriters or daisywheels; your work might lack the feel of a
  _traditionally_ typed document. And because the ink is erasable, you
  shouldn’t use a Quietwriter for legal papers. It won’t make carbons.
  Moreover, the technology is unproven—at least to me as I write this.
  Ask me again when the machine’s been out long enough for the
  lemon-owners to fire off blurred letters of complaint to _InfoWorld_.

  Just the same, Quietwriter-style machines are well worth
  investigating. Hats off to Big Blue on this one.

                            ■      ■      ■




    BACKUP III ❑ The Lucky 13: What to Look for in Choosing Software


A friend warned me: Don’t water down your software advice with “In my
opinion”-type phrases and other hedges.

“That’s how it seems to me, anyway,” he joked.

Well, Rick, I’m sorry. Just as a critic once called _Citizen Kane_ “a
shallow masterpiece,” I’ll qualify my enthusiasm for WordStar. I’ll be a
responsible zealot.

Anyway, I like WordStar enough to use it to help explain the Lucky 13—my
general criteria for judging software.

ABSENCE OF BUGS

Programs are like people. “Mature” software is more reliable. It’s more
like a tried-and-tested salesman or secretary, less risky, say, than a
green employee hired off the street.

A complex creation like WordStar, with its thousands of lines of
instructions for your computer, won’t ever be 100-percent glitchless.
But it’s close. MicroPro, the company selling it, normally tests its
programs well before unleashing them on the market, and WordStar has
been around since the late 1970s, giving others the pleasure of
suffering bugs before you have a chance. Why should you pay for a
software maker’s education? Not that you should always buy “mature”
programs. Sometimes a newer one looks so promising that you might want
to gamble.

GENERAL EASE OF USE

WordStar’s easy for many people—not all but many—to learn and use.
Arthur Clarke picked up the ABCs of WordStar in days. A public relations
woman at MicroPro International says she was doing serious work with
WordStar the first day she used it. I believe her. My friend Michael
Canyes explained the basics to me on the phone; but my main training was
just hanging around computer stores and trying out Osbornes, which
included WordStar as part of the standard package.

WordStar exercise books exist, the computer version of typing ones, but
for me they would have been a waste of time. I was too eager to get to
work with my new software.

A millionaire swears by WordStar; he has four secretaries deftly running
it on Kaypros. A fifteen-year-old I know—smart, though not a
prodigy—does his homework on WordStar, and the son of MicroPro’s founder
learned it at age ten.

Yes, I’ve heard WordStar horror stories. You’re not dim-witted if
WordStar doesn’t come as easily to you as to me. Oddly, I found
Select—ballyhooed as a beginner’s word processor—to be more of a puzzle.
Oh, well. One person’s dream software may be another’s kludge.

Keep in mind, however, that you must often suffer trade-offs between
easiness, speed, power, and versatility. Although WordStar _might_ not
give you instant gratification, its speed and power may justify the
struggle. Ditto for some of the best spreadsheets and other software
categories. The big question is, How much word processing or
spreadsheeting, or whatever, do you do? Not much? Then place ease of
learning ahead of speed. Ideally, though, a program will give you both.
MicroPro has tried especially hard to do this with WordStar 2000, an
improvement over WordStar in learnability. Like nearly any powerful
program, however, 2000 still takes practice to get up to full speed on.

_Whether you’re buying a word-processing program or an accounting one,
look for software with logical commands._

WordStar, in this way, triumphs. Consider the famous SEXD diamond that
you use with the Control key. S is the diamond’s leftmost key; it will
move your cursor over one space in that direction. E is the uppermost
key and indeed moves you up. X, the diamond’s lower point, takes you a
space down. Rob Barnaby, in short, has done a superb job of letting me
get from place to place on the screen.

You may disagree violently. Fine. Software is personal. You’re letting a
stranger—the writer of the program you use—influence your working
habits.

Ideally, however, the writer’s logic and yours will be the same, so
that, in the end, the stranger becomes a friend. He might be thousands
of miles away. He might even be dead. Or you might loathe him if you
meet him in person rather than on your disk. But in running his program,
you still get the feeling Holden Caulfield got in _Catcher in the Rye_:
you want to call up the author after he’s done such a fine job. Holden
was talking about novelists. I’m talking about programmers. Ideally,
they’ll touch your brain the way Holden’s literary heroes touched his
heart.

GOOD DOCUMENTATION

People say WordStar’s manual nowadays is better than the past ones,
which _Personal Software_ likened to “the Russian-language version of
_War and Peace_.” Don’t memorize even the improved manual, however. Home
in on MicroPro’s simple list of WordStar commands, a sheet smaller than
a restaurant menu with which I learned the basics.

My WordStar version also included a spiral-bound book with exercises
similar to a typing guide, but I didn’t get lost in them. I was too
eager to get on with my _real_ work with WordStar.

There’s one other resource nowadays—a tutorial disk, which, because it
came only in an IBM-style version, I hadn’t tried as of this writing.
Normally, however, I absorb new wisdom better the old-fashioned way: via
bound paper.

More than twenty books on WordStar exist—maybe because of the old
manuals’ failings—and one of the better guides is Arthur Naiman’s
_Introduction to WordStar_. Published by Sybex Computer Books, Berkeley,
California, it’s generally as intelligent and helpful as the program
itself.[101]

Footnote 101:

  Ironically, Naiman wrote _Introduction to WordStar_ with another
  program, WRITE, the creation of a friend of his, and WordStar itself
  is far from his favorite word processor. He compares it to a big
  Cadillac or camper loaded with too many features. My thinking is
  different; I _want_ to have many to choose from; I’ll gladly ignore
  the others.

Remember the basic criteria for evaluating manuals of any kind, factory
supplied or not:

1. The general logic of the manual. The author should have written it
  from your viewpoint, not his—from the viewpoint of what you _do_ with
  the program, not how the programmer coded it. Ideally, you’ll find
  descriptions of related commands in the same chapter.

2. The quality of the index. I’ll charitably assume it’s there to begin
  with. It should list even the most obscure commands—telling on what
  pages you’ll find them.

3. Simplicity of vocabulary and sentence structure. A manual shouldn’t
  impress; it should _teach_.

USEFULNESS TO OLD PROS AND BEGINNERS ALIKE

WordStar adjusts to different levels of skill. You have some =menus= to
guide you, to help you decide, say, whether you want to print or see
material you’ve already written. But most of the time you won’t need
menus during composition. Not after you’re experienced, anyway. Some
rival word-processing programs have menus that bog everyone down,
beginners and old pros. But not WordStar. It has four “Help” levels,
including one that keeps messages constantly on the screen to guide you.
But you can zap all this once you’re a WordStar pro.

WordStar is only as “friendly” to you as you want it to be. It isn’t
like a puppy leaping up on you and licking your face at the wrong time.

SPEED

WordStar lets you do your job in a hurry. Well, basically. If you’re
_just_ turning out short business letters, for instance, and don’t want
to store them on your disk, try something else. WordStar makes you
electronically save your words there before you can print anything. And
that takes time. For swapping words around, however, for additions or
deletions, few programs could surpass this one. Were I writing long
sales pamphlets or annual reports, WordStar would be my choice.

Now, I’ll qualify my “speedy” verdict. WordStar will slow you down when
your computer has to reach instructions that the program hasn’t already
sent on to the RAM—the temporary memory. That means a time-consuming
electronic trip to your floppy disk. Also, if you type in a certain
amount of material, WordStar will automatically lock some of it on a
disk if the RAM is running out of room. WordStar is a =disk-based=
rather than a =RAM-based= word processor.

That has its virtues, however, since, by farming out the runover to a
floppy, WordStar lets you work with longer files. Some RAM-based
programs may limit each document to only 15 or 20 pages in many
computers unless you electronically splice them together.

Altogether, I’d say that WordStar, evaluated as a disk-based, fully
featured word processor, is fast. And new wrinkles like hard disks will
make it run still faster, even without the speed improvements that very
likely will come. MicroPro, in fact, recommends hard disks for users of
WordStar 2000, even if it will run with two floppies. Very soon most
office micros will contain hard disks.

POWER

WordStar is powerful. You can, for instance, type “@” instead of a long
name used commonly in your work. Then, when you’re ready, you can plug
the name in where the “@” appears. This =search-and-replace= feature is
common to every advanced word-processing program; but WordStar
implements it better than many rivals.

You can also use it with an accessory program, MailMerge, so you can
type a list of names and addresses just once, then automatically plug
them into the right spaces in a form letter. Only, it’s individually
typed, so people needn’t know they’re getting a form letter.

Of course, “power” isn’t a virtue just in word processing. The best
electronic filing cabinets, for instance, boast clever wrinkles to make
it easier for you to enter new categories of information or to change
individual records. Consider this story, which is true, about a reporter
whom an editor was on the verge of firing. The severance pay was ready.
The editor changed his mind at the last minute, however, and the final
check stayed in his desk. Then, not long after, the paper’s auditor
stormed into the city room. “Why didn’t you fire the son of a bitch?” he
asked. “Now we’ll have to spend all this time straightening out the
records.” Had the paper had a good, powerful electronic filing system,
the nonfiring would have been a little less traumatic to the auditor.

FEWER CHANCES FOR BOTCH-UPS

WordStar limits the chances for careless errors in the first place.

While you’re working on a file, for instance, you can use the
=Control-KJ= command to delete everything _but_ the document you’re in
the middle of.

Granted, WordStar isn’t perfect. Arthur Clarke, for instance, complains
mildly of the underlining procedure. If he turns on the underlining,
he’ll occasionally forget to turn it off, meaning that, unwittingly,
he’ll underline everything that follows. WordStar 2000 corrects this
problem by showing you true underlines on the screen, not just symbols
at the beginning and ends of the underlining.

In record-keeping programs, especially, the anti-botch-up features can
be real lifesavers. One technique is to limit the range of numbers
entered. An elementary school, for example, might guard against typing
errors in new files showing pupils’ birth dates. The computer might then
flash its skepticism if a clerk said a first grader was born more than
six years ago.

THE JEWISH-UNCLE EFFECT

Without bogging you down, WordStar lets you reconsider some drastic
actions. Suppose you’re about to erase an entire =file=; that is, a
whole document that you’ve worked on: say, a letter or a sales report.
If you press the control key and the letters “K” and “J,” WordStar won’t
act immediately. Instead, it will ask, “Name of File to Delete?” You can
even get out of most commands before they’re executed. It’s simple. Just
hit the “Control” and “U” buttons, then the “Escape” one. WordStar, in
short, is good for the hotheaded. You feel as if Seymour Rubinstein—the
MicroPro founder—is watching over you like some kindly, protective
Jewish uncle.

A good record-keeping program would react similarly if you were about to
erase 8 million names. A payroll program might inquire more than once if
you wanted to register the firing of five hundred people. A spreadsheet
program could ask if you really wanted to wipe out dozens of numbers
that you’d entered. A graphics package, ideally, would do likewise if
you were about to erase an electronic equivalent of the Mona Lisa.

Some programs, in addition to saying you’re messing up, will offer you
alternative courses of action. The older WordStar isn’t as advanced as
some other programs in this respect. But normally the error messages are
self-explanatory and the corrections obvious.

DAMAGE LIMITATION

WordStar limits the damage if you or your machine goofs in a big way.

It rarely sends you back to the operating system of your computer.
What’s more frustrating than getting, say, an A> prompt—the computer
equivalent of, “Buddy, you’re back at square one”? Then you’ll have to
reenter your work.

WordStar 2000 corrects one feature missing from the original program.
Plain old WordStar doesn’t let you delete a paragraph, then restore it
without zapping other changes you made since you last saved your work on
your disk. That is, there’s no =yank-back= feature to undo erasures or
other recent modifications.

But even the older WordStar makes an electronic equivalent of a carbon
copy, a backup file—meaning that you’re probably still in business if a
glitch destroys the original. Uncle Seymour makes you think twice,
literally, before you erase whole files.

The old saw of the computer trade, however, will always apply, no matter
what the program:

“Garbage in, garbage out”—“GIGO.”

Berenice Hoffman, my literary agent, really rubbed that in. I’m the type
whose letters and checks take a little time to adjust to a new year.
“For your records, if you keep carbons,” Berenice replied to one note,
“you might want to change the date to 1983—didn’t the computer tell
you?” The best programs in the world can’t detect such mistakes.

But wait; I just remembered. The fancier computers have electronic
clocks that potentially could warn you if the wrong date appeared when
you were working with a correspondence format.

AFTER-THE-GOOF FEEDBACK

WordStar also provides another service—offering error messages telling
you what _went_ wrong. It isn’t perfect. Sometimes you may see
combinations of letters and numbers, meaningless to someone without a
manual. But normally WordStar is helpful. Say you want to use two
markers—one at the start and one at the end—to designate material to be
moved to another part of the document. WordStar will tell you if you
forget to type out either one.

Ideally, programs not only will offer you a diagnosis after the goof but
also a solution. Although WordStar isn’t as advanced as some programs in
this respect, it’s very adequate for the experienced user.

ABILITY TO CUSTOMIZE

I adapted my WordStar to the requirements of a writer. Editors normally
don’t like hyphenated copy, so now WordStar’s “hyphen help,” which
suggests possible hyphen breaks, is an optional feature instead of a
normal one. No longer need I turn it off with special commands. WordStar
provides a menu in the installation program that makes it easy for you
to change normal =defaults=—the settings that your software will have
before you tinker with it. The menu doesn’t cover every possibility. But
you can vary margins and many other important details, and once you’re
experienced, you can do a =patch=—a modification in the program—to
change other things.

If you’re a novice buying from a full-service computer store, ask it to
set up your WordStar. Better still, try to dope it out yourself so you
make your own changes in the future. You might get guidance from a
users’ group.

Likewise, you might tinker with a communications program to make it work
better with the computers you plan to use and talk to. Or you might set
up a record-keeping program to check automatically the accuracy of
information fed into it.

ACCESSORY PROGRAMS

WordStar will work with a variety of accessory programs intended
especially for it—everything ranging from electronic thesauruses to
spelling checkers, word counters, footnoters, and a communications
program.

Some word processors, accounting packages, other software, include all
the functions you’d need. Others require you to buy the accessory
programs. That’s not always bad. Why bother to pay for a dictionary if
you’re a perfect speller? Just make sure—before you buy—that the
original software either includes good accessory programs or will work
with them.

Some outside companies’ accessory programs, by the way, may be superior
to those from the main software’s manufacturer.

SUPPORT FROM THE MANUFACTURER

There is one plus that I wish I could have included in my praise of
WordStar—good support from the manufacturer. Don’t count on it. In the
area of guidance and troubleshooting from the manufacturer, WordStar on
occasion hasn’t even been adequate.

Calling as a prospective customer, I couldn’t find out if WordStar in a
Xerox 820 format would run smoothly on my Kaypro. The company took down
my message, then mailed me literature that didn’t answer my question.

A California man phoned MicroPro with a problem involving DataStar, a
sister program of WordStar that eases record keeping. “We do not have
time to correct the programming that results in this quirk,” he heard.
He complained to _InfoWorld_ that MicroPro “has some really elegant
program tools but no inkling as to the meaning of customer support.”
Likewise, the head of a MicroPro users group in New York told the
magazine that “fully half of the people who called me to join
immediately presented me with a problem they were having.”

For a while—I don’t know what it’ll be like when you’re reading this
book—MicroPro wasn’t even replying to most customers’ questions on the
phone; this supposedly was the dealers’ job. And while Rubinstein’s
company indeed sells a Mercedes of a program, some computer stores
aren’t up to fixing the windshield wipers.

Ideally, software manufacturers like MicroPro will not only offer
technical support but also 800 numbers so you won’t be on hold for
twenty minutes, racking up a formidable long-distance bill.




     BACKUP IV ❑ On the Evolution of Software (And a “Perfecter and
                          Perfecter” Program)


Mary Matthews, a gifted writer-editor in Chevy Chase, Maryland, favors a
WordStar rival called Perfect Writer.

“What a conceited program,” I say.

“WordStar’s a dinosaur,” she shoots back.

In late 1984 we both tried new versions of our pet software (actually
WordStar 2000 is more of a successor), and while defending them, we
harbor reservations.

First the basics. I myself prefer a program like WordStar Version 3.3,
which is in the “get-what-you-see” tradition and shows your copy on
screen almost exactly as it will be printed. But Mary makes a good
argument for a rival with a different philosophy. WordStar 2000 in fact
helps her case. It now has many of the features that her dear Perfect
Writer came out with first, including split screens. Interestingly,
however, the new Perfect is more useful to the “get-what-you-see” crowd
than is the older version, while WordStar 2000 is _less_ get what you
see in an important way than 3.3 is. At least that’s true of the
WordStar 2000 previewed to dealers. During a demo, anyhow, a MicroPro
employee couldn’t coax 2000 into displaying double-spacing conveniently
on screen even though we could have double-spaced on paper.

Where does the increasing resemblance between Perfect Writer and the
WordStar family fit in the cosmic scheme? I’ll recklessly generalize:

The word processors of the world are becoming like refrigerators; all
the deluxe models will have the equivalents of automatic defrosters and
ice makers and butter warmers and lettuce crispers. More of the new
wrinkles will be marginal. And the surviving companies will be the ones
that can explain and exploit the differences and support their customers
the best.

Not everyone likes butter warmers. As noted before, WordStar 2000 isn’t
an unalloyed improvement for me, and the “perfecter” Perfect in some
ways disappoints Mary.

The older WordStar lets you move to the left of a line with the
combination of the Control key and the letters Q and S or =Control-QS=.
A touch typist could do this almost instantly. WordStar 2000, on the
other hand, uses =Control-CL=. =CL= stands for “cursor left,” =CR= for
“cursor right,” and mnemonic commands like those are indeed easier to
keep in your head, especially if you use a program only occasionally. On
the other hand, the new strokes are harder for a touch typist—this one,
anyway. Likewise, Mary wishes that Perfect Writer’s new commands were a
bit more logical, especially to old Perfect Writer hands.

Concluding, Mary says Perfect Writer users with 64K machines shouldn’t
junk them to buy more powerful computers just to run the new version. My
thinking is basically the same about WordStar 2000 versus WordStar 3.3.
The older program isn’t as good as 2000 in some cases; for instance,
when you could use built-in memo format to make temporary employees more
productive. But 3.3 is still terrific for people _without such needs_,
and I’ll think long and hard before I myself change.

Mary’s impressions and mine are typical of many veteran users of
software who can’t stomach features added for novices. She’s 100 percent
right except when we disagree. As “host,” I won’t rebut her in the
places below where we do.

Here’s what she sent over the phone via her Kaypro II:

  Somehow, I’m not sure how, I’ve gotten to be enough of an authority on
  Perfect Writer—the “old” Perfect Writer, that is, the one released in
  June 1983—that strangers call me up and say that a computer salesman
  somewhere told them I was the Sibyl who could answer their questions
  with a local instead of a long-distance phone call. Luckily, the
  questions usually run in the “How the heck do you do X?” vein, or I
  might have to reveal that I’m only a good-hearted writer.

  Now the Perfect Writer people have released a brand-new version of
  their already powerful program, and I think I’m in trouble. The new,
  revised version of Perfect incorporates some radical changes—sweeping
  enough to demand 128K of RAM (and IBM PC DOS) to operate. (Actually,
  after claiming that the new Perfect can edit documents of up to 100
  pages, the manual states that “with 64K of RAM you will be able to
  edit documents about 5 pages long,” so I assume that the new Perfect
  takes up about 56K of RAM—not being familiar with the PC’s way of
  juggling numbers, I can’t tell exactly.) I’m in trouble because I
  won’t be the reigning Sibyl anymore unless I can figure out how to buy
  a PC-compatible computer with a decent keyboard (most PC keyboards are
  horrid) and still do things like pay bills and buy the occasional loaf
  of bread and jug of wine.

  The most radical of the changes is that the new Perfect Writer now
  uses what it calls “pop-up command menus” during editing. When you hit
  the Escape key, a small (about one-twelfth of the screen) “top menu”
  will superimpose itself over your text, as close to your cursor as
  possible, three characters away to the left or right. It lists your
  choices for subsidiary menus, which eventually lead you to the command
  you want.

  Nearly every command has been changed, so that those of us who are
  used to the old Perfect Writer must learn the editing commands all
  over again. The new manual (haters of the old one will be glad to
  learn that the index is now at the back where it belongs and those
  frustrating Roman numerals are gone) explains with a straight face
  that the pop-up menus exist so that you “don’t have to memorize
  command sequences.” Of course, if you plan to use Perfect Writer more
  than once a year or so, you’re going to memorize the commands, anyway;
  and so, as the manual airily says, the Control key does everything the
  Escape key does, identically; the only difference is that you “bypass”
  the top menu—because, it says, you aren’t always going to want to see
  it. Mind you, if you use the Control key, you’ll see every menu but
  the top menu, anyway.

  Is this enough reason to change all the commands but one—to bypass
  _one_ menu?

  To me, this is not an improvement over the old Perfect Writer—not
  unless you actually _like_ added keystrokes. All the old two- and
  three-keystroke commands are now three-keystroke commands at least,
  and often four or five. This is progress? The new Perfect Writer has
  indeed taken pity on us and assigned to the PC’s function keys twenty
  frequently used commands, so that if, for example, you don’t feel like
  keystroking =Escape-DS-Carriage-Return= to save your document and
  continue working on it (=Control-X-Control-S= in the old PW), you can
  keystroke =SHIFT-Function Key 9-Carriage Return=. Whoopee.

  Let us not carp too much about what strikes me as suspiciously similar
  to kludge, since the new Perfect Writer is as fast or faster than the
  old Perfect Writer. We’re probably only talking about a few
  microseconds, mind you, but it still seems to me that the execution of
  Perfect’s new commands is usually close to instantaneous. This is a
  thing to marvel at when you compare Perfect Writer to WordStar 3.3,
  where unless you have a specially speeded-up version with specially
  reassigned command keys and fingers with a lightning-fast touch, it
  takes forever to execute certain commands (well, ten or twenty
  seconds) and perceptible time (say, one or two seconds) even if you do
  have the speed. But I still say the 50, 100, or 200 percent additional
  keystrokes are a pain in the you know where. The program may be
  faster, but the human being is now 50, 100, or 200 percent slower.

  One improvement in particular is one to run through the streets
  singing about: Perfect Formatter has been incorporated into Perfect
  Printer in the main menu (inexplicably renamed “PSI”), and the two of
  them together are approximately a million times faster than they used
  to be. Thank you, Perfect Writer!

  For a couple of years now, I have been using Perfect for the long,
  complicated projects, like books, that demand powerful editing
  capabilities and Perfect’s special strengths—such as split-screen
  editing, automatic footnoting, automatic construction of a table of
  contents, etc. For shorter things, like personal letters, I’ve been
  using WordStar, for its what-you-see-is-what-you-get screen. The main
  failing of the old Perfect was whether or not you were using the
  document design capabilities, you had very little idea of what the
  final product was going to look like. (The main failing of WordStar,
  which as far as I’m concerned has been a dinosaur for several years
  now, is that it can’t do half of what Perfect can—and it does it
  slowly, too.)

  Shout “hallelujah,” brothers and sisters! The new MS-DOS PW allows you
  to choose between using its old “@@ commands” and having
  what-you-see-is-what-you-get. Or you can mix the two of them (not that
  I know why anyone would want to, since with the PC I’m using, you
  can’t tell when a word’s been underlined).

  You can now get on-screen justification if you want it; and if you
  want to underline a sentence, you don’t have to worry about your
  on-screen justification being thrown off 4 or 5 characters—you just
  position the cursor in front of the material you want to underline, go
  to the end of it, and tell the machine to underline it. The exact
  command sequence for underlining a sentence is =Escape-T-B= (begin
  marking), =Escape-F-S= (go to the end of the sentence), =Escape-A-M-U=
  (underline the marked area). This looks like a lot of work, especially
  compared with the old PW’s @@ux{}, until you stop and consider what
  the same thing would be in WordStar. Suppose it’s a ten-word sentence
  you want to underline: you’d go to the start of the sentence and
  keystroke something like this: =Control-P-S=, =Control-F=,
  =Control-F=, =Control-F=, =Control-F=, =Control-F=, =Control-F=,
  =Backspace=, =Backspace=, =Control-P-S=.

  I’ll break discipline and object to Mary’s description of the WordStar
  underlining procedure. You could underline a sentence just by starting
  with one =Control-P-S= and ending it with another. What’s the big
  deal, Mary? Your described procedure would apply only to material that
  you underlined _after_ you wrote it. All those =Control-F=s do is make
  the cursor jump a word ahead. _Grrr!_ Then again, maybe I’m simply a
  more decisive underliner. I _know_ what I want! If nothing else, this
  little disagreement shows how work habits influence choices in word
  processors.

  Not only does the new Perfect Writer have the old Perfect’s
  strengths—split-screen editing of up to seven documents at a time, a
  zillion powerful editing commands, still another zillion powerful
  document structuring options—but it’s added a few more just for fun.
  For example:

  ◾ The old Perfect allowed you to delete from wherever the cursor is to
    the end of whatever sentence you’re in; the new one lets you do
    that, of course, and also lets you cut to the end of whatever
    paragraph you’re in—or an entire paragraph, if you’re at its
    beginning.

  ◾ Now you can delete not only the next word ahead of your cursor but
    also the word behind it—a small thing but amazingly handy.

  ◾ You don’t have to delete text before you copy it. (However, the
    process is more complicated than it used to be.)

  ◾ You can flush right material on screen—useful for the
    what-you-see-is-what-you-get feature.

  ◾ You can more or less paginate on screen—although this instruction is
    only good for the what-you-see-etc. editing; it’s useless for the
    document-design mode (@@ commands).

  ◾ You can use the “Search” function to search not only the document
    you’re working in now but any and all other document files on your
    diskette. This strikes me as amazingly handy for editing multiple
    documents when you can’t remember what the name of the other
    document is or where the reference is you’re thinking of. For
    example, suppose you’re writing to Joyce Davenport and you want to
    add a paragraph from a letter you wrote to James T. Kirk but you
    can’t remember more than that it was about artichokes. You would
    invoke “search document”; the prompter then asks you what you’re
    searching for, and you say, “Artichokes.” Pretty soon you have a
    list of the documents the word “artichokes” appears in, and you can
    then call up the one you want for multiple-document editing.

  ◾ Similar to this is something new the main menu offers: you can
    compare two files, and Perfect Writer will show you their
    differences—useful for comparing edited and unedited versions of a
    report.

  ◾ If you have a color monitor, you can “paint” the letters and
    backgrounds of the up-to-seven files you’re working on different
    colors (eight background and sixteen letter colors), so as to tell
    them apart. For me, this falls into the “who cares?” category, but
    some may like it; and I have to admit, you can get some very pretty
    (though not always easy on the eye) combinations.

  ◾ Perfect Writer now has the printing option “End at page X.” Shout
    hallelujah, brothers and sisters!—the new Perfect at long last has
    caught up with the dinosaurs like WordStar.

  ◾ Some of our old favorite document-design commands have been renamed,
    usually for the better. And we have one absolutely dandy new
    command: =@@need=. =@@need= makes sure that there’s enough room left
    on the page for a chart or similar material. If you’ve just written
    a 15-line poem that can’t be broken between pages, immediately after
    the last line of your poem, type in =@@need{15 lines}=; if there
    isn’t going to be enough room on the page, your poem will
    automatically be “forced” to the following page. Hot diggety!

    All is not completely rosy in Perfect land. The new Perfect has lost
    some of the old Perfect’s advantages. For example, the old Perfect
    had an automatic feature that told you where in your document you
    were—35 percent of the way through, or whatever. Moreover, the old
    Perfect had a command that let you know how long the document was in
    terms of both number of lines and number of characters, and where
    your cursor was in all this. I’ve searched the new Perfect manual
    and haven’t been able to find any equivalent new command. The
    closest I’ve been able to come is a command that lets you know only
    how many characters there are in the file, not where you are, or
    anything else; and the command isn’t listed in the index, nor is
    there any equivalent command that I can find. Great work, guys. This
    is what I call a major frustration. It’s maybe bad programming, and
    it’s certainly bad documentation.

    The new manual is slightly better organized than the old one, but
    that’s not saying a lot. I’ve rarely been able to divine the new
    name for the old command in the new manual, and when I’ve found it,
    it’s usually been by accident. It would have been an enormous
    service if the Perfect people had put in some sort of comparison
    chart for us old-Perfect old pros.

    Like the old Perfect, the new Perfect is very cavalier about the
    number of spaces it leaves after a period or colon; sometimes it’s
    the two you typed in, and sometimes it magically gets transformed
    into one. The new Perfect goes the old Perfect three better and is
    randomly cavalier about the number of spaces it leaves behind a
    period, colon, quotation mark, question mark, and parenthesis—not
    only deleting spaces where you do want them but also inserting them
    where you don’t want them. Instead of mildly annoying, this quirk is
    now big-league annoying. May whoever thought it up and liked it so
    much he/she expanded it spend eternity brushing gnats out of his/her
    face!

    You still can’t tell the Search feature to search for something X
    number of times. For example, if three times you use the word
    “pishtosh” and want to change it to “nuts,” you can’t tell the
    search-and-replace feature to “do this three times”—as with the old
    Perfect, you have to do it twice with the “Ask me” and then “Cancel”
    the third time and do it by hand, or do it three times and then have
    Perfect search wastefully through the rest of the document for
    something you know is not there.

    The new Perfect’s printing menu is better than the one the old
    Perfect came with but not nearly as good as the menu that David Hite
    developed in 1983 for the old Perfect Writer. The only improvements
    are the “compare” feature mentioned earlier and the ability to step
    outside Perfect for a while into Perfect Calc, Perfect Filer, or a
    telecommunications program—nothing I’d write home about.

    We’ve lost the “one word” command—a serious blow for those of us who
    used it to get around Perfect Writer’s cavalier treatment of periods
    and colons. This command caused the characters placed within it to
    be considered one word, so that Perfect Filer wouldn’t split certain
    words between lines.

    Perfect Speller, which is now on the same diskette with Perfect
    Writer, Perfect Formatter, and Perfect Printer, is much faster than
    it used to be. Alas, it is just as stupid. Unlike better spelling
    checkers, Perfect Speller works on the system of prefixes, suffixes,
    and roots. In other words, if the word “check” is an acceptable
    root, then “checker” and “recheck” are acceptable. So are
    “checkment” and “checkation.” And like the old Perfect Speller, the
    new Perfect Speller doesn’t recognize its own vocabulary—it queried
    words like “blankline” and “ux,” which are Perfect Writer commands
    and ought rightly to be ignored. My recommendation is to get The
    WORD Plus, which can be renamed to be accessed as if it were Perfect
    Speller and which is far superior.

    An interesting—I don’t say terrific—addition to the Perfect family
    is Perfect Thesaurus. You substitute the Perfect Thesaurus diskette
    for your document diskette in drive B, position the cursor on the
    word you want to look up, type =Escape-S-T=, and Perfect Thesaurus
    checks its dictionary. If the word is there, you may substitute any
    of the synonyms for your original word, type in your own
    replacement, or say “forget it” and go on to look for another
    synonym. The hype says that Perfect Thesaurus “holds nearly 50,000
    words (entries plus synonyms).”

    The parenthetical remark is the key one to home in on. I asked
    Perfect Thesaurus to look up “transform,” and it did; one of the
    synonyms it offered was “metamorphose.” When I asked it to look up
    “metamorphose,” it told me, “Word not found.” (Perfect Thesaurus has
    also never heard of “fanatic,” “asinine,” “pop,” “airy,” “bypass,”
    “instantaneous,” or “shrug,” among about fifteen others of the
    forty-five words I tried.) I’d estimate that the average number of
    synonyms offered for each word is between five and ten—if we
    compromise and say seven, that’s only 6,000 or so words that Perfect
    Thesaurus can recognize. Moreover, Perfect Thesaurus can only look
    up fifteen words before it starts yelling, “No more marks,” and
    refuses to cooperate any further.

    In other words, Perfect Thesaurus is a nice toy, but I question its
    usefulness for serious writers. Having a copy of _The Synonym
    Finder_ by your desk offers you about a million words that you can
    recognize, and is about as fast to use.

    The new Perfect Writer itself still has many of the annoyances of
    the old Perfect Writer:

    ◾ The automatic swapping feature still cuts in at inopportune
      moments and makes you wait before you can continue typing or
      execute a command. It’s now only one second or so instead of five
      seconds or so, but it’s still annoying.

    ◾ There is still no automatic indicator showing where you are in
      your document or how long it is, a feature of every other
      word-processing program known to humankind.

    ◾ You still can’t customize the document-design commands (although
      it’s usually possible to get the look you want if you’ve used
      Perfect Writer for many years and know some tricks they don’t
      mention in either the old or the new manuals)—if you want some
      _real_ customization, tough noogies.

    ◾ You can still start printing by referencing page and section
      numbers, but if you want to start with footnote 125, you’re in for
      a major pain.

    The new Perfect is more powerful than the old one, but not by as
    much as its creators fondly think. After spending two days
    evaluating the new Perfect for this article, I went home and spent
    several happy hours with the old Perfect. Oh, I admit I thought now
    and then, I wish I could cut to the end of the paragraph, or, I wish
    I could delete the word behind the cursor instead of only the word
    in front of it—and the old Perfect Writer is indeed slower than the
    new one (by maybe 5 percent?)—but on the whole I found I preferred
    two keystrokes to five and three keystrokes to six.

    Many of the improvements of the new Perfect Writer fall into the
    category of kludge: lots of flashing lights and ringing bells and
    chrome and racing stripes and wow, look at that dashboard! Perfect
    Writer is still the best word-processing program I’ve ever run
    across, but for those of you who don’t want to give up your 64K
    non-IBM PCs, don’t worry: you’re not missing enough to make spending
    all that money worthwhile.




      BACKUP V ❑ “3-D” Versus Mail-Order Software—and How to Shop


How to pick the right disk?

People like Dusty Park know how to improve the odds. Park was at the top
of his class at a computer school, worked as a customer support man at
MicroPro, then joined a mail-order house called 800 Software in a
similar job.[102] I phoned him there when my mail-order copy of WordStar
didn’t work on my machine. It was a common industry problem, this
incompatibility. _Theoretically_—which doesn’t mean that much—my Kaypro
could read disks in the electronic format of the Xerox 820. Yet my
machine in this respect seemed functionally illiterate.

Footnote 102:

  Since writing this section, I’ve learned that Park has left 800
  Software for another company.

Park told me on the phone that many other Kaypro owners were suffering
similar difficulties, that if need be he’d send me another disk set up
for my computer. Step by step he went over the WordStar installation
procedure with me.

As it happened, I succeeded without him—by having WordStar
electronically piped over to the Kaypro from another machine when my
micro wouldn’t reach the disk. Park had been ready with patience and
empathy. I took it for granted that he would suggest buying by mail in
many instances; but what advice, based on his MicroPro days and other
experiences, did he offer about buying “3-D,” as he called it—buying in
the flesh from a store, in other words?

“The best place to go if you’re buying software retail,” he said, “is to
someone who’s doing a training seminar in the same program you’re
buying. That way you’ve got it aced, because the person who’s doing the
class is going to know the program well.

“You don’t have to take the class, but at least you know that there’s
somebody there who could be asked a question.”

Not that a dealer has to know _every_ wrinkle of a program to teach it.
But you’ve still got a head start if you do choose a store with classes.

Just be sure that the instructor isn’t a circuit rider, so to speak—that
he isn’t flying out of town to another store as soon as he completes a
series of classes. You want him around to answer your questions later
on.

This principle would especially hold true when buying software from
franchised stores. Some stores may be excellent. Others, however, as
Park pointed out, “may be a bunch of small businessmen who used to sell
shoes and bought into a franchise at an exorbitant price.”

Offering, obviously, a mail-order perspective, Park said that the
computer-store managers he knew didn’t always know their software lines
because there were so many products to keep track of. “It takes too much
time,” he said. “There’s too many things to do in a 3-D store to handle
that. Mostly you’re showing people hardware.”

His opinions rang true. Trying out WordStar with Osbornes, I’d run
across sales reps who couldn’t show me how to make printouts of the
letters on the tiny black-and-white screen. Some sales reps were
“terminally” dumb. Others were bright and helpful but too busy selling
too many machines to pick up the basics of WordStar and other heavy-duty
programs. WordStar wasn’t _that_ hard to master, however. I wondered how
stores could counsel customers if they couldn’t even train sales reps.

I asked Park about mail-order software.

croPro,” he said, “I told people, ‘Don’t buy by mail. The dealers are
the ones who can answer your questions. You have a real, live, 3-D
person.’” MicroPro had instructed Park and five colleagues to try to
duck the time-consuming questions from businessmen and others using
computers and to refer them back to their dealers. And yet Park and the
others had actually ended up spending half their time responding to the
pleas of “end users.” And many were the customers of mail-order houses.

But now, Park said, some mail-order people were competing not only with
low prices but also with technical support; 800 Software had even hired
a software guru from the University of California at Davis to evaluate
programs it was going to sell and support. I myself had paid $250 for
WordStar, or about half the $495 list price; however, after talking to
Park, I felt I was in better hands than I would have been at the typical
computer stores I’d visited.

I got everything I paid for; 800 didn’t pull any cheap tricks like
sending the software without a manual, which, in fact, some mail-order
houses may do. This isn’t an endorsement of 800 Software. It shows,
though, that at times you can successfully bypass the wretched support
and high prices that many stores inflict on software shoppers.

“Save by ordering some software by mail,” advises _CPA Micro Report_,
“but only if the package is easy to install and easy to use. If you’ll
need training before you can use it or if the package must be configured
for a hard disk, buy through your local dealer. Word processors and
spreadsheets are examples of software you can safely buy through the
mail. General accounting, client write-up systems and communications
software should be purchased through a dealer.”

It’s good advice, basically. Park says few people call him about
spreadsheets, that they’re easier to unravel than many programs. So
what’s the most trouble? Data bases, sometimes. “But word processors
definitely take the cake.

“You’ve got to deal a lot with special features on printers, like
boldfacing and underlining and whether the software will let them work
right,” Park says. He suggests the obvious—that before buying new
software, you find out how it will run with your printer and computer.
Of course, as stated earlier, you’ll ideally select your hardware
_after_ you’ve chosen your general range of software. Park says most
people don’t fully “realize the implications” of the software they’re
ordering “because they haven’t thought of it yet.” There’s the old
problem, of course. How do you know you’ll like the software until
you’ve tried it at leisure? And then you normally can’t get your money
back. Before you order by mail, give serious thought to asking someone
locally for a “3-D” demonstration.

A very leisurely tryout, in fact, is a good idea no matter how you’re
buying, mail or “3-D,” and ideally you’ll have someone with you—a clerk,
a secretary, anyone who’ll actually be using the system.

You might even want to bring along your accountant or somebody else
working with the information that comes out of your computer system. At
the very least, show him the software manual before you buy the program.
Don’t take the software seller’s word that the software will keep the
IRS or the SEC happy. Instead, trust the accountant or lawyer you use in
your business. If he’s uncomfortable with computers, ask him to
recommend someone in his profession whom he could work with. You don’t
have to fire him. Just get him the backup he’ll need.

A computerwise accountant, for instance, can tell you if a general
ledger package has a good =audit trail=—a way to keep track of what was
done on the computer system to make the records come out the way they
did. A computer-literate lawyer or accountant can also make certain that
the software is reasonably crook-proof.

Follow the same rule as with hardware. Find someone already using the
program you want to buy. Is he happy with it?

The nearer his work is to yours, the better. The best authority on
accounting software, for instance, isn’t a computer guru: it’s an
accountant. But beware. Some people may have chosen their programs
without considering the alternatives, and they might have done better
using a different system. Ideally, your fellow accountant, lawyer,
doctor, whatever, did plenty of shopping before making up his mind.

Also, remember how subjective software is. Even if someone is in your
field, he may think differently and do his job differently.

Of course you might read reviews in computer magazines, but be careful.
I recall how glowingly some of them described early versions of Select;
how they said it was superb for heavy-duty writing, even though, quite
clearly, it was a bona fide kludge.

“How could the reviewers be so wrong?” I asked a computer salesman, a
good one, who had sold a number of copies of the Spellbinder program to
Kaypro buyers unhappy with the early Select.

He replied, “Advertising. They did a lot of advertising in the
magazines. That’s probably why.”

Well, maybe. More likely, however, the reviewers simply were writers
unfamiliar with alternatives like WordStar or computer experts
unfamiliar with the needs of most writers. Your best bet is to read the
magazine reviews, and this book, knowing that the ultimate authority on
your software needs is _you_.




                     BACKUP VI ❑ “Easy” Data Bases:
                          Another View (Mensa
                             Member Versus
                               InfoStar)


Charlie Bowie, one of the stars in Chapter 6, “Three Software Stories,”
breezed through the dBASE II program. But not everyone will find all
data bases so easy. Mary Matthews didn’t. And you can’t call her stupid.
She is, after all, a Perfect Writer guru/Sibyl. Also—I’m sneaking this
in behind her back—her IQ is high enough for her to belong to the Mensa
group for bright people. She’s a Smith College alumna, a human
dictionary, now working as publications director at a prestigious prep
school. I thought that InfoStar—well reviewed in a major micro
magazine—would be a cinch for her to learn and use in listing the traits
of a good data base.

Well, back comes this essay telling me that she banged her head against
InfoStar for a week and almost committed hara-kiri. You can interpret
that as a failing either of Mary or of the program. I’ll blame the
software and documentation.

(Of course she’s full of bilge in her Perfect Writer review when she
knocks my beloved WordStar.)

Mary, please note, has nice things to say about InfoStar’s power; she
says it might even be worth the torture. And a consultant can simplify
the program for you. Still, if _Mary_ is having trouble befriending
InfoStar, what about average people who must master powerful data-base
software?

They’ll succeed only if they have time and buckle down. They mustn’t
swallow the manufacturers’ cant that the programs are “simple”—at least
not if the software’s like InfoStar. Oh, well, at least they can console
themselves that their business competitors may also be suffering.

And once learned, programs like InfoStar (as Mary’s essay shows) can
indeed make life easier.

Her observations:

There are a number of data-base programs on the market for personal
computers, with new entries coming in daily. The MicroPro people—parents
of the famous (or infamous) WordStar—have come out with a dandy of their
own: InfoStar, which can sit up, roll over, and whistle Dixie.

What does one look for in a data-base program? To a certain extent, of
course, it depends on what one wants. Someone who wants to put a Rolodex
file on to the computer is going to need a lot less by way of power and
versatility than is the owner of a small business who wants to use the
data base to keep track of clients, orders, and inventory.

The first thing to think about is how much data the program can handle
without going off its nut or slowing down so much that you could walk to
Waukeegan and back while your program is processing any entry. Here are
some terms and ideas to keep in mind:

◻ The =data base=, or =data file=, contains all your entries. InfoStar
  allows any number of data files per diskette; others allow only one.
  Score one for InfoStar.

◻ The =data record= covers _all_ the information you store for each
  entry into your data base. How big will your program allow each data
  record to be? How many data records will your program allow before it
  seizes up and refuses to accept any more? Will the program warn you
  that as of X moment its files are full and it won’t accept any more
  records? (I once spent two days trying to figure out why Perfect Filer
  was giving me back nothing but garbage before I thought to check and
  see whether my diskette was full.)

  InfoStar will allow you a maximum of 65,535 data records per file. By
  way of comparison, Perfect Filer will accept as many data records as
  the diskette will hold—about a thousand if your diskettes will hold
  200K of memory and you’ve filled up your data entry screen with lots
  and lots of data fields; probably a skillion if you only have one
  one-character data field and a lot of disk capacity. The new program
  dBASE III will allow over a billion records or _two_ billion
  characters in a file—again, up to the limit of your disk space.

◻ The =data fields= are the building blocks to your data record. Some
  obvious attributes a data field may have are that it is alphabetic
  (letters only); numeric (numbers only); or alphanumeric

  (okay, you guessed it). That’s about all the simplest data base
  programs allow—but here’s where InfoStar is an absolute champ. Some of
  the attributes InfoStar will allow:

  1. The field may only contain certain numbers and/or letters—for
    example, if you’re typing in a state abbreviation and type “IT” when
    you mean “IN,” InfoStar will stop you and tell you that’s not
    acceptable. (It does this by checking what is called an authority
    file and comparing the authority’s contents with your input.
    Handy-dandy!)

  2. The field will _enter itself_ based on your previous entries. For
    example, you can enter that your customer wants 47 of your code
    number W889AA (widgets), two entries; and InfoStar can look up the
    price of widgets, multiply that by 47, look up the sales tax for
    the state you inputted earlier, multiply your subtotal by the
    amount of sales tax, and all by itself enter the name of the
    product, the subtotal, the amount of the sales tax, and the
    total—zip-zip-zip-zip, four entries, all done by the computer
    rather than by you and all done in a flash. The first time I tried
    it, I was startled into yelling, “Wa-hoo!”

  3. The field can be a constant. For example, if your data record
    contains years, you can tell InfoStar to enter “198” automatically,
    and you only have to enter “4,” “5,” or whatever.

  4. The field can automatically shift cases for you. For example, you
    can type in “new york, ny,” and InfoStar will insert into the data
    record “New York, NY.”

  5. The field can insist that whatever you type in is identical two
    times in a row or it won’t save the data record—useful if you deal
    with complex numbers that _have_ to be right.

  6. The field can be required—something that you _have_ to enter, or
    InfoStar won’t let you go on.

    Oh, and these are only examples! I guess I’m just a simple country
    girl, but I was amazed and thrilled by all that InfoStar could do
    with its data fields.

◻ How big are your data fields allowed to be? How many fields are you
  allowed to have? InfoStar allows you a maximum of 245 fields per
  record, and a maximum of 255 characters per field—it comes out to a
  maximum of 62,475 characters per data record. (Perfect Filer, again by
  way of comparison, theoretically allows 70 fields with a combined
  total of 1,024 characters. On the other hand, the one time I tried to
  test this limit with Perfect Filer, the program went comatose on me.)
  I do wonder whether an InfoStar data record that was 61K in size might
  mean you would get fewer than 64K data records into your data base. On
  the other hand, who could imagine a 61K data record on a personal
  computer? It is, after all, about the same size as a 60-page letter to
  your Aunt Millie, and how often do you write 60-page letters to your
  Aunt Millie?

◻ Once you have data in your data base, the =sort keys= determine how
  you can get the data out again. Do you want to get the information out
  in alphabetical order by name? Numerical order by ZIP code or phone
  number? Some combination of the two? (For example, you might, if the
  information is in your data records, want to sort your friends by who
  is left-handed, who gave you a Christmas card last year, when their
  birthdays are, or all of the above.) How many sort keys will the data
  base allow? What kinds? How long does it take the program to do a
  sort?

    To take a primitive example, Perfect Filer allows you up to five
  sort keys (alphabetical order by sister’s name, for example; numerical
  order by ZIP code; both; numeric order by phone number; all three; and
  so on). Perfect Filer will also generate up to twenty subsets from
  which to sort. (Left-handed Republicans, female plumbers, all those
  who owe you more than three dollars—you name it.) And it will also let
  you have up to 40 list format fields—that is, it will allow you to
  generate up to 40 different kinds of list (all left-handed female
  plumbers who live on the West Coast). InfoStar, on the other hand,
  will allow you 32 sort fields, which is a few more than 5; but it
  doesn’t have any subsets per se and doesn’t seem to allow you more
  than one list format. On the other hand, the range of “logical
  expressions” it allows is amazing, and provided you understand BASIC
  (InfoStar’s data are written in CBASIC) fairly well, you can attain
  heights of efficiency Perfect Filer couldn’t even dream of (more on
  this immediately).

◻ What kinds of =calculations= will your program do, and when does it do
  them? Some programs will allow you to add, subtract, multiply, divide,
  and other even more abstruse calculations, and all at the data entry
  stage. The best of these allow serial calculations. For example, take
  A and multiply it by B; then divide the result by C; then add it to D.
  A program known as DB Master allows calculations for only two fields
  at a time: A plus B equals C. D plus E equals F. C plus F equals G.
  Other programs will only allow you to specify that certain relations
  between data exist, and then only at the report-generating stage.
  Perfect Filer, for example, will allow you to specify that you only
  want your report to contain the people whose ZIP codes are between
  20815 and 21903—but it won’t do any arithmetic at all. InfoStar, on
  the other hand, can do algebraic and numeric calculations and impose
  such logical conditions as “include this record if it meets X
  criterion”; “do this calculation unless the data field is Y”; “do this
  if conditions X _and_ Y _OR_ conditions P _or_ Q exist.” Zowie!

◻ What sort of “=overhead=” does the program demand? That is, what do
  you need to be stored on your diskette in addition to your data
  records? One trade-off might be that the more sort keys, subsets, list
  formats, and/or logical expressions you have, the less space you have
  for your data records. Unlike Perfect Filer, InfoStar creates an index
  file for every data file that you create. An InfoStar index file
  contains only the field values of your sort key(s) and addresses for
  each of your data records, but even so, with a lot of sort keys and
  with a nice, big data base, the index file is not going to be tiny.

  Playing with InfoStar—after a week hunched over the keyboard, I still
  can’t say I’ve learned it—was, in order, daunting, boring, thrilling,
  mystifying, frustrating, and annoying. The program comes with four
  (count em, _four_) diskettes and three instructional tomes of a size
  and heaviness guaranteed to strike fear into the heart of a neophyte.
  We’re talking half again as big as the compact edition of the Oxford
  English Dictionary. We’re talking three three-ring binders crammed to
  capacity with information. Daunting.

  The program comes complete with three on-line tutorials—one
  introductory tutorial that assumes that the person using it has never
  been near a computer before, one tutorial for data entry, and one
  tutorial for generating “quick reports.” All three are pretty to look
  at, slow as molasses to try to go through, and simpleminded in the
  extreme. The first one, for example, draws you a picture of a computer
  terminal on its screen just in case you’re suffering from selective
  blindness and can’t see the terminal you’re running the program on. My
  advice to those who buy InfoStar and who’ve ever even _seen_ a
  computer before is not to bother with the tutorials—certainly not with
  the first one!—but to go straight to the training manual and start
  plowing your way through. It shouldn’t take more than a hundred years.

  When I started playing with some of the data bases that InfoStar
  provides for its customers, I was excited. No, I was _thrilled_. I’ve
  never seen anything like some of the things InfoStar can do, and
  watching six fields fill up all by themselves after Id inputted one
  number made me chortle with glee.

  InfoStar uses most of the same commands that WordStar does, which is
  convenient if you happen to _like_ control commands. I first began to
  get annoyed when I discovered that InfoStar does not use arrow keys.
  If you want to move your cursor, it’s =CTRL-D=, =CTRL-S=, =CTRL-E=,
  =CTRL-X=—the same commands WordStar uses and a major-league annoyance.
  Nor have any Function keys been assigned any values. And every single,
  solitary time you use InfoStar you have to go through at least four
  help screens—like it or not. Grrr!

  I first ran into trouble when I began trying to define my own data
  record. Drawing the screen is easy; but what does one do when one is
  trying to assign attributes and runs up against prompts like, “Field
  derived? Processing order? Copy attributes of field? Pad field? Batch
  verify? Range check? Edit mask? Entry/content control character
  codes?” I’ll tell you what I did: I read the training manual. I read
  the reference manual. I tried native cunning. I tried pounding my fist
  through the keyboard. I tried crying. InfoStar’s hype says, “On-screen
  menus give you options in plain English ... while a series of help
  screens guides you through each procedure.” Yeah; and I am Marie of
  Romania.

  The same sort of thing happened when I started fiddling with the
  generation of reports. As promised, InfoStar “enables you to create
  and print a report in sixty seconds.” The report prints all the data
  in the given file. Here’s what the report for the file I’d tried to
  construct looked like:

  B:MMPLAY REPORT
  B:MMPLAY REPORT
  B:MMPLAY REPORT

     10/21/84
     10/21/84
     10/21/84

     FIELD #001 FIELD #002 FIELD #003 FIELD #004
   FIELD #005                         FIELD #006
  FIELD #007 FIELD #008
       ____ ____ ____ ____ _____ _____ _____ _____
   ____ ____                              ____ _____
  ____ ____ _______ ____
      mwm        Mary         W.          Matthews
  4823 Willett Parkway                     Chevy Chase
  MD           20815
         ec            Ed                 Corrigan
  Pirmasens American School                 New York
  NY              09189

  I hope you get the idea. I’m too depressed to go on. So much for the
  “quick report” that you can create in only sixty seconds.

  Next I tried to design a “custom report.” The prompts didn’t start out
  to be quite so confusing—“Is the file going to be used for Input or
  Output?” and “How large should the disk buffer be?” But by the time I
  got to “Edit mask,” “Copy attributes to field,” and “Enter algebraic
  expression,” I was thinking seriously about hara-kiri. We are _not_
  talking quick and easy here. We are talking call in the professionals
  or resign yourself to a lot of long, hard work. Considering that I
  don’t even get to keep the copy of InfoStar—I only own a 64K CP/M
  machine, and InfoStar requires a PC DOS and at least 96K of RAM and
  recommends that you use a hard disk (but will put up with two floppy
  drives provided that you can get 320K of memory on each disk)—I
  eventually just threw my hands into the air and gave up. There is no
  doubt in my mind that InfoStar is a terrifically powerful program that
  will allow you to do just about anything you want in the world of data
  bases. The doubt in my mind is whether I’m an ordinarily intelligent
  person who was thrown by some big-league complexity or whether I’m an
  absolute moron because I didn’t find the program “simple” and “easy to
  use.” (Variations of the words “simple” and “easy” appear seventeen
  times in the InfoStar hype booklet; for example, “InfoStar is ...
  easy-to-use ... goes well beyond the capabilities of a simple data
  base system. InfoStar eases the job of managers.... It’s really quite
  simple. The whole process is really quite simple.... And it’s
  easy....” All this on one page, mind you.)

  To sum it all up in a nutshell, InfoStar offers some _wonderful_
  features, particularly in the area of making things easy for the clerk
  typist/secretary who’s doing data entry. And it is, as advertised,
  lightning fast at calculations and sorting. Its use of WordStar
  commands is a drawback, and its refusal to allow the arrow keys to
  function, along with its insistence on making you plod through help
  screen after help screen that you’re really not interested in, can be
  infuriating; but I suppose the clerk typist who is forced to use
  WordStar—at only five years old the dinosaur of word-processing
  programs—might find it convenient.

  But if you, the doctor or lawyer or small business owner, want a
  custom-designed form or a custom-designed report, you’re not going to
  be able to delegate the job to a clerk typist/secretary/assistant.
  You’ll have to either hire a consultant to do it for you or resign
  yourself to spending days or even weeks mastering ideas and language
  that, to me, range from the arcane to the dumbfounding.

  It’s really quite simple?




                      BACKUP VII ❑❑ Graphics Tips


No matter how you’re using a graphics program, remember the RDHP—the
Rough-Draft Hierarchical Principle. It also may help at times when you
word-process memos.

The principle: create the basic pictures or prose yourself. But if
pressed for time? Then farm out the details. Just as a secretary might
put your memos in the right format on paper, he or she might also smooth
your drawings. Or your art department might.

Here are other tips for graphics users:

KNOW YOUR CHARTS AND OTHER BASIC TOOLS

A =line chart=—a graph with the outlines of hills and valleys—is great
when broad trends count more than the numbers themselves.

One glance at a good line chart can tell you if wok sales are up or
down.

And for even better effect, you might try a =curve chart=, or =area
chart=, filling in the area below the curves that the lines make.

“Instead of looking like a wriggly line,” explains Carl Herrman,[103] an
award-winning graphics expert, “it looks like a mountain. It’s much
easier to follow.”

Footnote 103:

  Carl Herrman is communications director at MITRE Corporation, a
  nonprofit research and consulting firm in McLean, Virginia. His
  address there is W 160, 1820 Dolley Madison Blvd., McLean, Virginia
  22102.

And if you want to show sales trends in three wok categories? Well, you
can still use a filled-in chart.

“You might fill in the bottom one solid black,” says Herrman. “You might
do a =cross-hatch=—parallel intersecting lines—on the middle one. And on
the top one, you might have a straight-line effect or a lot of lines
running close to each other.

“That way, you can readily see the difference between the three It’s
more effective than three graph lines on top of each other.”

Another tool is a =bar chart=, with bars of different sizes—horizontal
or vertical.

=NAME THAT CHART= With Apple’s Macintosh and the Microsoft chart
graphics package from Microsoft, you can whip up charts like the ones
below. Chart will even pick up numbers from a sister spreadsheet
program, Multiplan. My thanks to artist Jo Steele, who works for the
Dartmouth College Computer Center and is a partner in Northtronics
Associates. Oh, and don’t blame Jo for the use of those over-mentioned
woks. My mistake. Next time I’ll use dishwashers or watermelons.

[Illustration:

  Do broad trends count more than the numbers themselves? Then use a
    =line chart=, a graph with the outlines of hills and valleys.
    Amalgamated Wok might decorate each sales rep’s office with such a
    chart, at which a myopic CEO could smile or frown as he walked in.
]

Use a bar chart to compare sizes or emphasize differences, including
those over time. With the bar chart, you might contrast 1979 wok sales
with 1984’s.

Don’t normally use the bar chart, however, to illustrate trends. For
that, it’s usually back to the old line or curve chart.

Just the same, Mike Slade, a product manager at Microsoft, says: “There
are times when you can illustrate trends successfully using overlapping
bar charts—with bars of different colors or patterns.

[Illustration:

  A =curve chart= or =area chart= is just a line chart with the area
    below the lines filled in. This is a deluxe version with different
    shadings indicating different years. A no-frills area chart might
    actually be easier on the CEO’s eyes than would a line chart without
    shading.
]

[Illustration:

  Yes, wok sales are increasing and our canny artist used a =vertical
    bar chart= to emphasize this. Just the ticket for a presentation to
    a stock analyst studying the prospects of the Amalgamated Wok
    Corporation. Notice that numbers are easier to take in than those on
    a line chart.
]

“You might have a vertical bar for 1979 wok sales slightly overlapping
with one for 1979 widget sales and continue these twin bars for the next
five years.

“Use overlapping bar charts when you’re showing trends for a number of
different products or categories.”

[Illustration:

  Wow! Look at the hefty wok sales in November and December. Someone
    offer rebates? Actually you’d be better off using a =pie chart=
    instead to show the percentages of semi-annual sales from different
    regions. _Regions_, not the 50 states. You can only slice a pie so
    thin.
]

Yet another tool, the =pie chart=, just like a pie, with slices, nicely
shows relations of complete parts.

Use the pie chart to show the percentage of sales that came from four or
five regions.

On the other hand, suppose you have many, many small components in your
pie—say, you’re interested in the percentages of domestic sales in each
of the fifty states. Then a map with percentages on it might be better.

I’ll stop here—this is a computer book, not a graphics guide. For more
detailed information, Herrman recommends _Designer’s Guide to Creating
Charts and Diagrams_ by Nigel Holmes (from Watson-Guptill, New York).

KEEP IT SIMPLE—WHETHER ITS A CHART OR MEMO

Don’t make your charts look like puzzles. “If you clutter up your chart
with too many facts, you’ll lose the very simplicity that graphics can
offer,” says Herrman. Home in on your main point. “If need be,” he says,
“use a short narrative under the chart to back it up.

“In fact, you might be able to say something in words more simply than
with a chart. If you’re trying to compare the cost of widget imports in
the last fifty years and it’s doubled each year, then why not just say
so in prose?”

Also, avoid other forms of visual clutter. Don’t make people’s eyes spin
with special effects and too many colors.

=Grid lines=—a series of little squares like those on engineering graph
paper—often confuse chart readers. “Don’t put them in if you can help
it,” says Herrman.

“Definitely not,” agrees my friend Hard-core bureaucrat.

In memos, don’t confuse your readers with a barrage of different
typefaces. A little variety is good. But make sure you have a decent
excuse, such as special points to stress or different categories of
information.

“If you show off your fancy typefaces,” says my friend the
Hard-Core-Bureaucrat, “it’s just a plague that’ll make your eyes ache.
That’s one reason I’m down on fancy graphics for routine stuff. Some
Macintosh users are going to produce memos that look like samplers from
printing salesmen.”

Even on a thousand-word memo, use three of four typefaces at the most.
Also, don’t stint on white space. Apple’s manuals for the Macintosh and
its more expensive sister, the Lisa, are models of wise use of white
space.

AT THE SAME TIME, KEEP IT LIVELY!

If you can get away with it, why not try a little flair in your graphics
and your points will be more memorable.

A good model in many cases is the newspaper _USA Today_, which sports
some of the liveliest graphics in the country.

It regularly publishes charts with such sexy facts as amount expected to
go for health care in 1990 or the percentage of women who received
haircuts and other beauty-shop treatments in 1983.

To jazz up the chart titled “Only Their Hairdressers Know,” an artist
drew the face of a woman with her hair blowing out. The lengths of the
bunched-up strands varied according to the percentages of women
receiving different kinds of treatments. “Haircut” (76 percent) was
three times longer than “Coloring” (a mere 24 percent). Today the
average micro user may not be able to produce such “hairy” graphics, but
the future may be different.

Snazzy graphics is like colorful writing. Humanize your work. The “Only
Their Hairdressers Know” chart wasn’t in the fanciest of color—just
black and white and blue—but it was more eye-catching than most
eight-color ones might have been.

And if you yourself can’t draw too well even with a computer? Well, what
a chance to liven up the workday of a young, talented aide who’d like a
break from the typewriter, er, word processor!

Besides, on occasion, you can at least do what an editor may have done
with the hairdresser chart—think up the basic idea.

KEEP THOSE CAPTIONS LIVELY, TOO

Imagine you’re writing captions for a hybrid of the _New York Times_ and
_The National Enquirer_.

Try to be accurate, clear, and interesting.

Snare the skimmers! Give them no choice but to read your report.

I’ll qualify that. Alas, many report writers, especially the government
species, don’t _want_ to be clear with words or charts.

Maybe they can scrutinize this section to know what to do in reverse.

KNOW YOUR COLORS—WHEN AND HOW TO USE THEM

There _is_ life without color.

Just look at the nifty things you can do with high-resolution black and
white, with its many different shades.

If your picture offers widely varied shapes and sizes, color just might
not help that much.

Think, too, about costs. If Mac had had color, the $2,500 introductory
price would have been several times higher. So Apple concentrated
instead on resolution. And very likely, some makers of similar machines
will do the same. There’s a technical trade-off: color capability often
comes at the cost of sharpness. Even black-and-white graphics today—at
least the affordable kinds—normally are a far cry from the sharpness
required in an annual report or the slickest sales brochure.

Still, to a generation weaned on color tv and movies, a 100 percent
monochromatic life would be like a monastic life.

And color could be just the ticket for enlivening graphs that visually
drone on and on with statistics.

What’s more, it can help separate elements of charts. Just don’t overuse
or abuse the technique. Don’t use color to slice a pie chart too thin.

In working with color, you should know the best combinations. Often
you’ll want to alternate weak, cool colors with strong, warm,
“advancing” ones that leap out from the screen. The strongest colors
usually are bright red first, then orange, then perhaps yellow—it
depends on your machine and other variables.

“Your weakest colors,” says Herrman, “could be blue, green and brown. If
you try blue and bright red, your chart will be much more readable than
if it has green with blue. You might also use green and orange.”

Try, too, to avoid adjacent colors that “vibrate” together in an irksome
way. “Red and green is worst,” Herrman says. Another loser: red and
blue.

Other advice? Match colors to what they stand for. If you’re comparing
oil and gas production, the oil might be black and the gas a light blue.
Oil sometimes _is_ black. And gas often bums blue.

Remember, also, that dark colors often can better represent large
numbers. Say your company has its biggest, best year ever in sales. And
now you’re bragging with a multiyear bar chart? Well, you use a dark
blue or black bar to represent your recent, gigantic revenues. The
leaner years, by comparison, might be a very light color or maybe faint
grays or perhaps just white inside gray lines.

Yet another tip is to be consistent if possible. “If you’re comparing
oil and gas through twenty charts,” says Herrman, “stick with oil in
black and gas in blue in all the charts.”

“But,” you say, “how do I choose my graphics programs in the first
place?”

Here are the questions you should ask, among others:

1. Does the program help you come up with pies, bars, or whatever kind
  of chart or drawing will be most useful to _you_?

2. Can it do so as quickly as possible?

    Here programs using a mouse—the pointer on your desk—have a real
  advantage.

3. Does the program fit in well with your other software?

  That’s one advantage of Lisa- and Mac-type systems. You can more
  easily stick a chart inside a page of text—perhaps sparing your
  readers a distracting flip to the back.

  Another advantage of a “good fit” is that it may save you hours of
  typing and drawing. Look for programs that will let you select trends
  from spreadsheets, then more or less automatically whip up charts
  based on the numbers. This way, too, you don’t have to waste time
  typing in the numbers from the spreadsheets. Microsoft Chart can do
  that with the right software for the Mac, Lisa II, and IBM computers.
  Are you shopping for a program that changes charts automatically along
  with the numbers? Then see if you can do this without having to clear
  the chart from your screen and replace it with a special menu.

4. How much memory space does the program—and the electronic files of
  the resultant drawings—take up?

  You want enough space on your disk for spreadsheets, word processing,
  and other programs _if_ you change your tasks often. But you don’t
  change often? Then don’t worry as much about this.

  Frugal use of space, of course, is one advantage of integrated
  programs combining graphics with word processing and spreadsheets or
  communications.

  You might also worry about the lengths of the files. One chart can
  take up the equivalent of page after page in disk space if you’re
  storing the image of the chart rather than the instructions for
  creating it.

5. What about the program’s color capabilities—both on screen and on
  paper? How many colors offered? And if the program has preset color
  combinations, do they work well together?

6. Does the program coexist okay with the printer or plotter you own or
  are about to buy?

7. How easy is the program to learn? What about the other general traits
  of good software mentioned in Backup III, The Lucky 13?

Whatever your graphics program, don’t stint on the hardware. A good,
sharp, high-resolution screen is just as important—more so, in fact—as
it is in word processing.




                  BACKUP VIII ❑ Consultant Contracts:
                              Some Who-How
                               Questions


Charles Harris, a lawyer who is expert in computer negotiations, ticks
off a list of contract questions very similar to the Who-How from the
newspaper world.

His list:

1. “Who?” Who from the contracting firm is doing the work? A junior
  member? If so, you might ask, “Can he perform? Will the consulting
  firm still bill me the full rate?” Find out the track record not only
  of the firm but also of the people actually doing the work. Write
  their names into the contract if you can. Spell out the qualifications
  of substitutes you’ll use if the original people leave the consulting
  firm before finishing the assignment.

2. “What?” Describe the task as clearly and precisely as possible. And
  in my opinion you might consolidate the “What?” and the “How?” here.
  Is there a right way and a wrong way of accomplishing the “What?”?
  Find out the right way before signing the contract.

3. “When?” Can you negotiate a penalty if the firm misses a deadline?
  And how about a bonus if it comes in early?

4. “Where?” Will the consultants do the work in your office? Theirs? On
  your computer? On someone else’s?

5. “How much?” Obvious.

    In my opinion, you’d also do well to keep asking the “Why?”—to make
  the consultants justify whatever they have in mind for you. Why not?
  You’re the one spending the money.

Also, at least consider the following:

1. Thinking small. Don’t bargain over the Who-How simply for the whole
  project; break it up into parts. “You say, ‘For this much money we
  expect to at least get a machine in the door,’” Harris suggests. “‘For
  this much money we expect to get the following diskettes for the
  following programs.’ ‘For this much money perhaps we’ll talk about
  customizing software.‘” If a consultant flubs an early part of the
  work or specifies the wrong programs or equipment, then you can more
  easily send him packing. “But,” you worry, “can a rival consultant
  pick up the pieces?” Well, you simply insist that the original
  consultant do his work in as standardized a way as possible. See if he
  can use a program like dBASE II or III—software with which thousands
  of other consultants are familiar.

2. Making the consultant give you the source code of the new software.
  That’s another pick-up-the-pieces kind of protection.

3. Insisting that any manuals for his software be complete and in plain
  English. If your consultant can write only computerese, in fact, you
  might not even want to bother with negotiations.

4. Bargaining if possible for a software warranty. Then, if you discover
  glitches in the software after it’s in use, the consultant won’t
  charge you to correct his own mistakes. You might not succeed here.
  But try.

5. Possibly requiring the consultant to give you a discount on
  modifications or expansion of your system.

6. Negotiating for full or part ownership of the software he may develop
  for you. But don’t count on getting rich from the sale of the
  programs. Adam Green, a software training expert, tells of a
  computer-store salesmen who, in that way, would appeal to customers’
  greed. A taxidermist, for instance, might hear this pitch: buy from
  me, use the right consultant, and you’ll make a killing in specialty
  software for taxidermists. “The consultants would usually intend to
  finish a job writing this specialty software,” Green said, “but it
  would drag on, and the customers would run out of money, and the
  things usually didn’t get finished.” Very likely you _won‘t_ want full
  ownership, because it would reduce the consultant’s interest in
  perfecting his brainchild.

7. Forbidding the consultant from selling the new software to your
  competitors. Antitrust complications might arise if you don’t bear the
  financial risks of software development. If you do, however, you’re
  within your rights to demand exclusivity, just as the consultant is
  within his rights to charge you more for it. “Trade secret” is a key
  phrase both here and on the issue of ownership. “I recommend to
  clients that they go for trade-secret protection because copyright law
  protects the information only in the way it’s presented,” says William
  Wewer, a Washington lawyer who specializes, among other things, in
  intellectual-property law. In other words, an unscrupulous consultant
  might bypass the copyright law by using a different programming code
  to duplicate your new software’s functions.

8. Making the consultant pledge that he won’t violate any trade-secret
  laws or copyrights. You don’t want to suffer because someone else has
  plagiarized or pirated software. Be certain you’ll own the _master_
  copies and instruction manuals that the consultant buys. Try to
  register immediately with the software company as the buyer or user of
  the disk. You want to know about updates of the product and about
  debuggings, which you won’t find out about with a pirated copy. A
  shady Massachusetts consultant has resold the same dBASE II program
  ten or fifteen times. The buyers think he is purchasing it for them
  and that he’s going to supply a version modified for their needs. “But
  halfway through the work,” Green says, “he just walks off.”

9. Hammering out a confidentiality agreement, if necessary, to protect
  company secrets. You don’t want an outsider blabbing to competitors.

10. Making the consultant agree in writing that he is working as your
  independent contractor, not your employee. Protect yourself against
  unfair Workmen’s Compensation claims and in similar ways.

11. Trying to write into the contract your right to a full explanation
  whenever you want one. Make the consultant justify his recommendation
  for a certain computer or a certain program; he owes you at least oral
  explanation and perhaps a written one. How much experience has he
  himself had with the product? Is he going by someone else’s word?
  Whose? How certain is he that the software-hardware combo that worked
  for the other person will work for you? Can he arrange a demonstration
  of the combo so you can see for yourself how the software runs?

12. Remembering that there’s only so much protection the law can give,
  especially at the micro level. Trade-secret and copyright laws can be
  vague and expensive to enforce—a major stumbling block to a small
  business. Your best protection is simply to deal with a reputable
  consultant whose credentials you have checked.

13. Choosing the right lawyer, if you can afford one, for the contract.
  He needn’t call himself a “computer lawyer.” A good contracts lawyer
  or intellectual-property expert, if conversant with computers, might
  also work out.

If the job is simple enough, don’t negotiate in the same detail that GM
does when installing a $10-million mainframe. Again, even with small
tasks, do sign a contract or write a letter similar to the sample one on
page 114. And if you can afford it and the job’s important enough, think
about still-another contract—for a second consultant to check up on the
first.




                      BACKUP IX ❑ Window Shopping


The ad men and writers have had fun with the inevitable: “Microsoft Does
Windows.”

You read the headline and envision some programmers with buckets and
rags, bravely scaling Manhattan skyscrapers to help executives get a
clear view when they’re looking up from their computer screens.

=Windows=, however, actually are _within_ computer screens.

You can split your screen into parts: one window showing a chart, for
instance, while the other displays the report into which you’re
inserting it.

Of course you need a screen big and sharp enough to get good views of
many windows.

And the software problems could be hairy. Microsoft as of late 1984 was
months and months behind in releasing its windows-type product. Other
companies were behind on theirs, too. Someone once coined a term for
much-talked-about-but-late software—“vaporware”—and it is sure described
windows.[104]

Footnote 104:

  I asked John Butler, a Microsoft products manager, why windows would
  hit the market months late. “We don’t like to announce products too
  far ahead of time when they’re not fully developed” he said, “but with
  Windows we had to tell other software companies about its existence
  early on—so they could write programs taking full advantage of ours.”

Well, now that the miracle windows are theoretically here, are they
worth gazing at?

Depends.

_Don‘t_ buy windows if you’re just writing short letters and you needn’t
blend anything else into them or regularly don’t consult other material.

But consider them if, say, you want to look at many spreadsheets quickly
while writing reports.

Think what this means to executives with cluttered disks, er, desks.
They can stash their material away electronically and not have to print
hard copies as often in the future.

“I can imagine people having as many as twenty or thirty windows ready
to call up with notes or working papers,” says John Butler, a product
manager with Microsoft.

Also, windows software may let you switch noticeably faster from one
program to another. And with a RAM (temporary computer memory) above
500K, you may even be able to do so instantly.

The plus of this? You won’t need to return as often to your computer’s
operating system and feed the programs one by one into the RAM.

So the machine may seem to impose itself less between you and your work.

When “windows shopping,” however, you should ask these questions and
more:[105]

1. Is the convenience worth the extra several hundred dollars you’ll be
  paying for the window software alone if it doesn’t come with your
  computer?

2. Up to how many windows can you see on your screen at once?

3. How do the windows look alongside each other? Do they =overlap=, just
  like papers atop each other? Or do they =tile=? That is, if you select
  more windows, the existing ones shrink, and you view less from them.

4. How about =data transfer=? If you move information from one
  electronic file to another, will important details remain? For
  instance, the way rows and columns coexist with each other on a
  spreadsheet? Can you cut a graph out of a chart and insert it in the
  text of a report without it shrinking or ending up distorted? Will it
  reproduce in as much detail as it would without your reaching it
  through a window?

5. What kind of graphics—=bit mapped= or =character based=? The bit
  mapping means sharper images. Your computer keeps track of each little
  dot, each pixel, on the screen. That hogs memory and may rule out
  color. =Character-based= systems, though, don’t let you make your
  lines and curves as smooth as bit mapping does. They must work with
  already-shaped letters, numbers, and other visual forms.

6. Will the window program work with ordinary software or just products
  written for it? And how many of the windows’ special features will do
  work when you use regular programs?

7. Will the windows at least slightly slow down some programs? A word
  processor may take longer for you to get from one part of your report
  to another.

8. Is the program picky about the computers it’ll work with? A window
  system _may_ need over half a million bytes of RAM and a hard-disk
  drive storing 5 megabytes. Also, as of this writing, windows seemed
  geared more to the IBM-style MS-DOS computers than to the older but
  cheaper CP/M ones. Besides, some companies may not sell windows
  programs directly to ordinary buyers. Microsoft got various micro
  manufacturers to bundle the program with their products.

9. Does the program require a mouse—the gadget you roll on your disk to
  move the cursor? How easily can you control the program without a
  mouse?

Footnote 105:

  I’m basing the “windows-shopping” questions on points raised by
  various micro publications, especially _Popular Computing_, May 1984,
  p. 96.




  BACKUP X ❑ Of Mice and Men—and Touch Pads, Touch Screens, Etc.[106]


“If you’re a trained, high-volume production typist,” asked Seymour
Rubinstein, the WordStar developer, “what are you going to do with a
mouse except feed it cheese?”[107]

Footnote 106:

  For background in researching this appendix—but not for the opinions,
  strictly mine—I’m grateful to Forrest M. Mims’s excellent article “A
  Few Quick Pointers.” It appeared in May 1984 _Computers and
  Electronics_.

Footnote 107:

  Rubinstein’s “cheese” quote is from _InfoWorld_, May 14, 1984, p. 57.

Score one for Rubinstein. He says mice are great—if you have three
hands.

Doing graphics? A mouse, maybe. But damned if I’m going to take my hands
off the keyboard to push the cursor from one spot on the screen to the
next.

It’s simply too much wasted motion. I instead just press the cursor keys
right above the main keyboard. Or I use WordStar’s cursor-moving
commands. And even if I hadn’t learned touch typing a quarter century
ago, I’d still wonder if a mouse for word processing wasn’t the Silicon
Valley version of _The Emperor’s New Clothes_. Next time you’re in
California, maybe you’ll see Apple execs naked in the streets as well as
their hot tubs. Well, maybe not. The mouse could be a great marketing
tool for sales reps peddling Macs or Apple IIc’s to people hoping to do
word processing. But experienced typists? Many would probably groan over
all the excursions that the mouse forced them to take from the main
keyboard.

Some enemies of mice—cats?—also wonder if jockeying the cursor this way
couldn’t be a little tiring for people writing or typing. Think of the
hand-eye coordination required. You’re rolling a palm-sized gizmo on
your desk to position the cursor on a single letter at times, and that
might not wear too well if you‘re working for hours on end.

Mind you, the rodents have their friends, especially at Apple, where,
inconsiderately, the hardware wizards didn’t even favor the Macintosh
with cursor keys.

Joe Shelton, the Apple products manager mentioned in Chapter 7, says he
does most of his writing with a mouse. He suggests the mouse-equipped
Macintosh for “naïve users.” Your term, Joe. Now I’ll slightly water
down my jeremiads. Macintosh-style computers offer nifty graphics and
nice offbeat typefaces. So some trendy writers may want one—rodent or
not.

And if you’re an executive or someone else not doing heavy word
processing? Then maybe, just maybe, a mouse is for you. Perhaps you’re
working with spreadsheets, a number of programs in fact, and you write
only a small fraction of the time.

Richard Webb—a partner at Peat, Marwick and Mitchell, the big accounting
firm that advised Apple during development of the Macintosh and ordered
thousands of them—swears by the mouse for spreadsheets. He says that
alone would justify the mouse.

I’m not a spreadsheet artist and will take a pro’s word. But at least
for heavy-duty writing and typing, the old cursor keys are my best bet.

Graphics is different. There, the cursor keys are more cumbersome.

One artist, however, wanted not a mouse but an electronic “pad and a
stylus”; he might be happy with a =digitizing tablet=—also known as a
=graphics tablet=—like the well-known KoalaPad. You can write on this
surface with a stylus or your finger and the computer will display the
lines on its screen.

A =touch-sensitive screen= is still another possibility—for some
people—both in word processing and graphics. You point your finger at a
spot on the screen. Bingo! You can start moving a paragraph or perform
graphics magic. But touch typists may face the same problem as with the
mouse—wasted motion—and some people may tire of reaching up to the
screen again and again. Also, touch-sensitive screens may not be precise
enough for you to pick out just one number or letter.

Hugh Hunt raised an interesting issue.

“What happens if a fly lands on the Hewlett-Packard screen?” he asked
someone about a computer with a touch screen.

Well, I hear, the HP 150’s screen uses infrared touch sensors that are
more than fly length from the glass. “Debugging” the 150,
Hewlett-Packard must have thought of _everything_.

Yet other pointing devices are:

● The =joystick=. Moving the stick around, you move the cursor. A neat
  idea. But it’s more fit for video games than word processing and many
  other business programs—you just can’t point exactly.

● The =trackball=. You move the cursor by rotating a ball inside an
  enclosure. Want the cursor to go faster? Then rotate the ball more
  energetically. The trackball is found most often in arcade-style
  systems. It’s great for chasing aliens and may have uses in
  spreadsheets and data-base management, but some people say it’s an
  abomination for word processing.

● The =light pen=, with which you could electronically “draw” on the
  screen. _Draw?_ Okay. _Write?_ Well, it’s “wasted motion” time again
  here, as with the other items on this list.

As computers climb the executive ladders—as more nontypists use
them—these alternatives may grow in importance. And what about people on
the factory floor? They may use such gizmos to make new inventory
entries or machine adjustments. Partly the world is learning to type,
and partly the computer is learning to understand devices other than the
keyboard.

What cursor-control gizmos are ahead? I’ll keep reading the _National
Enquirer_ articles about people moving objects with their minds. Maybe,
the hard-core hackers are thinking, the next gimmick will feature some
user-friendly ESP.




      BACKUP XI ❑ The Micro Connection: Some Critical Explanations


When John Fuller hooked up his Heath micro over the phone lines to the
Wang at his office, he had a head start on many other do-it-yourself
telecommuters.

He wasn’t a computer or electronics rookie. For years he had worked
around big IBM’s and Honeywells, and while telecommuting, he was a
computer and management consultant with the navy. He even soldered
together his H-89—a kit. And, anyway, he was communicating with another
smaller computer, a Wang word processor.

Does that mean you should give up on do-it-yourself telecommuting
because of the technical complexities?

No. Not at all. Before hiring a consultant, you might consider two
possible sources of free advice: (1) your corporate data-processing
department, if you have one, and (2) users groups, whose phone numbers
you can get through dealers.

Before approaching anyone, though, learn the basics of the technology. A
=modem= converts the _0_s from your computer into one pitch and the _1_s
into another, and that whine, you’ll recall, goes out over the phone
lines. The “mo” in “modem” stands for “modulator”; the “dem,” for
“demodulator.” And a “dem” springs into action at the other
end—demodulating the whine back into the _1_s and _0_s.

Modems come in two varieties, =direct connect= and =acoustically
coupled=.

The direct-connect modem hooks between the phone line and your phone, or
between your phone and the handset. Its whine transmits better over
static-ridden lines than do acoustic couplers, but it’s normally a
little more expensive, and hard to install if your phone lacks =modular
plugs=, the tiny plastic ones that unsnap.

Using an acoustic coupler, you cradle your handset in rubber “earmuffs.”
A small speaker whines into the phone transmitter; a little microphone
picks up the sound from the handset’s receiver. Acoustic couplers don’t
need phones with modular plugs, obviously—a boon to traveling
executives—but they might not work if the handset is oddly shaped, as it
is with some of the new-style phones. Also, loud noises in the room can
confuse them.

A direct-connect modem, for that reason and others, would probably be
better for your regular office. Also, consider a =full-duplex= modem in
most cases.

No, it isn’t a modem for two-family houses. “Full duplex” is just jargon
for computers jabbering back and forth, both ways, at once. Like two
people on the phone. A =half-duplex= modem would allow just one-way
communications without switching; it’s somewhat comparable to a radio
with an unwieldy send-receive control. There are times, however, when
half duplex would be best. Normal phone lines, =voice grade= ones in
telephone company language, can’t handle computers jabbering at too high
a speed, and half duplex may work better than full.

Like most modems for personal computers in the early 1980s, Fuller’s
gizmo transmitted information at 300 baud—equivalent to 300 bits a
second, 30 characters per second, or 360 words per minute at 5 letters a
word. When telecommuting, however, you may be better off with a modem
going 1,200 baud. After all, it can zip material over the phone lines at
four times the speed, and that means you’re tying up your modem less on
long documents. You might not be tying up _yourself_ if you run an
operating system like Concurrent CP/M, which lets your computer handle
electronic mail while you’re using it for other purposes; but a
1,200-baud modem is still a good investment if you can afford it. You
may well be able to. Soon 1,200-baud modems with auto-answer features
will commonly sell for well under $300.

Sent through a modem, the =data bits= are those conveying the
information itself. And the =start bits= and =stop bits= keep track of
the beginnings and ends of your micros’ characters. The most common
setting is a =word length= of 8 data bits and 1 stop bit.

=Parity bits= may help the computers check for errors caused by static
and other electronic noise. Parity is said to be “even,” “odd,” or
“none.” This =error-checking= method has its drawbacks. It may fail if
the mistakes cancel each other out—and it’s slow since it checks every
character. Some =communications programs= (the ones allowing computers
to talk) lack this feature. The most common parity setting is
“none”—when you tell your software not to do parity checks.

A few other wrinkles in such programs are:

FILE TRANSFER

That’s the ability to send whole files of text or data—including
programs, too.

CAPTURE ABILITY

With =capture ability= you can keep a record of each end of a keyboard
conversation with both people typing away. You tell your computer to
open up a =buffer= in its RAM—the temporary memory. The buffer captures
the conversation. And if it fills up, some software will automatically
“write” to your floppy disk, then reopen the buffer. Some programs won’t
write to the disk at the ends of your conversations unless you command
them to, meaning that the absentminded will see their bits and bytes
vanish.

PROTOCOL FLEXIBILITY

Beyond changing bit numbers, etc., you may want software that can handle
different kinds of protocols—sets of rules telling how computers
transmit different sets of information.

One possible protocol for you to use—at least in conversations with
other micros—would be the =XMODEM Protocol= or =Ward Christensen
Protocol=. The receiving computer tallies up the number of bits and
bytes transmitted from =blocks=—tiny parts of material—and compares this
=check sum= to the number that the originating machine says it sent. And
if there’s a mismatch? The receiving computer asks for the block again.

You might also use no protocol at all. It’s as if you’re sending
material simply by tapping away on the keyboard without any elaborate
rules for the other person’s machine. You two should still, however,
agree on basics like baud rate, data bits, stop bits, and parity.

Protocols use =handshaking= as part of their bags of tricks.
Handshaking, computers swap bits and bytes to verify that they’re on
speaking terms. A common form is =XON/XOFF=.

Some mainframes use XON/XOFF to talk to micros and vice versa. The
receiving computer gives an XOFF signal, telling the transmitting one to
pause while the receiving machine “writes” to its disk. XON means,
“Okay, my buffer’s almost empty. Send more!” Without this =flow
control=, you might overwhelm the buffer and lose information.

AUTOMATIC DIALING AND OTHER TRIMMINGS

Some modems will let the communications software dial for you or at
least let you feed the number in from your keyboard. Some also have
=automatic log-on=. That lets you check onto a network or bulletin-board
system without typing out your ID or password. Many =intelligent
modems=, by the way, even without special software, can remember and
dial phone numbers automatically and spit out log-on sequences and
passwords.

VERSATILITY

Want to speak to a number of computers? Then buy software allowing you
to set:

◼ Baud rate (speed of transmission).

◼ Data bits.

◼ Stop bits.

◼ Parity.

◼ Terminal emulation. It means making the micro imitate popular brands
  of terminals.

◼ Half or full duplex. Full is most common in micro communications.

◼ The type of handshaking protocol.

Ideally, the software will also:

◼ Accommodate a variety of modem types.

◼ Designate the host—which computer will manage the =echo back= (which
  makes the typed conversation appear on both screens).

◼ Let you choose different protocols.

All those features, of course, might still not let you communicate
easily with your corporate computer. It may not use the =ASCII= code,
for instance, which most micros do.

“Since you ASCII’d, anyway,” as _PC Magazine_ once punned, “those five
letters are an acronym for the American Standard Code for Information
Interchange.” With ASCII, an “A” is one combination of _1_s and _0_s,
“B” is another, “,” is another, and so on.

When communicating with a mainframe capable of ASCII, it may not matter
what brand of micro you’re running. So don’t reflexively think Big Blue
for telecommuting.

The proud IBM mainframes, however, like aloof mandarins of old China,
jabber away in a dialect of their own, =EBCDIC=—it’s similar to ASCII
but different enough to cause serious problems. Now that doesn’t mean
your home computer won’t work with an IBM mainframe. But it may require
special programming that will translate from one set of codes to
another.

Of course your corporate mainframe may also need a string of =control
characters= to open or close an electronic file, and here your
word-processing software may matter more than your communications
program.

The control characters normally are just letters tapped out in
combination with the control key to give commands to your computer. They
generally don’t print out on paper; they may or may not show on the
screen. In this case, controls characters pass the commands on to
another machine over the wires. And so you may have to =embed= the
control characters in your electronic files. If your word processor
won’t let you embed control characters, you may not be able to
communicate with some kinds of mainframes. WordStar lets you do this.

An issue more basic than control characters is whether you’re using
=synchronous= or =asynchronous communications=. The former is a staple
among the big mainframes; the latter, among micros.

In synchronous communications, the two computers or modems employ timing
signals to separate characters sent in one stream.

Synchronous has a big advantage. You can send at 4,800 baud over regular
phone lines; you can’t with the asynchronous method, or at least not
with late 1984 technology.

But “synch” is more expensive—the needed modems typically cost well over
$1,000. Asynchronous, moreover, doesn’t require timing signals. It’s the
simplest form of communications between computers; and more and more
data-processing departments have added asynchronous ports for micros to
dial up.

John Fuller himself was communicating not with a giant computer but a
dedicated word processor in his office, which, like most, talked ASCII
asynchronously. He solved other problems on his own. You may need a
consultant to do what Fuller did. But take heart. It could well be worth
it, what with the time and money your telecommuting may spare you and
your employer.

“I’m saving gas, dressing in comfortable grubbies when I write,” Fuller
said in an article about his experiences, “and with the direct
connection I can _prove_ that I’m working. I turn out my reports faster.
My computer is really paying off. Now,” said the self-deprecating
Fuller, “if you’ll excuse me, I have to repel invaders from space.”




BACKUP XII ❑ MODEM7: An Almost-Free and Fairly Easy Way to Talk to Other
                               Computers


MODEM7 may be free, but it _works_. With it you can talk to computers
thousands of miles away _if_ they’re running MODEM7 or compatible
software. Normally, your only real expense is for the modem and maybe
cables; you might spend as little as $100.

Using MODEM7, you can send letters, reports, or programs already on your
computer disk. Or you can receive them.

You can also:

1. Communicate teletype-fashion with the other person. You can keep
  electronic records of what you both type and later print them out
  using WordStar or another word processor.

2. Call up electronic bulletin-board systems (BBSs) or plug into The
  Source and many other information utilities. In this case, too, you
  can store material on your disk and later print it out.

3. Get copies of other programs that altruistic computer buffs have
  placed in the public domain; you do this after you log on the BBS.

MODEM7 is a good example of free software that fills a niche; experts
say it’s better than some $150 products. Most free programs are losers
for the typical business. They’re either (1) games, useless except for
training, (2) unreliable lemons with bugs in them, the software kind,
(3) programs that might work but don’t do anything useful, or (4)
fiendishly difficult challenges because the instructions are confusing
and no one handy knows how to use them. But wonderful exceptions exist.
Never thumb your nose at something just because it’s free. In MODEM7’s
case you’ll find more happy, knowledgeable users than you will in the
cases of many commercial programs.

MODEM7-style protocols have become an industry standard. Even big
businesses and government agencies, including the IRS, have used MODEM7
for some purposes. It’s influenced the designs of commercial micro
programs, which employ similar techniques to facilitate linkups between
different brands of communications software. MODEM7 will also get along
beautifully with the popular PC-TALK III “freeware” program for IBM
micros and some clones. Freeware is low-cost software distributed in
many cases by the users themselves; the author may request a “donation”.

Granted, MODEM7 isn’t the ultimate. The instructions included on the
disk are confusing to the novice—a problem I’ll try to overcome here—and
ready-to-run versions aren’t available for every computer system.

Some commercial communications software, moreover, is easier to run and
can help you talk to more machines. And it may also make better use of
the “smart” modems and their software so that your computer can dial up
others automatically at 11:00 p.m., when the phone rates go down. You
can’t do this with your cheapie modem and the plain vanilla MODEM7
described here.

But for the average computer user, MODEM7 is a good communications
program to start out with. After reading the instructions that follow,
you needn’t be a micro whiz to use it.

Also, you _may_ find that MODEM7 is as convenient as some commercial
software for simple tasks, such as quickly checking your electronic
mailboxes on The Source or CompuServe.

Don’t forget: you shouldn’t pay a cent for the basic MODEM7 program
itself except for the cost of a copied disk or another token fee. It’s
public-domain software. So you can legally make copies for all your
friends and business contacts who have modems and the same machine that
you do.

But how to track down your own copy? Through CP/M user groups, you can
locate versions of MODEM7 set up for different computers and disk
drives, or you might find an organization of IBM owners, Kaypro
fanatics, or others. The better computer stores can steer you to the
right people. Incidentally, if you distrust your store, you might not
want to say exactly why you’re trying to catch up with a user group.
Bear in mind that the computer store isn’t going to make a profit off a
free program. Some organizations, however, are selling MODEM7 at next to
nothing through the mail. For instance, the Public Domain Software
Copying Company says it has versions for the IBM PC and clones, all the
Kaypro machines, the Morrow micros and Osborne, among others. The cost
as of late 1984 was $10. The address is 33 Gold St. cl3, New York, N.Y.
10038; the telephone number, (212) 732-2565. The company also offers
separate programs that will adjust stop bits and other settings,
eliminating the need for programming. These programs aren’t universal.
Like MODEM7 itself, they might not work for your particular machine. The
Public Domain Software Copying Company also says it offers a low-cost
program for the Apple II that lets it communicate with computers using
MODEM7.

In addition, you might also investigate PC-TALK III, commonly available
through IBM user groups. If they’re ethical, they’ll encourage you to
send a small “donation” to PC-Talk’s originator, Andrew Fluegelman, who
wanted to save distribution expenses through this “freeware” approach.
You needn’t feel obligated to pay until you’ve tried the program.
Probably, however, you’ll find PC-TALK to be worth the $35 or $45 it may
cost; this software is more sophisticated than MODEM7, which I’m
focusing on because of its simplicity.

Another excellent MODEM7 alternative—_for experienced computer-users_—is
MEX. CP/M versions are available free through users groups and work on
many machines, including Kaypros; and NightOwl Software (telephone
800/648-3695 or NITEOWL) expects to sell it for $59.95 in an IBM
version. Most of MEX’s send-and-receive commands overlap with MODEM7’s.

MODEM7 as of 12/18/80
Originally Written by Ward Christensen
Revisions by Mark M. Zeiger, Jim Mills

WRT  —Write file to disk (from terminal mode)
DEL  —Erase present file (from terminal mode)
RET  —Return to terminal mode with no loss of data
XPR  —Toggle expert mode (Menu on/off)
DIR  —List directory (may specify drive)
CPM  —Exit to CP/M
S    —Send CP/M file
R    —Receive CP/M file
T    —Terminal mode (optional file name)
E    —Terminal mode with echo

DEFAULT DRIVE:

Command:

IBM PC owners, fear not! This Kaypro version of MODEM7 shows the same
menu that the IBM version, dated Oct. 15, 1982, does. The only real
difference is the IBM adaptation’s use of the =DOS= command instead of
the =CPM= one to return to the computer’s operating system.

Here now is a plain-English guide to MODEM7’s version of December 18,
1980, as adapted in 1982 for the Kaypro, IBM, and many other machines.

TO GET READY

MODEM7 has two basic modes for Teletype-like communications, “Terminal”
and “Echo.” For both parties to see both ends of the conversation, one
must be in “terminal” and the other in “echo” if they are communicating
directly. Just the “terminal” person will be able to record on his or
her disk. The one in echo mode can’t save the material electronically.

Beginning, you should read your computer’s instructions for information
on how many stop bits and data bits your machine normally runs with. And
does it use odd, even, or no parity? You might also get this information
from your dealer or users group.

Don’t worry right now about knowing about the full meanings of the
terms. Just find out what the settings are.

MODEM7 doesn’t provide for changing the settings. If the person at the
other end can’t adjust them, either, and if those for his machine are
different from yours, you’re out of luck if you don’t know how to fix
the program code. You two may have to reach each other through an
electronic mail service that mediates between machines. Often, however,
micros are set for 1 stop bit, 8 data bits, and no parity, an informal
standard. And just about all decent commercial programs for
communications let you alter these settings. So does PC-TALK III.

In addition, even though MODEM7 itself won’t change its bit settings,
your user group may have some free or low-cost programs that you can
load up to do the trick—and then use MODEM7.

There’s one other little worry. Are you and the other person sending at
the same speed over the phone lines? The normal speed for cheap micro
modems is 300 baud or about 30 characters per second; for the deluxe
ones, 1,200 baud. Don’t worry right now about what a baud is. Just make
sure you and the other person are both at the same speed. MODEM7 often
is set at 300. Some versions may allow for changing the software to
accommodate different baud rates, but the command may not work on your
particular brand of machine. By the way, remember that you must consider
the baud rate not only of the software but of the hardware. Simply
adjusting your software to send at 1,200 baud won’t do the trick if your
modem can reach only 300 baud. Remember, too, that MODEM7’s speed
command won’t necessarily govern your modem’s transmission speed, just
your software’s.

You also want to find out how to operate your modem. Some use a physical
switch to change from voice to data. Others—smart modems—use commands
that you type out while your modem program is in the terminal mode. You
can tell a smart modem to dial a number or answer the phone
automatically.

TO TRANSMIT AND RECEIVE WITHOUT SAVING ANYTHING ON YOUR DISK

Just think of your computer and the other person’s as two Teletype
machines connected. When hitting a key on either Teletype, you or the
other person can make the two both print, right? Well, it’s the same
with the computers. Here, however, the “print” is characters on your two
screens.

Ready?

1. Start out with the other person’s modem set on ORIGINATE and yours on
  ANSWER (or vice versa) if the modems lack automatic switching.

2. Type =MODEM7= after the A> prompt of CP/M (or PC-DOS).

3. Hit your carriage-return key.

  The menu listing your choices will flash onto your screen.

4. Hit the letter =T=.

5. Tap the return.

6. Assuming you’re using a manual modem, flick the switch to “data.”
  With a smart modem, you use the right keystrokes to awaken the gizmo
  or get it to answer the other computer.

Most smart modems nowadays employ commands similar to those of the Hayes
models. With Hayes-style modems, if two people are switching from voice
to data, one will type =ATD= and a carriage return (to start getting the
modems talking), and the other will type =ATA= (to answer
electronically).

If you’re talking to another micro or a little terminal hooked up to the
phone at the other end, you may need to type =E= (and the return)
instead of =T= (and the return).

That’s the echo mode, which you’ll recall differs from the “terminal”
one. =E= lets you see your own typing. Again, normally, one micro user
will be in echo, and one will use the straight terminal mode. When
communicating with a bulletin board, even on a micro, use the =T=
command rather than =E=.

How to switch from the regular terminal mode to the echo mode or the
reverse?

You use MODEM7’s electronic gear shift. That’s =Control-E=; don’t
confuse it with the =E= used in the echo mode. You tap out this command
in other situations, too, whenever you want to return to MODEM7’s main
menu. A =Control-E=, of course, consists of holding one finger on the
=CNTRL= or control button and then hitting the letter =E=.

Here’s a warning: you may need to hit the line feed and/or the carriage
return at the end of each line for your words to come out in the right
places on the other person’s screen.

The terminal mode is worth using even when you and the other person only
plan to exchange electronic files. If the terminal mode doesn’t work,
then the others probably won’t, so use the terminal mode first to pave
the way for file exchanges. By the way, the terminal mode is just the
ticket to communicate with information utilities like The Source or with
bulletin boards.

TO RETURN TO THE OPERATING SYSTEM OF YOUR COMPUTER

To return to CP/M—to crank up WordStar or Perfect Writer, for
instance—you:

  1. Type =Control-E=.
  2. Tap out =CPM= from the main menu.
  3. Hit your return.

Bingo! You’re back with the A>! And from there you go on to WordStar,
etc.

If you’re using the IBM version of MODEM7, you use the command =DOS=
instead of =CPM= (unless your menu says otherwise).

TO TRANSMIT MATERIAL ON YOUR DISK WITHOUT ERROR CHECKING—WITHOUT A
MODEM7-STYLE PROGRAM AT THE OTHER END

MODEM7 uses the Ward Christensen Protocol—sometimes called the XMODEM
Protocol—to help make sure the material is going from computer to
computer okay.

If you don’t use error checking in transmitting files, the static on the
phone lines may garble some words. Your computer, after all, is just
squirting your file over the phone without bothering to find out if the
other machine is receiving it right. You want error checking if you’re
transmitting or receiving software; just one electronic goof, just a
single messed-up “one” or “zero,” can throw the whole program out of
whack.

But sometimes, when you aren’t dealing with programs, you’ll want to
skip error checking. That way, the transmission will go faster. And
it’ll be easier for computers with different communications programs to
talk to one another.

There’s still no guarantee you’ll communicate, but with an industry
standard like MODEM7 you have a good shot at it.

Here, then, is what you do to send a file to someone without a
MODEM7-style program:

1. From MODEM7’s main menu, you select =T= and again hit the return a
  few times.

2. Find out if the other person can read words you type. (Don’t worry if
  you yourself can’t read your own words.)

3. Tell him (or her) to set up his computer so that, on paper or on a
  disk, it’ll record what it receives.

4. Once the other person is ready—while you’re still in the =T= mode—hit
  =T= again, but this second time your finger is on the Control key
  while you’re doing so.

  The screen will ask you the name of the file you want sent. Normally,
  that file will be on your data disk, the one on drive B. B in that
  case contains the articles, reports, etc., for which you may lack room
  on the A disk containing your programs. (But if the document to be
  sent is on A, substitute that letter for =B= in the rest of the
  steps.)

5. Now you type =B:[name of file]=. Here and elsewhere don’t type the
  brackets surrounding the file name—and please put the file name
  directly after =B:= without a space in between.

6. Next hit your return. The disk should start spinning, and both you
  and the person at the other end should see your file flashing across
  the screens. Following transmission, your computer will say FILE
  TRANSFER COMPLETED. The other person should now have an electronic
  copy on his own disk.

TO RECEIVE COPY WITHOUT A MODEM7-STYLE ERROR CHECKING

1. Get the two modems talking, then return to the main menu.

2. Again, select your trusty =T= from the main menu. But don’t hit your
  return immediately.

3. Type a space.

4. Type =B:[the name of the file you’re creating on the data disk to
  receive the other person’s file]=. The name on B can be anything you
  want except a file that’s already on the disk.

  In other words, if you want to save the other person’s file under the
  name MAGIC, you type: =T B:MAGIC=.

5. Hit your return once or twice.

6. Then hit the letter =Y= with your finger on the control key
  (=Control-Y=).

  You’ll see some colons on the screen when material starts flashing
  across it. They won’t show up, though, in the file you’re creating.
  They’re merely an indication that the computer is saving
  material—whether it’s a file, an item from a computer network, or
  someone just typing away.

7. Type =Control-E= to return to MODEM7’s main menu.

8. Then, to preserve the file, “writing” to your disk, you must type out
  =WRT=, then hit your return.

  And that’s it. You’re done!

By the way, if, while receiving material, you decide there’s a part you
don’t need saved, you can leave that out of the file you’re creating.
Just hit =Control-Y= again. Hit it still another time if you want to
return to the “save” mode. On some successors to MODEM7 such as MDM711,
a =Control-R= rather than a second =Control-Y= will tell the computer to
shut off the save feature.

This save feature, alas, won’t work on a computer using the older
MODEM7’s echo mode (though it will with newer versions of the program).
But you can get around the shortcoming. Ask the other person in advance
to make a two-way record of your conversation and send it to you! How to
receive it? Well, after you’ve transmitted in the =E= or echo mode, you
can shift to =T= with a file name added to save material.

Please also remember that MODEM7’s capture buffer—the feature letting it
save incoming material to your disk—is small. Often the buffer can’t
work safely with files bigger than 16K. That’s about eight double-spaced
pages. If you’re using a Ward Christensen Protocol, however, files can
normally be as long as disk space allows.

Printing the saved material, you may experience some problems because
different word processors aren’t absolutely compatible with each other.
You may see odd format commands, for instance, like “@”s (noticeable to
WordStar buffs reading the files of their not-so-Perfect Writer friends)
or “.HE” (a WordStar command that may baffle the Perfect crowd). But
once you get the hang of it, you can usually “clean up” such “garbage.”

TO TRANSMIT COPY TO SOMEONE WITH A MODEM7-STYLE PROGRAM

1. Get the modems to start jabbering to each other.

2. From MODEM7’s main menu, type =S B:[name of the data disk file you
  want to transmit—either a program or a letter= =or other document]=.
  The =B:= shows the file is on the =B= disk. If it isn’t, just type =S=
  and the name of the file—for instance, =S MAGIC=. If =MAGIC= is on
  =B=, type =S B:MAGIC=.

3. Hit the return.

Soon your computer should start constantly asking the other machine if
it’s getting your file okay.

If it isn’t?

Then your computer will conscientiously try again. But its patience is
limited. It’ll give up eventually if the two machines and their software
aren’t on speaking terms.

And if everything does work? Your computer will beep when it’s through
or at least flash a message letting you know that it’s done.

_Note_: If the other person is using some versions of MODEM7, you may
have to ask him to switch on the “check sum” form of error checking.
This guide is for the simple old MODEM7, not newer versions. Most of the
commands, however, will also work with the updated varieties, and of
course all versions of MODEM7 can communicate with each other, subject
to minor adjustments. _Some_ versions use the =TCC= command to turn on
the check-sum mode.

TO RECEIVE FROM SOMEONE WITH A MODEM7-STYLE PROGRAM

1. Fire up your modem.
2. Type =R B:[new file name]=.
3. Hit your return.

Your computer will tell you when it’s through receiving. Remember, the
material will show up on your data disk. If you want the material on the
other disk, just type =R A:[file name]= instead.

TO FIND OUT IN A HURRY IF YOUR COMPUTER SAVED A FILE SENT BY MODEM
(ASSUMING YOU’RE USING AN OPERATING SYSTEM LIKE CP/M OR PC-DOS)

1. Go to the =A=> prompt.

2. Type the word TYPE, then a space, then the name of the file—preceded
  by a =B:=, of course, if it’s on the data disk.

  Immediately after the A> you should have the equivalent of =TYPE
  B:MAGIC=.

3. Then hit your return.

This is a CP/M and PC-DOS procedure.

TO ERASE A FILE (FROM CP/M)

Do the above, except substitute =ERA= for =TYPE=. Say you want to erase
=MAGIC=. Just type =ERA B:MAGIC=.

TO ERASE A FILE (IF YOU’RE USING PC-DOS)

Use =DEL= instead of =ERA=. Type =DEL B:MAGIC=.

TO ERASE A FILE FROM WITHIN THE MODEM7 PROGRAM

Type =DEL B:MAGIC= or whatever the file name is.

TO FIND OUT WHAT’S ON YOUR DISKS WHILE YOU’RE USING MODEM7

1. Type =DIR= from the main MODEM7 menu.
2. Type a space.
3. Type =B:=.
4. Hit your return.

This will show the contents of the =B= drive, normally used for storing
data.

To see =A= drive’s contents, you merely type =DIR= and hit the return.

TO USE THE DIRECTORY FEATURE WHILE YOU’RE IN THE MIDDLE OF A FILE YOU
USE TO SAVE

What if you want to save the other person’s message using the =T
B:MAGIC= method—but in the middle of the conversation you also want to
check the contents of your disk via the =DIR= command?

How do you prevent the =MAGIC= from disappearing except for the name on
your file list?

After all, an electronic file is like gas inside a bottle. You must
“cap” it with a =WRT= command, or the gas will leak out the top. And you
can’t reenter your file by typing another =T B:MAGIC=.

But you _can_ get back to =T B:MAGIC= by typing =RET= after the =DIR=
command.

TO GET THE MENU OFF THE SCREEN ONCE YOU KNOW THE ROPES

From the main menu, type =XPR=. Hit the return.

TO CHANGE THE BAUD RATE

If you’re using MODEM7 with a 300-baud modem, you don’t worry; the
software normally comes set for that speed.

With a 1,200-baud modem, you may be able to accommodate the higher speed
this way:

1. Enter the =T= mode of MODEM7 from the main menu.

2. Hit the return several times.

3. Tap =Control-B=.

  You’ll then see a request for a new baud rate.

4. Type the right number (300 for 300 baud, 1200 for 1,200; do not use
  commas—MODEM7 doesn’t like them here).

5. Hit your return.

Please note that at least on my Kaypro II the =Control-B= command
doesn’t work. This may have been due simply to my machine’s quirks.

Again, don’t forget that MODEM7’s successors operate somewhat
differently and may use a command such as =SET= or =TIM= to set up the
baud selection.

And remember, too, that the old MODEM7’s baud command won’t control the
speed of your modem (although some modems will automatically pick up the
baud rate of the one at the other end).

Thanks to Jon Albers, Eric Meyer, Rick Nelson, and Pat Ehresmann for
checking the accuracy and clarity of the above instructions. Blame me,
however, if anything’s wrong.

My instructions are a simplification of:

          =CP/M MODEM PROGRAM DOCUMENTATION by Mark M. Zeiger
                      and James K. Mills 11/04/80=

The MODEM7-styles programs have their origins in the work of Ward
Christensen, an IBM employee and public-spirited computer hobbyist.

                            ■      ■      ■

    A MODEM7 Cheat Sheet

    Snip this out! It’s a handy summary of commands for the free MODEM7
    program.

    ◾ _TO MAKE MODEM7 APPEAR ON YOUR COMPUTER SCREEN_: Type MODEM7 from
      the A> prompt and hit your carriage return. You’ll end up in the
      program’s main menu. Or if you’re using a new program, you might
      instead see a screen telling how to reach the menu.

    ◾ _TO USE THE TELETYPE-LIKE TERMINAL MODE_: Tap the letter =T= and a
      carriage return after the main menu appears. You can use this mode
      with The Source, MCI Mail, and other on-line services.

    ◾ _TO USE THE ECHO MODE_: Type =E= and the return. For Teletype-like
      use when the other machine is in “Terminal.”

    ◾ _TO GO FROM ONE MODE TO ANOTHER_: Use =Control-E=. This gearshift
      mode returns you to the main menu.

    ◾ _TO SEND MATERIAL ON YOUR DISK WITHOUT THE WARD CHRISTENSEN
      ERROR-CHECKING PROTOCOL_: Type =Control-T= after you’re in the
      terminal mode. Give the name of the file to transmit. Here, as in
      other cases, precede the name by =B:= (no space after the :) if
      the file is on Drive B. Hit your carriage return.

    ◾ _TO RECEIVE MATERIAL WITHOUT A PROTOCOL_: After typing the usual
      =T= in the terminal mode, you skip a space. Then specify the name
      of the file where you’ll collect the received data. Now hit your
      return several times. Use =Control-Y= to tell your computer to
      start saving material; also use it to turn off the save feature.
      (On newer versions of MODEM7, =Control-R= might be the off
      switch.) _IMPORTANT_: After you’ve finished talking to the other
      machine, you must return to the main menu and type =WRT= and
      return. Otherwise your computer won’t save the material on the
      disk.

    ◾ _TO SEND TO SOMEONE WITH A MODEM7-STYLE PROTOCOL_: Type =S=, skip
      a space, then type the name of the file that you’ll send—with the
      =B:= before it if necessary. Hit the carriage return.

    ◾ _TO RECEIVE FROM SOMEONE WITH A MODEM7-STYLE PROTOCOL_: Type =R=.
      Skip a space. Then type the name of the file where the material
      will show up, using =B:= if needed. Hit the return.

    ◾ _TO RETURN TO THE A> PROMPT_: From MODEM7’s main menu, type =CPM=
      if you’re using a CP/M version like the Kaypro one. (The IBM
      version substitutes =DOS= for =CPM=.) Hit your return.

                            ■      ■      ■




            BACKUP XIII ❑ Why Not an Electronic Peace Corps?


In a Chicago suburb a $50,000-a-year engineer spends countless hours
twiddling with his new IBM PC. The technology engrosses him, but he
lacks a sense of purpose. In Southeast Asia, meanwhile, a young man
wrestles with calculations needed to build an irrigation dam. He thinks
his figures are correct but isn’t certain, and thousands of people will
die if the dam collapses.

Can the Chicago engineer somehow help his counterpart abroad?

There is a way if politicians for once will appeal to the better
instincts of technicians. An Electronic Peace Corps (EPC) could bring
these two together and offer the Third World some of the best
international technical expertise via computer networks.

Useful computers sell for around a thousand dollars, and much better,
cheaper, smaller computers are on the way. What’s more, thanks to
satellites, international communications prices are falling; and
1,000-word messages anywhere in the world, via special packet-switching
networks, could cost just $1 each.

So the EPC needn’t threaten the taxpayers with a major burden. By
essentially exporting knowledge instead of people, it in fact would
increase the impact of economic-aid dollars. The EPC could emphasize
basics like public health, agriculture, transportation, construction,
manufacturing, and communications.

In carrying out the idea, a government or international agency might
keep computer files listing:

● The skills and information required in specific underdeveloped
  countries.

● People abroad who needed help.

● Those who might be able to offer it.

Most of the corpsmen wouldn’t even be computer experts—just people with
the right technical knowhow. Some might be ex-Peace Corpsmen. Others
might receive special cultural indoctrination similar to traditional
Peace Corps training.

Once in the EPC, the corpsmen might regularly correspond via E-Mail at
nights and on weekends or on occasion “talk” instantly to Third World
counterparts. Of course, not every Third World beneficiary might use a
micro. Some might submit written questions that local Peace Corps
offices could pass on electronically (one way to mitigate the language
problem).

E-Mail, incidentally, needn’t be the only form of computer
communications available through the EPC. The organization could offer
electronic bulletin boards with the names of people either needing or
offering information on subjects like biological pest control or solar
power. That way, the EPC’s beneficiaries would feel as if they had more
of a choice.

In addition, there might be ongoing computer conferences on topics of
common concern.

Obviously, the EPC wouldn’t replace foreign-aid experts in the field,
and it wouldn’t aid people _directly_ at the village level. It wouldn’t
hand out lap-sized portables to barefoot farmers. Rather, the EPC would
help engineers, doctors, scientists, and other people engaged in
development in their own countries. Corpsmen in the field would work
with local governments to make certain, for instance, that a New Delhi
slumlord didn’t use the EPC to automate his dunning operation.

Typical EPC beneficiaries might be Indians trying to set up a more
efficient grain-storage network, millions of Third World people are
starving because the food goes to the wrong places. Sometimes,
incidentally, the “wrong places” include the warehouses of thieves, and
computerized records could reduce the opportunities for corruption. Many
problems are political or economic, of course. The EPC would limit
itself to technical issues and try to be as apolitical as possible, just
as the international Red Cross focuses on relief rather than ideology.

Another EPC beneficiary might be a communications specialist hoping to
install a satellite link; for obvious reasons, better communications
might be one of the EPC’s first priorities. The EPC might help domestic
and foreign groups working toward this goal. Even countries with poor
phone lines, of course, can receive some computer messages in the large
cities.

Yet other beneficiaries could include:

● Colombian doctors who wanted to fight an epidemic with the latest
  information sped over the computer lines.

● A civil engineer in Peru working on a road or bridge for isolated
  villagers who hoped to sell food to cities.

● A rural-assistance administrator in Kenya. Micros could help his
  staffers keep abreast of the newest, best way to dig a well or treat a
  dysentery-stricken baby.

The EPC wouldn’t just promote the flow of information from countries
like the United States to the so-called lesser-developed countries.
_Among_ them, too, it would speed up the spread of practical solutions
to common problems.

Learning of an efficacious home remedy, for example, a rural-assistance
group in Ecuador might pass the information on for possible global
dissemination. It just might save the life of a child in Peru. By
keeping track of the better home remedies in the Third World, in fact,
an American drug researcher might discover something that checked out
scientifically—as has happened in the past.

Some Third World countries or groups of them might want to start their
own EPCs. Rather than preempting these efforts, an American or
international EPC could aid them, thereby multiplying the benefits of
the original organization and forestalling fears of electronic
imperialism.

The EPC could have a domestic version, too. Because of lower
communications cost, the Home Corps (a friend’s phrase) might take more
chances helping nonexperts without credentials. A gifted high school
writer on Chicago’s South Side might tap out short stories on a school
computer, for example, and a famous author across town might zip the
files back, with comments easily inserted electronically. The two might
meet a few times in person, then carry on via computer without the
hassles and menace of urban travel. Likewise, an Evanston business
executive might volunteer help to a businesswoman in a small town many
miles away.

The most urgent need for EPC-style assistance, however, is in the Third
World, where, because of technical backwardness, so many are starving.
The idea isn’t so farfetched. In fact the Third World is already
enjoying some similar help in a small way.

The CARINET computer network links the United States, the Caribbean,
Southeast Asia, and Africa. Long before harvest time a Jamaican farmer
can learn how promising a market there’ll be for his crop in the United
States—or an African potter can find out how to make a ceramic insulator
for his local phone company. Jerome Glenn, an official with Partnership
for Productivity International, the Washington-based group behind
CARINET, says the answers often come in just a day.

“Mail takes too long and Telex is too expensive,” notes another Peace
Corps alumnus, now heading a nutrition group that works to export U.S.
technical savvy through more conventional means.

Many foreign aid and computer experts have similar feelings. The
technicians, sure enough, are far ahead of the politicians. One of the
most distinguished technicians of them all—Arthur C. Clarke, the father
of the communications satellites—describes the EPC proposal as “an
excellent idea.”

Reaction from Third World countries has been favorable. Naren Chitty, a
Sri Lankan diplomat, says the concept is “a positive approach to
technology transfer” in “these days when ‘electronic imperialism’ is a
catchword.” And a Saudi Arabian communications specialist likewise
advocates computer and networks for the Third World. He says: “I had a
terrible argument with this Indian man who said, ‘My people are starving
to death, and you talk about microcomputers.’ And I said, ‘It’s because
of food distribution—the food isn’t getting there. The reason they’re
starving is that they don’t have the benefits that computers could
bring.’”

                            ■      ■      ■

POSTSCRIPT:

Just as I was finishing this book I heard from my friend the Saudi
Arabian communications specialist, Omar Alfarouq. Omar says EPC-style
efforts are already realities in some places—not just dreams.

Via MCI Mail from California, he told me of “the creation of an
Information network throughout Third World, accessible within our own
cultural reference.

“It has bloomed under sponsorship Gulf Cooperation Council; data banks
for farmers, medical workers in Arabic accessible by personal computer
from Oman to Kuwait; anyone can access though it is most often done
through local Ministry of Information office; will be tied in with
university information systems. It’s moving _alhamdullilah_ [thanks to
God].” Omar says the idea for this net goes back to 1981.

He continues:

“Your Electronic Peace Corps is alive and well and working wonders in
Africa at present time, am surprised you are not there doing it. I just
returned, am here to regroup, energy burn-out terrible. For example
Sahel 84 is a French group 30, lorries w/ food/medicine, one light plane
with ground station tied into INMARSAT; satellite shows ground picture
where people have sunk down hopeless in endless reaches of Niger, Mali
etc., guides convoy to place of need; communication link back to Paris
advises of further food/medicine need, diagnostic advice, these helped
while other abandonees are being located. That’s Sahel 84.

“Mobility 84 is British with land-rover as ground station with a
computer, word-processing, works in west central Africa, put together by
Alan Benjamin of CAP software in England, Contact him he is doing what
you are brooding about.

“Medecines sans Frontreres also has sat-data link to Paris from its camp
south Soudan just over border from Ethiopia for Tigre refugees; Tigre
people in terrible shape. Data banks can _insha’allah_ [if God wills]
save Soudan from becoming like Ethiopia—it’s getting that way fast.
Contact Gordon MacRae, deputy editor of Economist in London for further
up-dates, also Jim Grant of UNICEF.

“Congratulations on yr book. But the real point of data exchange is its
tremendous humanitarian impact which is so desperately needed in places
that will never ever see anything like a telephone. Timely forecasting
can prevent Third World suffering. Or even in America. That’s your next
book. See you in Addis.... _wa salaam_ [good-bye], Omar.”

Americans invented the transistor, the microchip, personal computers;
now if only we’ll catch up with the British, French, and Saudis in
bringing the technology to the people who most need it!




Thanks!

My Victor 9000 and Panasonic printer ideally could spew out a list of
people to thank—starting with those who most deserved it.

As a mere human, however, I don’t feel up to ranking anyone other than
to mention the big nine:

● Michael Canyes, a professional computer consultant who gave dozens of
  hours of his time in the best user-to-user tradition.

● Mack Truslow, an old friend on whom I cruelly inflicted page after
  page of rough drafts.

● David Fay Smith, a writer/computer expert who was the technical editor
  and who himself is the author of _A Computer Dictionary for Kids and
  Other Beginners_ (Ballantine, $9.95).

● Don Carrol, the cover artist.

● Robert B. Wyatt, editor-in-chief of Ballantine Books, who had the
  imagination and courage to make this a mass-market paperback.

● Richard McCoy, his assistant.

● Frank Lavena, the copyeditor.

● Pat Ehresmann of the Random House production staff, who is an
  innovator in the spirit of this book.

● Ruth Aley, a legendary literary agent whom writers have been thanking
  for decades—perhaps beginning with Irving Stone.

● Berenice Hoffman, her partner on this project. Shopping for a computer
  while I was writing _The Silicon Jungle_, she was a perfect test
  reader.

In addition I’ll thank the Fairfax County Public Library System,
especially the Fairfax City branch’s business room. Thanks also to the
Martha Washington, George Mason, and Sherwood branches. (Computerized
databases will never do away with first-rate librarians.)

With the understanding that my list isn’t necessarily complete, here are
other people to whom I’m grateful:

John Allen; Joseph Auer; Stephen Banker (will someone please locate a
$1,200 hard-disk Victor 9000 for _him_?—Steve deserves it for the help
he gave me); Lindsay Baird, Jr.; Rich Baker; Rob Barnaby; Richard Barry;
Jane Bator of Susan Croft Associates; Nancy Beckman; Mike Bell; John
Bennett; Tom Bennett (he really should be in the top six); Dan Berger;
Robert Bertini, Jr.; Ed Bigelow; Janice Blood; Jay BloomBecker; Jack
Bologna; Ed Boland; Kenneth Bosomworth; Charles Bowie; Mike Bradley;
Barbara Brubacker; Ted Buchholz; David Bunnell; William F. Buckley, Jr.;
John Butler; Robert Campbell; John Carroll; Elizabeth Carlson; Steve
Caswell; “Cheshire Catalyst”; Vinton Cerf; Naren Chitty; Chris
Christiansen; Ward Christensen; Ken Churbuck; Arthur C. Clarke; Joseph
Coates; Jeanette Counsellor; Glenn Cowan; Chris Daly; Martin Dean;
Judy-Lynn del Rey; Dick Diluciano; Kathleen Dixon; Frank Dobisky
(“B.C.E.,” friend and PR man extraordinaire); David Eisen; Margaret
Engel; James Fallows (my Victor guru); Guy Farley; Tom Fay; Paul
Fessler; Jack Fitzgerald; Geoff Fobes; Ron Fowler; Jim Fox; Steve
Frankel (author of _The Compleat Kaypro_); John Fuller; Bill Gladstone
(who, while remaining loyal to his friend Andy Kay, respected my right
to call the shots as I saw them and in fact nurtured this project);
Jerry Glenn; Geoff Goodfellow; Gil Gordon (his new telecommuting
newsletter, _TELECOMMUTING REVIEW_, offers common sense and humanity
along with insight—a combination all too often missing in the computer
world; you may write for subscription information to Telespan
Publishing, 50 W. Palm St., Altadena, Ca. 91001); Sandy Gossman; Etienne
Grandjean; Adam Green; Judy Gregory; Sue Grothoff; Tom Hacker; H. Glen
Haney; Richard Harkness; Charles Harris; Patricia Hausman; James Hayhoe;
William Hole (ace library researcher); Gabe Heilig; Carl Herrman; Jeremy
Joan Hewes; Harold Joseph Highland; Clauda Houston; Hugh Hunt; Peter
Hyams; Chris Jensen; Peter and Trudy Johnson-Lenz; Steve Jongeward; Phil
Judkins; Mitch Kapor; R. A. Karasek; Esther King; Marc King; Carol
Kaplan; Lloyd Kaufman; Andy and David Kay; Kay Keeshen; Richard Koffler;
David LaGrande; Jack LaVriha; John Lewis; Bob Lucas of Trigram Systems
(who let me try out his useful MicroSpell spelling-checker on this
manuscript); Art Lundquist (owner of Clinton Computers); Nick Lyons; Jim
Mahony; Mary Matthews; Judi McClean; Bill McDonald; Jan McGowan; Chodi
McReynolds; John Madden; Rainer Malitze-Goes; Basil Malony; Glenn
Marcus; Clyde Merritt; Maxine Messinger; Eric, Eugene and Rima Meyer;
Greg Minjack; Rolf Moulton; Ian (“Captain Zap”) Murphy; Peter Nero; Rick
Nelson; Jack Nilles; J. Michael Nye; Cliff Odendhal; Dusty Park; Donn
Parker; Ann Patrick; Tom Peifer; Joseph Pelton; Margaret Phanes; Don
Pierce; John O’Mara; Greg Platt of PeopleTalk Associates; Joe Policy;
Michael Pond; Liz, Mitzi, David and the rest of the gang at the Computer
Shoppe; Doug Rickman of The Disk Connection (who donated the copy of
MITE I needed to talk to Arthur C. Clarke); Don Ramsey; Peter Ross
Range; Gary Rinkerman of _The Computer Law Reporter_; Hood Roberts; Mark
Robinson; Harry Rothman (research); Seymour Rubinstein; Marilynne
Rudick; Bruce Rupp; Richard Russell; Gabriel Salvendy (source of
invaluable perspective for the “HAL” chapter); Timothy Schabeck; Alan
Scharf; Joe Schopen; Michael Scott of BCI; William Scrivo; Frank Schiff;
Ezra Shapiro; Joe Shelton; Ben Shneiderman; James Schweitzer; Mike
Slade; Michael Smith, David Snyder; Harry Snyder; Jo Steele; Bill Stern;
Barbara Sturken; Ann Sumner; Jim Swanner (for approving the MITE
donation); Geoff Sweeney; Jeff Tarter; Bonita Taylor, Jerry terHorst;
Chris Torem; Murray Turoff; Terian Tyre; Stanton Umans; Bernard Urban;
Holly Vail; John Verboon; Nick Vergis; Barbara Wagner; Robert Waters;
James Watt; Harvey Welch; William Wewer; David Whiters; Lynn Wilson;
Edward and Patricia Wright; and Kitty Yaney.




                                INDEX ❑


 Accounting software
   Accounting Plus, 75-77
   case example, 73-78

 Acoustically coupled modem, 349–50

 Alphanumeric field, 81–82

 Alternate key, definition of, 47

 AND, 82

 APPEND command, 82

 Applications programs, 23

 Area chart, 331, 333

 ASCII, 352

 Asynchronous communications, 353

 Audit trail, 168, 321

 Automatic dialing, modems, 351–52

 Backups
   avoiding crashes, 192–94
   hard disks, 196–97
   lap-sized portables, 198
   scratch disk, 195

 Bar charts, 332

 Barnaby, Rob, 7, 46, 48, 50–59, 61

 Baseband, 247

 Bidirectional printers, 296

 Bit, 20

 Bit mapping, graphics, 344

 Black boxes, 189

 Block move, definition of, 48

 Blocks, 351

 Boland, Ed, 73–78

 Boldface feature, 299

 Bowie, Charlie, 78–86

 Broadband, 247

 Bubble memory, data security and, 197

 Buffer, 300, 351

 Bugs, 302

 A bus, network lay-out, 244–45

 Buying a computer
   key questions for, 282–92
   printers, 294–301
   software, 302–309
   used computers, 292–93

 Byte, 20

 Calculations, 326

 Captain Zap, 2, 163, 190–191, 193

 Capture ability, modem, 351

 Cataracts, VDTs and, 156

 Cathode ray tube (CRT), Kaypro, 25

 Cells, 85

 Central processing unit (CPU), 20

 Character-based systems, graphics, 344

 Character field, 81

 Characters, size/shape, 142

 Charts, _See_ Graphics.

 Check sum, 351

 Clarke, Arthur, C., 2, 249–70

 CMOS (Complementary Metal Oxide Semiconductor), 197

 Coaxial cable, 246–47

 Colors, use in graphics, 336–37

 Command-driven systems, 71–72

 Command files, 82

 Compatibility, Kaypro and IBM, 20–21

 Composite monitor, 143

 Computer-aided design/computer-aided manufacturing (CAD/CAM), 98

 _Computer Classified Bluebook_, 292

 Computer conferencing, 230

 Computer crime, 9, 163–99
   data diddling, 166–67
   data leakage, 172–73
   dial-up computers, protection of, 190–91
   employee policy and, 179–83
   impersonation, 174–76
   logic bomb, 171
   overwriting as protection, 191–92
   passwords and, 188–89
   piggybacking, 173–74
   protection against, 183–86
   rounding interest downward, 168–69
   sample auditing, 165–66
   scavenging, 172
   simulation, 171–72
   small businesses and, 165
   superzapping, 169–70
   TAP, 175–77
   trapdoor/backdoor, 170–71
   Trojan horse tricks, 167–68
   wiretapping, 173

 Computer furniture, selection of, 147–49

 Computerized pacing, 133

 Computers, future developments, 262–67

 Conductors, 246

 Consultants, 100–115
   aspects of hiring decision, 101, 107–113
   case examples, 101–106
   contracts, guidelines for, 339–42
   microcomputer field and, 105–106
   qualifications of, 112–13
   salesmen/consultants, 112
   sample consulting contract, 114–15

 Contracts, for consultants, 114–15, 339–42

 Control characters, 353

 Control key, definition of, 47

 Correspondence quality, 297

 CP/M (Control Program for Microcomputers), 20, 22–23, 285

 Crashes, disk crashes, 192–93

 Cross-hatch, 331

 CRTs, alternatives to, 160–62

 Cursor, 9, 47

 Curve chart, 331, 333

 Customization, source code, 77

 Daisy wheel printer, 294
   shortcomings of, 296–98

 Data-base programs, 81, 323–30
   calculations, 326–27
   data fields, 324–26
   dBASE II, 81–83
   InfoStar, 323–30
   overhead, 327
   Perfect Filer, 324-27
   sort keys, 327

 Data bits, 350

 Data diddling, 166–67

 Data disk, 24

 Data Encryption Standard (DES), 189

 Data-entry work, 107

 Data fields, 324–26

 Data file, 324

 Data leakage, 172–73

 Data processing, micros and, 125–27

 Data record, 324

 Data security, 163–64
   backups, 192, 194–99
   protecting floppies, 193–94
   scratch disk and, 195
   _See also_ Computer crime.

 Data transfer, windows, 344

 dBASE II, 81–83
   features of, 81–82
   training time, 83

 Dean, Martin, 66–68

 Defaults, 308

 _Designer’s Guide to Creating Charts and Diagrams_ (Holmes), 334

 Dial-up computers, protection of, 190–91

 Digital voltmeter, Kay’s, 18

 Digitizing tablet, 347

 Direct-connect modem, 349–50

 Disk-based word processor, 305

 Disk crashes, 192–93

 Disk drive
   head of, 23
   twin, 23–24

 Disks, rules for protection of, 193–94

 Documentation, 49, 288
   evaluation of, 304

 Dot matrix printer, 294–95
   size of characters, 142

 Double-density feature, Kaypro, 24

 Draft quality, 297

 Dvorak keyboard, 146

 EBCDIC, 352

 Echo back, 352

 Echo mode, 357–58

 EDIT command, 82

 8088 Chip, 20

 Electroluminescent screens, 161

 Electronic bulletin boards, 223

 Electronic Information Exchange System (EIES), 222

 Electronic mail, 228–33
   advantages of, 230–31
   capabilities of, 228–29
   computer conferencing, 230
   negative aspects of, 231–32

 Electropheretic screens, 161

 Encryption, 189

 Environmental factors, _See_ Ergonomics.

 Epson, 43–44, 59

 Ergonomics, 128–62
   air conditioning/heat/ventilation, 152
   aspects of good ergonomics, 129–30
   back/muscular problems, 156–57
   computerized pacing, 133–37
   CRTs, 159–60
   eyestrain, 158–59
   furniture, selection of, 147–49
   health factors, VDTs, 152–54
   keyboard, selection of, 143–47
   lighting, 149–51
   liquid-crystal displays (LCDs), 160–62
   noise reduction, printers, 151–52
   participatory monitoring, 137–38
   psychological problems, 157–58
   radiation from VDTs, 154–56
   screen, selection of, 140–43
   word processing operations, 134–35

 Error-checking, modem, 350

 Escape key, definition of, 47

 Ethernet, 236, 244, 246–47

 Expansion slot, 41

 Extremely low frequency radiation (ELF), 155

 Eyestrain, computer use and, 158–59

 Field, 81

 Field names, 81

 Field type, 81

 Field width, 81

 File
   data base, 81
   definition of, 47

 File locking, 242

 File server, 244

 Filters, for glare, 151

 Flat screens, 160
   weaknesses of, 161–62

 Flow control, 351

 Foot candles, 150

 Full duplex modem, 351

 Glare, 150–51
   filters for, 151

 Global search, 48

 Graphics, 8, 93–99, 331–38
   area charts, 331, 333
   bar charts, 332
   choosing a program, 337–38
   colors, use of, 336–37
   cross-hatch, 331
   curve charts, 331, 333
   graphics tablet, 347
   grid lines, 335
   line charts, 331
   Macintosh, 93–96
   PERT programs and, 98–99
   pie chart, 334
   professionals’ use of, 96–98
   simplicity, importance of, 334–35
   vertical bar charts, 333

 Grid lines, 335

 Ground wires, 246

 Hacking, 176-77

 Half-duplex modem, 351

 Handshaking, 351

 Hard disk
   backups, 196–97
   disk crashes and, 196
   Kaypro 10, 34–35
   storage capacity, 286–87

 Head, of disk drive, 23

 Health factors, computerized pacing and, 137
   _See also_ Ergonomics.

 Heat, VDTs and, 152

 Help messages, 89, 305

 Highland, Harold Joseph, 164–65

 Human-machine link, _See_ Ergonomics.

 IBM, keyboard problems, 145

 Icons, 46

 Impersonation, 174–76

 Information services, 224–26

 InfoStar, 323–30
   commands, 328
   documentation, 327
   shortcomings of, 328–30

 Ink jet printer, 295

 Integrated software, Lotus 1-2-3, 88–91

 Integrity, 199

 Intelligent modems, 352

 Interrupt driven, 241


 Job design, 133–34

 Joystick, 347–48

 Justification, 299

 K, 21

 Kay, Andy, 14–19, 26–30, 36

 Kay, David, 28–29, 31, 37

 Kaypro, 6, 14–35, 37–44
   advertising of, 30–31
   competition to, 43–44
   CP/M operating system, 22–23
   CRT of, 25
   disk drives, 23–24
   flat-screen model, 42–43
   growth of company, 16–20, 26–35
   hard disk, 34–35, 40
   Kaypro 16, 41–42
   Kaypro 10, 34–35, 37
   Kaypro II, 26–27, 40–41
   keyboard, 24–25
   metal case of, 25
   monitor of, 24, 30–31
   Osborne as competitor, 15–16
   public relations campaign, 31–32
   64K Random-Access Memory (RAM), 21–22
   weaknesses of, 38–43
   Z80-style microprocessor, 20–21

 Keyboard
   detachable, 9, 128, 144
   factors in selection of, 143–147
   function keys, 147
   Qwerty vs. Dvorak, 146
   tactile feedback, 145

 Kopischiansky, Frank, 17–18

 Lap-sized portables
   backups, 198
   data security, 197
   static problems, 197–98

 Laser printer, 295

 Letter quality, 297

 Lighting, 149–51
   filters, types of, 151
   glare problem, 150–51
   solutions to problem of, 149–50

 Light pen, 348

 Line chart, 331

 Liquid-crystal displays (LCDs), 160

 LIST command, 82

 Local area networks, 221, 234–48
   a bus topology, 244–45
   baseband/broadband
   capacities, 247
   considerations in choice of, 237–39
   ease of use, 240–41
   Ethernet, 236
   file locking, 242
   installation factors, 243
   interrupt driven, 241
   multi-user-system micro, 235
   protocol, 243
   queuing, 241
   a ring topology, 245–46
   shielded wire, 246–47
   speed and, 239–40
   a star topology, 245
   telephone style, 246
   twisted pair network, 246–47
   user-privilege levels, 242
   WEB network, 234, 236–37, 240–41

 Logical field, 82

 Logic bomb, 171

 Lotus 1-2-3, 88–91
   graphics, 90
   printing options, 90–91

 Lux, 150

 MacInker, 298

 Macintosh, 21
   graphics, 93–96
   mouse, 93

 Macro language, 90

 Mahoney, Jim, 116, 120

 Maintenance
   contracts for, 289–90
   MTBF figures, 289–90

 Mass storage, 286

 “Mature” software, 302

 McDonald, Bill, 18–19, 25–26

 MCI Mail, 225
   _See also_ Electronic mail.

 Memory, random-access
   memory (64K), 21–22

 Menu, 304–305
   definition of, 48

 Menu-driven software, 71

 MEX, 356

 Meyer, Eric, 249–55, 261, 269–70

 Microprism Model 480, 294–95, 297

 Microprocessor, 20
   Z80, 20–21

 MicroPro International, 50, 54, 56–62, 309

 Modem, 300, 349–65
   acoustically coupled, 349
   automatic dialing, 351–52
   bits, 350
   capture ability, 351
   communication with Sri Lanka, 249–70
   direct-connect, 349–50
   full duplex modem, 351
   protocols, 351
   synchronous/asynchronous communications, 353

 MODEM7, 354–65
   instructions for use of, 358–65
   summary of commands, 364–65

 Modular plugs, 349

 Monochrome screen, 143

 Mouse, 9, 93, 345–46

 MS-DOS, 23, 285

 MTFB figures, 289

 Multiplan, 83–85

 Multi-user-system micro, 235

 Munytels, 5, 216–17, 219

 Natural order of recalculation, 90

 Near-letter quality, 297

 NEC, 44

 Networks, 221

 NewWord, 43–44, 59

 Node, 239

 Noise, reduction, from printers, 151–52

 Non-Linear Systems, 15–18, 26, 28, 32

 Null modem, 198

 Numeric field, 81

 Omninet, 244

 Operating systems
   choice in computer buying, 285–86
   CP/M, 22–23
   MS-DOS, 23
   UNIX, 285–86

 Optical character reader, 138

 OR, 82

 Osborne, Adam, 14–15, 32, 36–37

 Osborne Computers
   Kaypro competition, 34–35
   problems of, 6, 32–33

 Overhead, 327

 Overlapping, windows, 344

 Overwriting, 191–92

 Packet switching, 225

 Paperback Software International, 36

 Parallel port, 300

 Participating monitoring, 137

 Passwords, 188–89

 Patch, 308

 PC-TALK III, 356

 Perfect Filer, 324–27

 Perfect Writer, 310–18
   improvements in, 312–15
   Perfect Thesaurus, 317
   pop-up commands menu, 312
   weaknesses of, 312, 316–318

 Pie chart, 334

 Pivot, 43

 Plasma panel, 161

 Point-of-sales system, 75

 Port, 300

 Pregnancy, VDTs and, 152–53, 154

 Printers, 294–301
   bidirectional, 296
   buffer, 300
   compatibility with computer, 300
   cost, 298
   daisy wheel, 295
   ink jet printer, 295
   laser, 295
   noise level, 299
   noise reduction, 151–52
   ports, 300
   printer quality, 297
   repair record, 298
   ribbons, 298
   special features, 299
   thermal-transfer printer, 295
   unidirectional, 296
   volume, 298

 Programmers, 125–26

 Project Evaluation Review Techniques (PERT) software, 98–99

 Proportional spacing, 299

 Protocols
   local area networks, 243
   modems, 351

 Psychological factors, computers and, 157–58

 Public key encryption system, 189

 Queuing, 241

 Quietwriter, 301

 Qwerty keyboard, 146

 Radiation, 154–56
   extremely low-frequency radiation, 155
   VDTs and pregnancy, 152–54
   very low-frequency radiation, 155

 Ragged right margins, 299

 RAM-based word processor, 305

 Random-Access Memory (RAM) 64K, 21–22

 Read-Only Memory (ROM), 21

 Real-time systems, 49

 Records, data base, 81

 Reverse video, 143

 RGB monitor, 143

 Ribbons, for printers, 298

 A ring, network lay-out, 245–46

 Robie, 40

 Rubinstein, Seymour, 7, 45, 48–59, 63

 Scavenging, 172

 Scratch disk, 195

 Screen
   color of, 141, 143
   electroluminescent screens, 161
   electropheretic screens, 161
   factors in selection of, 140–43
   flat screens, 160
   plasma panel, 161
   reverse video, 143

 Scroll, definition of, 47

 Search and replace, definition of, 48

 Seequa Computer Corporation, 15

 Select, 7, 65–72
   training time, 67
   versus WordStar, 67–68

 Serial, port, 300

 Simulation, 171–72

 Software
   accounting, 73–78
   buying of, 319–22
   command-driven, 71–72
   copying of, rationale for, 59–60
   graphics, 331–38
   integrated software, 88
   mail-order buying of, 320–21
   menu-driven, 71–72
   spreadsheet programs, 83–85
   windows, 344-45
   word processors, 45–59, 65–72

 Sorting, 82
   sort keys, 326

 Speech recognition, 262

 Spellbinder, 69

 Spelling checkers, 263

 Split screens, 46

 Spreadsheet programs
   Multiplan, 83–85
   origins of, 83
   requirements of, 89–90
   VisiCalc, 83–84, 87

 A star, network lay-out, 245

 Start bits, 350–$2

 Stop bits, 350–$2

 Storage, hard disk, 286–87

 Structure, data base, 81–$2

 Synchronous communications, 353–$2

 Tactile feedback, 145–$2

 TAP, 175–77

 Telecommuting, 4–$2, 200–227
   clerical workers and, 209–210
   considerations in, 203–206
   data base information
   services, 224–26
   data base requirements, 221–$2
   economic benefits of, 219–$2
   electronic bulletin boards, 223–$2
   energy implications, 219–20
   munytels, 216–17
   networks, 221–$2
   packet switching, 225–$2
   psychological factors, 220–21
   suburban versus downtown
   offices, 214–16

 Telephone style network, 246–$2

 Terminal mode, 357–58

 Terminals, 287–$2

 Thermal-transfer printer, 295–$2

 Tile, windows, 344–$2

 Token passing, 245–46

 Touch-sensitive screen, 347–$2

 Trackball, 348–$2

 Tractor feed, 294–$2

 Training, 115–24
   aspects in choice of
   programs, 115–16, 118–20
   case examples, 116–22
   self-instruction, 124–$2

 Trapdoor/backdoor crime, 170–71

 Trojan horse tricks, 167–68

 Twin disk drives, 23–24

 Twisted pair network, 246–$2

 Unidirectional printers, 296–$2

 UNIX, 235–$2
   operating system of, 285–86

 Used computers, buying guidelines, 292–93

 User-privilege levels, 242–$2

 VDTs
   cataracts and, 156–$2
   radiation and, 154–56

 Ventilation, computers and, 152–$2

 Vertical bar charts, 333–$2

 Very low-frequency (VLF) radiation, 155–$2

 Victor 9000, 271–76

 VisiCalc, 83–84, 87–88

 Voice grade lines, 350

 Wangnet, 235–36, 239, 246–47

 Ward Christensen Protocol, 351, 359

 WEB network, 234, 236–37, 240–41

 What-if tables, 89

 Windows, 62–63, 343–45
   buying guidelines, 344–45

 Wiretapping, 173

 Word length, modem, 350

 Word processing operations, job design, 137–35

 Word processor
   dedicated versus micro, 52
   Perfect Writer, 310–18
   Select, 65–72
   Spellbinder, 69
   terms used, 47–48
   WordStar, 7, 44, 45–59, 285, 302–309

 WordStar, 7, 44–59, 285, 302–309
   accessory programs, 308–309
   anti-botch-up-features, 306–307
   creation of, 53–54
   customization of, 308
   damage limitation, 307
   documentation, 304
   ease of use, 302–304
   error messages, 308
   “Help” levels, 305
   manufacturer support, 309
   maturity of, 302
   power of, 305–306
   search-and-replace feature, 306
   speed of, 305
   strengths of, 46–47
   training time, 67
   word processing terms, 47–48
   WordStar 2000, 60–62, 303, 310–11

 Word wrap, 46

 Work station, 239

 XMODEM Protocol, 351, 359

 XON/XOFF, 351

 Yank-back feature, 307

 Z80 microprocessor, Kaypro, 20–21

                           PLANNING TO OUTFIT
                        YOUR OFFICE OR YOUR HOME
                            WITH COMPUTERS?

                Or are you just interested in the facts
               and fancies surrounding the technological
                    revolution of the 20th century?

              Now, with the help of one of America’s most
             readable computer experts, you’ll cut through
          the Silicon Jungle and find the machine that’s right
       for you. You’ll marvel at the history and folklore of the
            modern computer. You’ll explore the intricacies
                of the electronic superbrains that can:

                    ● lower your costs and increase
                            your efficiency

                     ● instantaneously zip messages
                           across continents

                   ● act as word processors, doubling
                          writers’ production

                    ● keep records in complete depth
                               and detail

                  ● help whip up jazzy charts to whet
                          colleagues’ interest

                    ● increase your earnings within
                           your chosen field

                          Cover printed in USA

------------------------------------------------------------------------

                               Footnotes

------------------------------------------------------------------------

                           Transcriber’s Note

Errors deemed most likely to be the printer’s have been corrected, and
are noted here. Where the intent of the author is ambiguous, a suggested
re-reading is provided here, and the text itself is merely annotated.
The references are to the page and line in the original. Entries with
three numbers refer to the page, the footnote (as resequenced), and the
line within the footnote. The following issues should be noted, along
with the resolutions.

  ii.3     Published in the Uni[t]ed States               Added,

  12.24    Two San Francis[c]o-area authors,              Added.

  24.8     [“]The “B” drive is my =data disk=             Removed.

  24.24    floppy disk[s] drives                          Removed.

  30.35    the very same writer who had le[a]d the        Removed.
           cheering

  31.2     was no match for some more expensive           Removed.
           machines[’].

  50.20    wanted to do.[”]                               Added.

  50.21    and others unfamiliar with computer arcan[i]a. Removed.

  52.13    Then again, your boss may ba[l/w]l you out     Replaced.

  52.27    m[e/o]re programmers are writing               Replaced.

  53.44    WordStar as a programming aid[e] to write      Removed.
           WordStar.

  56.31    to have a manual.[”]                           Added.

  70.42    [“]The user needs to know                      Added.

  71.25.1  account of Sele[k/c]t’s capital shortage       Replaced.

  88.31    have to go through unwield[l]y computer        Removed.
           rigamarole

  89.33    Symphony, for instance[,] lets you flush out   Added.
           formulas

  90.12    and it did [“]all the basic search and sorting Removed.

  94.1     Turn onto Cary Avenue. Follow [M/C]ary         Replaced.

  101.39   the data base grew too unwield[l]y             Removed.

  104.9    was as badly botched as its hardware[.]        Added.

  117.8    said Bill Scrivo[,] an ex-managing editor.     Added.

  120.24   have microprocessors in them.[”]               Added.

  136.36   How much more can they push them[./?]          Replaced.

  138.20   and the same breaks [e]very hour for workers   Added.

  148.40   Angle between upper and low[er] arms:          Added.

  150.8    particularly effective on a num[b]er of        Added.
           newspapers.

  161.22   A second failing of electroluminescent         Added.
           screen[s]

  166.16   mainframes are sending electronic copies to [a Removed.
           ]micros

  170.13   why not zap [a]way the barriers                Added.

  176.4    but it helps.[”]                               Added.

  177.12   Steve Wozniak, the Apple cofounde[e]r          Removed.

  188.20   Your dial-up computer [should] send its name   _sic_:
           until                                          should not

  194.38   You can’t afford to have your material stored  _sic_
           just [in on] your chip.

  204.60.2 “Rising Trend of Computer Age: Employees Who   Added.
           Work at Home;[”] _New York Times_

  206.36   articles sent over the phone lines[?/.]        Replaced.

  210.16   the regular workers cost a[t] least $50.52 a   Added.
           day

  215.1    A COMPARIS[I]ON OF OFFICE EXPENSES PER WORKER  Removed.

  217.25   establish munytels in poorer neighbor[hood]s>. Added.

  220.72.1 Nilles’s[;] three-quarters of a billion        Removed.

  222.6    a vivid contrast to be[ ]suited, tied
           scientists

  222.38   The Source and a rival network,  CompuServe[,] Added.
           each boast

  223.12   “You may even want to type ‘Chuckle,’[”] Trudy Added.
           says,

  225.32   packet-switching techniques[,] can also        Removed.
           increase

  233.25   electronic mail can go from [person] to        _sic_: one
           another                                        person

  241.10   instead of saying you[r] wanted to reach       Removed.

  245.31   the computers don’t[’] mind being “it”         Removed.

  253.9    “Hey, don’t worry[,/.] You’ll learn it much    Replaced.
           faster than I did,”

  257.15   to work together via[ by] computer             Redundant.

  266.92.1 Clarke[’s] conjecture about                    Added.

  267.95.8 with horrid results, e.g., underlin[in]g to    Added.
           the end of the manuscript!!

  272.9    from an AC ex[t]ension cord.                   Added.

  283.2    Are you pre[p]ared to do your homework?        Added.

  259.24   I hoped that benefic[i]ent HALs                Removed.

  267.22   _that_ will be in an attaché case.[’]”         Removed.

  290.27   will pro[b]ably quit then                      Added.

  292.29   are damaged by [a sloppy drive in machine]     _sic_: a
                                                          floppy drive
                                                          in the
                                                          machine (?)

  295.19   so thermal printers were also out of the       Added.
           run[n]ing for me.

  347.5    the mouse-equipped Macintosh for “na[i/ï]ve    Replaced.
           users.”

  348.6    is found most often in arcade-style [styles].  _sic_

  350.20   transmitted information at 300 baud[s]         Removed.

  353.14   An issue more basic than control characters    Replaced.
           i[n/s] whether

  353.19   You can send at 4,800 baud[s]                  Removed.

  379.1    Perfect Fil[l]er, 324-27                       Added.





End of the Project Gutenberg EBook of The Silicon Jungle, by David H. Rothman

*** END OF THIS PROJECT GUTENBERG EBOOK THE SILICON JUNGLE ***

***** This file should be named 54360-0.txt or 54360-0.zip *****
This and all associated files of various formats will be found in:
        http://www.gutenberg.org/5/4/3/6/54360/

Produced by KD Weeks, Juliet Sutherland and the Online
Distributed Proofreading Team at http://www.pgdp.net


Updated editions will replace the previous one--the old editions will
be renamed.

Creating the works from print editions not protected by U.S. copyright
law means that no one owns a United States copyright in these works,
so the Foundation (and you!) can copy and distribute it in the United
States without permission and without paying copyright
royalties. Special rules, set forth in the General Terms of Use part
of this license, apply to copying and distributing Project
Gutenberg-tm electronic works to protect the PROJECT GUTENBERG-tm
concept and trademark. Project Gutenberg is a registered trademark,
and may not be used if you charge for the eBooks, unless you receive
specific permission. If you do not charge anything for copies of this
eBook, complying with the rules is very easy. You may use this eBook
for nearly any purpose such as creation of derivative works, reports,
performances and research. They may be modified and printed and given
away--you may do practically ANYTHING in the United States with eBooks
not protected by U.S. copyright law. Redistribution is subject to the
trademark license, especially commercial redistribution.

START: FULL LICENSE

THE FULL PROJECT GUTENBERG LICENSE
PLEASE READ THIS BEFORE YOU DISTRIBUTE OR USE THIS WORK

To protect the Project Gutenberg-tm mission of promoting the free
distribution of electronic works, by using or distributing this work
(or any other work associated in any way with the phrase "Project
Gutenberg"), you agree to comply with all the terms of the Full
Project Gutenberg-tm License available with this file or online at
www.gutenberg.org/license.

Section 1. General Terms of Use and Redistributing Project
Gutenberg-tm electronic works

1.A. By reading or using any part of this Project Gutenberg-tm
electronic work, you indicate that you have read, understand, agree to
and accept all the terms of this license and intellectual property
(trademark/copyright) agreement. If you do not agree to abide by all
the terms of this agreement, you must cease using and return or
destroy all copies of Project Gutenberg-tm electronic works in your
possession. If you paid a fee for obtaining a copy of or access to a
Project Gutenberg-tm electronic work and you do not agree to be bound
by the terms of this agreement, you may obtain a refund from the
person or entity to whom you paid the fee as set forth in paragraph
1.E.8.

1.B. "Project Gutenberg" is a registered trademark. It may only be
used on or associated in any way with an electronic work by people who
agree to be bound by the terms of this agreement. There are a few
things that you can do with most Project Gutenberg-tm electronic works
even without complying with the full terms of this agreement. See
paragraph 1.C below. There are a lot of things you can do with Project
Gutenberg-tm electronic works if you follow the terms of this
agreement and help preserve free future access to Project Gutenberg-tm
electronic works. See paragraph 1.E below.

1.C. The Project Gutenberg Literary Archive Foundation ("the
Foundation" or PGLAF), owns a compilation copyright in the collection
of Project Gutenberg-tm electronic works. Nearly all the individual
works in the collection are in the public domain in the United
States. If an individual work is unprotected by copyright law in the
United States and you are located in the United States, we do not
claim a right to prevent you from copying, distributing, performing,
displaying or creating derivative works based on the work as long as
all references to Project Gutenberg are removed. Of course, we hope
that you will support the Project Gutenberg-tm mission of promoting
free access to electronic works by freely sharing Project Gutenberg-tm
works in compliance with the terms of this agreement for keeping the
Project Gutenberg-tm name associated with the work. You can easily
comply with the terms of this agreement by keeping this work in the
same format with its attached full Project Gutenberg-tm License when
you share it without charge with others.

This particular work is one of the few individual works protected
by copyright law in the United States and most of the remainder of the
world, included in the Project Gutenberg collection with the
permission of the copyright holder. Information on the copyright owner
for this particular work and the terms of use imposed by the copyright
holder on this work are set forth at the beginning of this work.

1.D. The copyright laws of the place where you are located also govern
what you can do with this work. Copyright laws in most countries are
in a constant state of change. If you are outside the United States,
check the laws of your country in addition to the terms of this
agreement before downloading, copying, displaying, performing,
distributing or creating derivative works based on this work or any
other Project Gutenberg-tm work. The Foundation makes no
representations concerning the copyright status of any work in any
country outside the United States.

1.E. Unless you have removed all references to Project Gutenberg:

1.E.1. The following sentence, with active links to, or other
immediate access to, the full Project Gutenberg-tm License must appear
prominently whenever any copy of a Project Gutenberg-tm work (any work
on which the phrase "Project Gutenberg" appears, or with which the
phrase "Project Gutenberg" is associated) is accessed, displayed,
performed, viewed, copied or distributed:

  This eBook is for the use of anyone anywhere in the United States and
  most other parts of the world at no cost and with almost no
  restrictions whatsoever. You may copy it, give it away or re-use it
  under the terms of the Project Gutenberg License included with this
  eBook or online at www.gutenberg.org. If you are not located in the
  United States, you'll have to check the laws of the country where you
  are located before using this ebook.

1.E.2. If an individual Project Gutenberg-tm electronic work is
derived from texts not protected by U.S. copyright law (does not
contain a notice indicating that it is posted with permission of the
copyright holder), the work can be copied and distributed to anyone in
the United States without paying any fees or charges. If you are
redistributing or providing access to a work with the phrase "Project
Gutenberg" associated with or appearing on the work, you must comply
either with the requirements of paragraphs 1.E.1 through 1.E.7 or
obtain permission for the use of the work and the Project Gutenberg-tm
trademark as set forth in paragraphs 1.E.8 or 1.E.9.

1.E.3. If an individual Project Gutenberg-tm electronic work is posted
with the permission of the copyright holder, your use and distribution
must comply with both paragraphs 1.E.1 through 1.E.7 and any
additional terms imposed by the copyright holder. Additional terms
will be linked to the Project Gutenberg-tm License for all works
posted with the permission of the copyright holder found at the
beginning of this work.

1.E.4. Do not unlink or detach or remove the full Project Gutenberg-tm
License terms from this work, or any files containing a part of this
work or any other work associated with Project Gutenberg-tm.

1.E.5. Do not copy, display, perform, distribute or redistribute this
electronic work, or any part of this electronic work, without
prominently displaying the sentence set forth in paragraph 1.E.1 with
active links or immediate access to the full terms of the Project
Gutenberg-tm License.

1.E.6. You may convert to and distribute this work in any binary,
compressed, marked up, nonproprietary or proprietary form, including
any word processing or hypertext form. However, if you provide access
to or distribute copies of a Project Gutenberg-tm work in a format
other than "Plain Vanilla ASCII" or other format used in the official
version posted on the official Project Gutenberg-tm web site
(www.gutenberg.org), you must, at no additional cost, fee or expense
to the user, provide a copy, a means of exporting a copy, or a means
of obtaining a copy upon request, of the work in its original "Plain
Vanilla ASCII" or other form. Any alternate format must include the
full Project Gutenberg-tm License as specified in paragraph 1.E.1.

1.E.7. Do not charge a fee for access to, viewing, displaying,
performing, copying or distributing any Project Gutenberg-tm works
unless you comply with paragraph 1.E.8 or 1.E.9.

1.E.8. You may charge a reasonable fee for copies of or providing
access to or distributing Project Gutenberg-tm electronic works
provided that

* You pay a royalty fee of 20% of the gross profits you derive from
  the use of Project Gutenberg-tm works calculated using the method
  you already use to calculate your applicable taxes. The fee is owed
  to the owner of the Project Gutenberg-tm trademark, but he has
  agreed to donate royalties under this paragraph to the Project
  Gutenberg Literary Archive Foundation. Royalty payments must be paid
  within 60 days following each date on which you prepare (or are
  legally required to prepare) your periodic tax returns. Royalty
  payments should be clearly marked as such and sent to the Project
  Gutenberg Literary Archive Foundation at the address specified in
  Section 4, "Information about donations to the Project Gutenberg
  Literary Archive Foundation."

* You provide a full refund of any money paid by a user who notifies
  you in writing (or by e-mail) within 30 days of receipt that s/he
  does not agree to the terms of the full Project Gutenberg-tm
  License. You must require such a user to return or destroy all
  copies of the works possessed in a physical medium and discontinue
  all use of and all access to other copies of Project Gutenberg-tm
  works.

* You provide, in accordance with paragraph 1.F.3, a full refund of
  any money paid for a work or a replacement copy, if a defect in the
  electronic work is discovered and reported to you within 90 days of
  receipt of the work.

* You comply with all other terms of this agreement for free
  distribution of Project Gutenberg-tm works.

1.E.9. If you wish to charge a fee or distribute a Project
Gutenberg-tm electronic work or group of works on different terms than
are set forth in this agreement, you must obtain permission in writing
from both the Project Gutenberg Literary Archive Foundation and The
Project Gutenberg Trademark LLC, the owner of the Project Gutenberg-tm
trademark. Contact the Foundation as set forth in Section 3 below.

1.F.

1.F.1. Project Gutenberg volunteers and employees expend considerable
effort to identify, do copyright research on, transcribe and proofread
works not protected by U.S. copyright law in creating the Project
Gutenberg-tm collection. Despite these efforts, Project Gutenberg-tm
electronic works, and the medium on which they may be stored, may
contain "Defects," such as, but not limited to, incomplete, inaccurate
or corrupt data, transcription errors, a copyright or other
intellectual property infringement, a defective or damaged disk or
other medium, a computer virus, or computer codes that damage or
cannot be read by your equipment.

1.F.2. LIMITED WARRANTY, DISCLAIMER OF DAMAGES - Except for the "Right
of Replacement or Refund" described in paragraph 1.F.3, the Project
Gutenberg Literary Archive Foundation, the owner of the Project
Gutenberg-tm trademark, and any other party distributing a Project
Gutenberg-tm electronic work under this agreement, disclaim all
liability to you for damages, costs and expenses, including legal
fees. YOU AGREE THAT YOU HAVE NO REMEDIES FOR NEGLIGENCE, STRICT
LIABILITY, BREACH OF WARRANTY OR BREACH OF CONTRACT EXCEPT THOSE
PROVIDED IN PARAGRAPH 1.F.3. YOU AGREE THAT THE FOUNDATION, THE
TRADEMARK OWNER, AND ANY DISTRIBUTOR UNDER THIS AGREEMENT WILL NOT BE
LIABLE TO YOU FOR ACTUAL, DIRECT, INDIRECT, CONSEQUENTIAL, PUNITIVE OR
INCIDENTAL DAMAGES EVEN IF YOU GIVE NOTICE OF THE POSSIBILITY OF SUCH
DAMAGE.

1.F.3. LIMITED RIGHT OF REPLACEMENT OR REFUND - If you discover a
defect in this electronic work within 90 days of receiving it, you can
receive a refund of the money (if any) you paid for it by sending a
written explanation to the person you received the work from. If you
received the work on a physical medium, you must return the medium
with your written explanation. The person or entity that provided you
with the defective work may elect to provide a replacement copy in
lieu of a refund. If you received the work electronically, the person
or entity providing it to you may choose to give you a second
opportunity to receive the work electronically in lieu of a refund. If
the second copy is also defective, you may demand a refund in writing
without further opportunities to fix the problem.

1.F.4. Except for the limited right of replacement or refund set forth
in paragraph 1.F.3, this work is provided to you 'AS-IS', WITH NO
OTHER WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PURPOSE.

1.F.5. Some states do not allow disclaimers of certain implied
warranties or the exclusion or limitation of certain types of
damages. If any disclaimer or limitation set forth in this agreement
violates the law of the state applicable to this agreement, the
agreement shall be interpreted to make the maximum disclaimer or
limitation permitted by the applicable state law. The invalidity or
unenforceability of any provision of this agreement shall not void the
remaining provisions.

1.F.6. INDEMNITY - You agree to indemnify and hold the Foundation, the
trademark owner, any agent or employee of the Foundation, anyone
providing copies of Project Gutenberg-tm electronic works in
accordance with this agreement, and any volunteers associated with the
production, promotion and distribution of Project Gutenberg-tm
electronic works, harmless from all liability, costs and expenses,
including legal fees, that arise directly or indirectly from any of
the following which you do or cause to occur: (a) distribution of this
or any Project Gutenberg-tm work, (b) alteration, modification, or
additions or deletions to any Project Gutenberg-tm work, and (c) any
Defect you cause.

Section 2. Information about the Mission of Project Gutenberg-tm

Project Gutenberg-tm is synonymous with the free distribution of
electronic works in formats readable by the widest variety of
computers including obsolete, old, middle-aged and new computers. It
exists because of the efforts of hundreds of volunteers and donations
from people in all walks of life.

Volunteers and financial support to provide volunteers with the
assistance they need are critical to reaching Project Gutenberg-tm's
goals and ensuring that the Project Gutenberg-tm collection will
remain freely available for generations to come. In 2001, the Project
Gutenberg Literary Archive Foundation was created to provide a secure
and permanent future for Project Gutenberg-tm and future
generations. To learn more about the Project Gutenberg Literary
Archive Foundation and how your efforts and donations can help, see
Sections 3 and 4 and the Foundation information page at
www.gutenberg.org Section 3. Information about the Project Gutenberg
Literary Archive Foundation

The Project Gutenberg Literary Archive Foundation is a non profit
501(c)(3) educational corporation organized under the laws of the
state of Mississippi and granted tax exempt status by the Internal
Revenue Service. The Foundation's EIN or federal tax identification
number is 64-6221541. Contributions to the Project Gutenberg Literary
Archive Foundation are tax deductible to the full extent permitted by
U.S. federal laws and your state's laws.

The Foundation's principal office is in Fairbanks, Alaska, with the
mailing address: PO Box 750175, Fairbanks, AK 99775, but its
volunteers and employees are scattered throughout numerous
locations. Its business office is located at 809 North 1500 West, Salt
Lake City, UT 84116, (801) 596-1887. Email contact links and up to
date contact information can be found at the Foundation's web site and
official page at www.gutenberg.org/contact

For additional contact information:

    Dr. Gregory B. Newby
    Chief Executive and Director
    gbnewby@pglaf.org

Section 4. Information about Donations to the Project Gutenberg
Literary Archive Foundation

Project Gutenberg-tm depends upon and cannot survive without wide
spread public support and donations to carry out its mission of
increasing the number of public domain and licensed works that can be
freely distributed in machine readable form accessible by the widest
array of equipment including outdated equipment. Many small donations
($1 to $5,000) are particularly important to maintaining tax exempt
status with the IRS.

The Foundation is committed to complying with the laws regulating
charities and charitable donations in all 50 states of the United
States. Compliance requirements are not uniform and it takes a
considerable effort, much paperwork and many fees to meet and keep up
with these requirements. We do not solicit donations in locations
where we have not received written confirmation of compliance. To SEND
DONATIONS or determine the status of compliance for any particular
state visit www.gutenberg.org/donate

While we cannot and do not solicit contributions from states where we
have not met the solicitation requirements, we know of no prohibition
against accepting unsolicited donations from donors in such states who
approach us with offers to donate.

International donations are gratefully accepted, but we cannot make
any statements concerning tax treatment of donations received from
outside the United States. U.S. laws alone swamp our small staff.

Please check the Project Gutenberg Web pages for current donation
methods and addresses. Donations are accepted in a number of other
ways including checks, online payments and credit card donations. To
donate, please visit: www.gutenberg.org/donate

Section 5. General Information About Project Gutenberg-tm electronic works.

Professor Michael S. Hart was the originator of the Project
Gutenberg-tm concept of a library of electronic works that could be
freely shared with anyone. For forty years, he produced and
distributed Project Gutenberg-tm eBooks with only a loose network of
volunteer support.

Project Gutenberg-tm eBooks are often created from several printed
editions, all of which are confirmed as not protected by copyright in
the U.S. unless a copyright notice is included. Thus, we do not
necessarily keep eBooks in compliance with any particular paper
edition.

Most people start at our Web site which has the main PG search
facility: www.gutenberg.org

This Web site includes information about Project Gutenberg-tm,
including how to make donations to the Project Gutenberg Literary
Archive Foundation, how to help produce our new eBooks, and how to
subscribe to our email newsletter to hear about new eBooks.

